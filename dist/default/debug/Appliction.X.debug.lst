

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 03 17:57:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 23/03/2023 GMT
    89                           ; 
    90                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F4620 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   000000                     
   123                           	psect	idataBANK0
   124   004438                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _lat_registers
   128   004438  89                 	db	137
   129   004439  0F                 	db	15
   130   00443A  8A                 	db	138
   131   00443B  0F                 	db	15
   132   00443C  8B                 	db	139
   133   00443D  0F                 	db	15
   134   00443E  8C                 	db	140
   135   00443F  0F                 	db	15
   136   004440  8D                 	db	141
   137   004441  0F                 	db	15
   138                           
   139                           ;initializer for _tris_registers
   140   004442  92                 	db	146
   141   004443  0F                 	db	15
   142   004444  93                 	db	147
   143   004445  0F                 	db	15
   144   004446  94                 	db	148
   145   004447  0F                 	db	15
   146   004448  95                 	db	149
   147   004449  0F                 	db	15
   148   00444A  96                 	db	150
   149   00444B  0F                 	db	15
   150                           
   151                           ;initializer for _ccp_obj
   152   00444C  02                 	db	2
   153   00444D  00                 	db	0
   154   00444E  0C                 	db	12
   155   00444F  12                 	db	18
   156   004450  00                 	db	0
   157   004451  00                 	db	0
   158   004452  00                 	db	0
   159   004453  00                 	db	0
   160   004454  00                 	db	0
   161   004455  00                 	db	0
   162   004456  00                 	db	0
   163   004457  1388               	dw	5000
   164   004459  0000               	dw	0
   165   00445B  05                 	db	5
   166                           
   167                           ;initializer for _lcd_1
   168   00445C  03                 	db	3
   169   00445D  0B                 	db	11
   170   00445E  13                 	db	19
   171   00445F  1B                 	db	27
   172   004460  23                 	db	35
   173   004461  2B                 	db	43
   174   004462  33                 	db	51
   175   004463  3B                 	db	59
   176   004464  0A                 	db	10
   177   004465  02                 	db	2
   178                           
   179                           ;initializer for _Lm35
   180   004466  6E                 	db	low _ADC_callback
   181   004467  45                 	db	high _ADC_callback
   182   004468  00                 	db	0
   183   004469  00                 	db	0
   184   00446A  05                 	db	5
   185   00446B  05                 	db	5
   186   00446C  03                 	db	3
   187                           
   188                           ;initializer for _motor_1
   189   00446D  1A                 	db	26
   190   00446E  22                 	db	34
   191                           
   192                           	psect	idataBANK1
   193   004588                     __pidataBANK1:
   194                           	callstack 0
   195                           
   196                           ;initializer for _port_registers
   197   004588  80                 	db	128
   198   004589  0F                 	db	15
   199   00458A  81                 	db	129
   200   00458B  0F                 	db	15
   201   00458C  82                 	db	130
   202   00458D  0F                 	db	15
   203   00458E  83                 	db	131
   204   00458F  0F                 	db	15
   205   004590  84                 	db	132
   206   004591  0F                 	db	15
   207                           
   208                           ;initializer for _kp1
   209   004592  02                 	db	2
   210   004593  0A                 	db	10
   211   004594  12                 	db	18
   212   004595  1A                 	db	26
   213   004596  62                 	db	98
   214   004597  6A                 	db	106
   215   004598  72                 	db	114
   216                           
   217                           	psect	smallconst
   218   001000                     __psmallconst:
   219                           	callstack 0
   220   001000  00                 	db	0
   221   001001                     _btn_values:
   222                           	callstack 0
   223   001001  31                 	db	49
   224   001002  32                 	db	50
   225   001003  33                 	db	51
   226   001004  34                 	db	52
   227   001005  35                 	db	53
   228   001006  36                 	db	54
   229   001007  37                 	db	55
   230   001008  38                 	db	56
   231   001009  39                 	db	57
   232   00100A  2A                 	db	42
   233   00100B  30                 	db	48
   234   00100C  23                 	db	35
   235   00100D                     __end_of_btn_values:
   236                           	callstack 0
   237   000000                     _TMR3L	set	4018
   238   000000                     _TMR3H	set	4019
   239   000000                     _TMR2	set	4044
   240   000000                     _TMR1L	set	4046
   241   000000                     _TMR1H	set	4047
   242   000000                     _T1CONbits	set	4045
   243   000000                     _T0CONbits	set	4053
   244   000000                     _INTCON2bits	set	4081
   245   000000                     _INTCON3bits	set	4080
   246   000000                     _EECON2	set	4007
   247   000000                     _CCPR2L	set	4027
   248   000000                     _CCPR2H	set	4028
   249   000000                     _CCPR1L	set	4030
   250   000000                     _CCPR1H	set	4031
   251   000000                     _ADRESL	set	4035
   252   000000                     _ADRESH	set	4036
   253   000000                     _ADCON1bits	set	4033
   254   000000                     _INTCONbits	set	4082
   255   000000                     _TRISD	set	3989
   256   000000                     _TRISC	set	3988
   257   000000                     _TRISB	set	3987
   258   000000                     _TRISE	set	3990
   259   00100D                     STR_4:
   260   00100D  54                 	db	84	;'T'
   261   00100E  65                 	db	101	;'e'
   262   00100F  6D                 	db	109	;'m'
   263   001010  70                 	db	112	;'p'
   264   001011  65                 	db	101	;'e'
   265   001012  72                 	db	114	;'r'
   266   001013  61                 	db	97	;'a'
   267   001014  74                 	db	116	;'t'
   268   001015  75                 	db	117	;'u'
   269   001016  72                 	db	114	;'r'
   270   001017  65                 	db	101	;'e'
   271   001018  20                 	db	32
   272   001019  3A                 	db	58	;':'
   273   00101A  20                 	db	32
   274   00101B  00                 	db	0
   275   00101C                     STR_5:
   276   00101C  46                 	db	70	;'F'
   277   00101D  61                 	db	97	;'a'
   278   00101E  6E                 	db	110	;'n'
   279   00101F  20                 	db	32
   280   001020  4C                 	db	76	;'L'
   281   001021  65                 	db	101	;'e'
   282   001022  76                 	db	118	;'v'
   283   001023  65                 	db	101	;'e'
   284   001024  6C                 	db	108	;'l'
   285   001025  20                 	db	32
   286   001026  3A                 	db	58	;':'
   287   001027  2D                 	db	45
   288   001028  20                 	db	32
   289   001029  00                 	db	0
   290   00102A                     STR_10:
   291   00102A  4C                 	db	76	;'L'
   292   00102B  65                 	db	101	;'e'
   293   00102C  76                 	db	118	;'v'
   294   00102D  65                 	db	101	;'e'
   295   00102E  6C                 	db	108	;'l'
   296   00102F  20                 	db	32
   297   001030  31                 	db	49	;'1'
   298   001031  00                 	db	0
   299   001032                     STR_9:
   300   001032  4C                 	db	76	;'L'
   301   001033  65                 	db	101	;'e'
   302   001034  76                 	db	118	;'v'
   303   001035  65                 	db	101	;'e'
   304   001036  6C                 	db	108	;'l'
   305   001037  20                 	db	32
   306   001038  32                 	db	50	;'2'
   307   001039  00                 	db	0
   308   00103A                     STR_8:
   309   00103A  4C                 	db	76	;'L'
   310   00103B  65                 	db	101	;'e'
   311   00103C  76                 	db	118	;'v'
   312   00103D  65                 	db	101	;'e'
   313   00103E  6C                 	db	108	;'l'
   314   00103F  20                 	db	32
   315   001040  33                 	db	51	;'3'
   316   001041  00                 	db	0
   317   001042                     STR_7:
   318   001042  4C                 	db	76	;'L'
   319   001043  65                 	db	101	;'e'
   320   001044  76                 	db	118	;'v'
   321   001045  65                 	db	101	;'e'
   322   001046  6C                 	db	108	;'l'
   323   001047  20                 	db	32
   324   001048  34                 	db	52	;'4'
   325   001049  00                 	db	0
   326   00104A                     STR_6:
   327   00104A  4C                 	db	76	;'L'
   328   00104B  65                 	db	101	;'e'
   329   00104C  76                 	db	118	;'v'
   330   00104D  65                 	db	101	;'e'
   331   00104E  6C                 	db	108	;'l'
   332   00104F  20                 	db	32
   333   001050  35                 	db	53	;'5'
   334   001051  00                 	db	0
   335   001052                     STR_11:
   336   001052  46                 	db	70	;'F'
   337   001053  61                 	db	97	;'a'
   338   001054  6E                 	db	110	;'n'
   339   001055  20                 	db	32
   340   001056  4F                 	db	79	;'O'
   341   001057  46                 	db	70	;'F'
   342   001058  46                 	db	70	;'F'
   343   001059  00                 	db	0
   344   00105A                     STR_1:
   345   00105A  25                 	db	37
   346   00105B  69                 	db	105	;'i'
   347   00105C  00                 	db	0
   348   00105D  00                 	db	0	; dummy byte at the end
   349   000000                     
   350                           	psect	nvBANK0
   351   0000FF                     __pnvBANK0:
   352                           	callstack 0
   353   0000FF                     _ret:
   354                           	callstack 0
   355   0000FF                     	ds	1
   356   000000                     _PORTBbits	set	3969
   357   000000                     _PIE1bits	set	3997
   358   000000                     _ADCON2bits	set	4032
   359   000000                     _ADCON0bits	set	4034
   360   000000                     _LATA	set	3977
   361   000000                     _PORTE	set	3972
   362   000000                     _PORTD	set	3971
   363   000000                     _PORTC	set	3970
   364   000000                     _PORTB	set	3969
   365   000000                     _PORTA	set	3968
   366   000000                     _TRISA	set	3986
   367   000000                     _PIE2bits	set	4000
   368   000000                     _CCP2CONbits	set	4026
   369   000000                     _CCP1CONbits	set	4029
   370   000000                     _PIR1bits	set	3998
   371   000000                     _T2CONbits	set	4042
   372   000000                     _PR2	set	4043
   373   000000                     _EECON1bits	set	4006
   374   000000                     _EEDATA	set	4008
   375   000000                     _EEADR	set	4009
   376   000000                     _EEADRH	set	4010
   377   000000                     _T3CONbits	set	4017
   378   000000                     _PIR2bits	set	4001
   379   000000                     _LATE	set	3981
   380   000000                     _LATD	set	3980
   381   000000                     _LATC	set	3979
   382   000000                     _LATB	set	3978
   383   000000                     _TMR0H	set	4055
   384   000000                     _TMR0L	set	4054
   385                           
   386                           ; #config settings
   387                           
   388                           	psect	cinit
   389   003F66                     __pcinit:
   390                           	callstack 0
   391   003F66                     start_initialization:
   392                           	callstack 0
   393   003F66                     __initialization:
   394                           	callstack 0
   395                           
   396                           ; Initialize objects allocated to BANK1 (17 bytes)
   397                           ; load TBLPTR registers with __pidataBANK1
   398   003F66  0E88               	movlw	low __pidataBANK1
   399   003F68  6EF6               	movwf	tblptrl,c
   400   003F6A  0E45               	movlw	high __pidataBANK1
   401   003F6C  6EF7               	movwf	tblptrh,c
   402   003F6E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   403   003F70  6EF8               	movwf	tblptru,c
   404   003F72  EE01  F03C         	lfsr	0,__pdataBANK1
   405   003F76  EE10 F011          	lfsr	1,17
   406   003F7A                     copy_data0:
   407   003F7A  0009               	tblrd		*+
   408   003F7C  CFF5 FFEE          	movff	tablat,postinc0
   409   003F80  50E5               	movf	postdec1,w,c
   410   003F82  50E1               	movf	fsr1l,w,c
   411   003F84  E1FA               	bnz	copy_data0
   412                           
   413                           ; Initialize objects allocated to BANK0 (55 bytes)
   414                           ; load TBLPTR registers with __pidataBANK0
   415   003F86  0E38               	movlw	low __pidataBANK0
   416   003F88  6EF6               	movwf	tblptrl,c
   417   003F8A  0E44               	movlw	high __pidataBANK0
   418   003F8C  6EF7               	movwf	tblptrh,c
   419   003F8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   420   003F90  6EF8               	movwf	tblptru,c
   421   003F92  EE00  F0BC         	lfsr	0,__pdataBANK0
   422   003F96  EE10 F037          	lfsr	1,55
   423   003F9A                     copy_data1:
   424   003F9A  0009               	tblrd		*+
   425   003F9C  CFF5 FFEE          	movff	tablat,postinc0
   426   003FA0  50E5               	movf	postdec1,w,c
   427   003FA2  50E1               	movf	fsr1l,w,c
   428   003FA4  E1FA               	bnz	copy_data1
   429                           
   430                           ; Clear objects allocated to BANK1 (60 bytes)
   431   003FA6  EE01  F000         	lfsr	0,__pbssBANK1
   432   003FAA  0E3C               	movlw	60
   433   003FAC                     clear_0:
   434   003FAC  6AEE               	clrf	postinc0,c
   435   003FAE  06E8               	decf	wreg,f,c
   436   003FB0  E1FD               	bnz	clear_0
   437                           
   438                           ; Clear objects allocated to BANK0 (60 bytes)
   439   003FB2  EE00  F080         	lfsr	0,__pbssBANK0
   440   003FB6  0E3C               	movlw	60
   441   003FB8                     clear_1:
   442   003FB8  6AEE               	clrf	postinc0,c
   443   003FBA  06E8               	decf	wreg,f,c
   444   003FBC  E1FD               	bnz	clear_1
   445                           
   446                           ; Clear objects allocated to COMRAM (12 bytes)
   447   003FBE  EE00  F067         	lfsr	0,__pbssCOMRAM
   448   003FC2  0E0C               	movlw	12
   449   003FC4                     clear_2:
   450   003FC4  6AEE               	clrf	postinc0,c
   451   003FC6  06E8               	decf	wreg,f,c
   452   003FC8  E1FD               	bnz	clear_2
   453   003FCA                     end_of_initialization:
   454                           	callstack 0
   455   003FCA                     __end_of__initialization:
   456                           	callstack 0
   457   003FCA  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   458   003FCC  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   459   003FCE  0100               	movlb	0
   460   003FD0  EFE4  F012         	goto	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMRAM
   463   000067                     __pbssCOMRAM:
   464                           	callstack 0
   465   000067                     _RBx_flag:
   466                           	callstack 0
   467   000067                     	ds	4
   468   00006B                     _temp:
   469                           	callstack 0
   470   00006B                     	ds	2
   471   00006D                     _Flag:
   472                           	callstack 0
   473   00006D                     	ds	1
   474   00006E                     led_initialize@F3201:
   475                           	callstack 0
   476   00006E                     	ds	1
   477   00006F                     relay_toggle@F3212:
   478                           	callstack 0
   479   00006F                     	ds	1
   480   000070                     relay_turn_off@F3207:
   481                           	callstack 0
   482   000070                     	ds	1
   483   000071                     relay_turn_on@F3202:
   484                           	callstack 0
   485   000071                     	ds	1
   486   000072                     relay_initialize@F3197:
   487                           	callstack 0
   488   000072                     	ds	1
   489                           
   490                           	psect	bssBANK0
   491   000080                     __pbssBANK0:
   492                           	callstack 0
   493   000080                     _RBx_Call_Back:
   494                           	callstack 0
   495   000080                     	ds	16
   496   000090                     _INTx_Call_Back:
   497                           	callstack 0
   498   000090                     	ds	6
   499   000096                     _width:
   500                           	callstack 0
   501   000096                     	ds	2
   502   000098                     _prec:
   503                           	callstack 0
   504   000098                     	ds	2
   505   00009A                     _timer3_preload:
   506                           	callstack 0
   507   00009A                     	ds	2
   508   00009C                     _Timer3InterruptHandeler:
   509                           	callstack 0
   510   00009C                     	ds	2
   511   00009E                     _Timer2InterruptHandeler:
   512                           	callstack 0
   513   00009E                     	ds	2
   514   0000A0                     _timer1_preload:
   515                           	callstack 0
   516   0000A0                     	ds	2
   517   0000A2                     _Timer1InterruptHandeler:
   518                           	callstack 0
   519   0000A2                     	ds	2
   520   0000A4                     _timer0_preload:
   521                           	callstack 0
   522   0000A4                     	ds	2
   523   0000A6                     _Timer0InterruptHandeler:
   524                           	callstack 0
   525   0000A6                     	ds	2
   526   0000A8                     CCP1_Compare_write_value@F3299:
   527                           	callstack 0
   528   0000A8                     	ds	2
   529   0000AA                     _CCP2_InterruptHandeler:
   530                           	callstack 0
   531   0000AA                     	ds	2
   532   0000AC                     _CCP1_InterruptHandeler:
   533                           	callstack 0
   534   0000AC                     	ds	2
   535   0000AE                     _ADC_InterruptCallBack:
   536                           	callstack 0
   537   0000AE                     	ds	2
   538   0000B0                     _flags:
   539                           	callstack 0
   540   0000B0                     	ds	1
   541   0000B1                     _timer2_preload:
   542                           	callstack 0
   543   0000B1                     	ds	1
   544   0000B2                     led_toggle@F3216:
   545                           	callstack 0
   546   0000B2                     	ds	1
   547   0000B3                     led_turn_off@F3211:
   548                           	callstack 0
   549   0000B3                     	ds	1
   550   0000B4                     led_turn_on@F3206:
   551                           	callstack 0
   552   0000B4                     	ds	1
   553   0000B5                     _timer2:
   554                           	callstack 0
   555   0000B5                     	ds	5
   556   0000BA                     _res1:
   557                           	callstack 0
   558   0000BA                     	ds	2
   559                           
   560                           	psect	dataBANK0
   561   0000BC                     __pdataBANK0:
   562                           	callstack 0
   563   0000BC                     _lat_registers:
   564                           	callstack 0
   565   0000BC                     	ds	10
   566   0000C6                     _tris_registers:
   567                           	callstack 0
   568   0000C6                     	ds	10
   569   0000D0                     _ccp_obj:
   570                           	callstack 0
   571   0000D0                     	ds	16
   572   0000E0                     _lcd_1:
   573                           	callstack 0
   574   0000E0                     	ds	10
   575   0000EA                     _Lm35:
   576                           	callstack 0
   577   0000EA                     	ds	7
   578   0000F1                     _motor_1:
   579                           	callstack 0
   580   0000F1                     	ds	2
   581                           
   582                           	psect	bssBANK1
   583   000100                     __pbssBANK1:
   584                           	callstack 0
   585   000100                     	ds	11
   586   00010B                     	ds	6
   587   000111                     _dbuf:
   588                           	callstack 0
   589   000111                     	ds	32
   590   000131                     _Temp_value:
   591                           	callstack 0
   592   000131                     	ds	11
   593                           
   594                           	psect	dataBANK1
   595   00013C                     __pdataBANK1:
   596                           	callstack 0
   597   00013C                     _port_registers:
   598                           	callstack 0
   599   00013C                     	ds	10
   600   000146                     _kp1:
   601                           	callstack 0
   602   000146                     	ds	7
   603                           
   604                           	psect	cstackBANK1
   605   00014D                     __pcstackBANK1:
   606                           	callstack 0
   607   00014D                     _CCP_Init$4329:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x0
   611   00014D                     	ds	4
   612   000151                     _CCP_Init$4330:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x4
   616   000151                     	ds	4
   617   000155                     CCP_Init@ret:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x8
   621   000155                     	ds	1
   622                           
   623                           	psect	cstackBANK0
   624   0000F3                     __pcstackBANK0:
   625                           	callstack 0
   626   0000F3                     CCP_Init@ccp_obj:
   627                           	callstack 0
   628   0000F3                     CCP_PWM_set_DutyCycle@ccp_obj:
   629                           	callstack 0
   630   0000F3                     convert_short_to_string@Temp_String:
   631                           	callstack 0
   632                           
   633                           ; 6 bytes @ 0x0
   634   0000F3                     	ds	2
   635   0000F5                     ??_CCP_Init:
   636   0000F5                     CCP_PWM_set_DutyCycle@Duty_value:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x2
   640   0000F5                     	ds	1
   641   0000F6                     ??_CCP_PWM_set_DutyCycle:
   642                           
   643                           ; 1 bytes @ 0x3
   644   0000F6                     	ds	2
   645   0000F8                     CCP_PWM_set_DutyCycle@ret:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x5
   649   0000F8                     	ds	1
   650   0000F9                     convert_short_to_string@ret:
   651                           	callstack 0
   652   0000F9                     _CCP_PWM_set_DutyCycle$4298:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x6
   656   0000F9                     	ds	1
   657   0000FA                     convert_short_to_string@DataCounter:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x7
   661   0000FA                     	ds	3
   662   0000FD                     CCP_PWM_set_DutyCycle@l_duty_temp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xA
   666   0000FD                     	ds	2
   667                           
   668                           	psect	cstackCOMRAM
   669   000001                     __pcstackCOMRAM:
   670                           	callstack 0
   671   000001                     RB4_ISR@RB4_source:
   672                           	callstack 0
   673   000001                     RB5_ISR@RB5_source:
   674                           	callstack 0
   675   000001                     RB6_ISR@RB6_source:
   676                           	callstack 0
   677   000001                     RB7_ISR@RB7_source:
   678                           	callstack 0
   679   000001                     ADC_Read_Result@ADC_obj:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x0
   683   000001                     	ds	2
   684   000003                     ADC_Read_Result@Resualt:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x2
   688   000003                     	ds	2
   689   000005                     ??_ADC_Read_Result:
   690                           
   691                           ; 1 bytes @ 0x4
   692   000005                     	ds	3
   693   000008                     ADC_Read_Result@ret:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x7
   697   000008                     	ds	1
   698   000009                     ??_Interrupt_manager:
   699                           
   700                           ; 1 bytes @ 0x8
   701   000009                     	ds	4
   702   00000D                     ??_ADC_configure_Channel:
   703   00000D                     ?___awdiv:
   704                           	callstack 0
   705   00000D                     ?___awmod:
   706                           	callstack 0
   707   00000D                     ?___lwdiv:
   708                           	callstack 0
   709   00000D                     ?___xxtofl:
   710                           	callstack 0
   711   00000D                     ADC_Start_Conversion@ADC_obj:
   712                           	callstack 0
   713   00000D                     CCP_PWM_Start@ccp_obj:
   714                           	callstack 0
   715   00000D                     CCP_PWM_Stop@ccp_obj:
   716                           	callstack 0
   717   00000D                     CCP_Timer_config@ccp_obj:
   718                           	callstack 0
   719   00000D                     gpio_pin_direction_initialize@pin:
   720                           	callstack 0
   721   00000D                     gpio_pin_write_logic@pin:
   722                           	callstack 0
   723   00000D                     Timer2_init@TM2_obj:
   724                           	callstack 0
   725   00000D                     ___awdiv@dividend:
   726                           	callstack 0
   727   00000D                     ___awmod@dividend:
   728                           	callstack 0
   729   00000D                     ___lwdiv@dividend:
   730                           	callstack 0
   731   00000D                     memset@dest:
   732                           	callstack 0
   733   00000D                     fputc@c:
   734                           	callstack 0
   735   00000D                     ___xxtofl@val:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0xC
   739   00000D                     	ds	2
   740   00000F                     ??_gpio_pin_direction_initialize:
   741   00000F                     ??_CCP_Timer_config:
   742   00000F                     ??_Timer2_init:
   743   00000F                     ADC_Start_Conversion@ret:
   744                           	callstack 0
   745   00000F                     ADC_configure_Channel@channel:
   746                           	callstack 0
   747   00000F                     gpio_pin_write_logic@log:
   748                           	callstack 0
   749   00000F                     ___awdiv@divisor:
   750                           	callstack 0
   751   00000F                     ___awmod@divisor:
   752                           	callstack 0
   753   00000F                     ___lwdiv@divisor:
   754                           	callstack 0
   755   00000F                     memset@c:
   756                           	callstack 0
   757   00000F                     fputc@fp:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0xE
   761   00000F                     	ds	1
   762   000010                     ??_gpio_pin_write_logic:
   763   000010                     CCP_PWM_Start@ret:
   764                           	callstack 0
   765   000010                     CCP_PWM_Stop@ret:
   766                           	callstack 0
   767   000010                     Timer2_init@ret:
   768                           	callstack 0
   769   000010                     ADC_init@ADC_obj:
   770                           	callstack 0
   771   000010                     ADC_Select_Channel@ADC_obj:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xF
   775   000010                     	ds	1
   776   000011                     ??_fputc:
   777   000011                     ??___xxtofl:
   778   000011                     ___awdiv@counter:
   779                           	callstack 0
   780   000011                     ___awmod@counter:
   781                           	callstack 0
   782   000011                     ___lwdiv@quotient:
   783                           	callstack 0
   784   000011                     memset@n:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x10
   788   000011                     	ds	1
   789   000012                     ??_ADC_init:
   790   000012                     ADC_Select_Channel@channel:
   791                           	callstack 0
   792   000012                     ___awdiv@sign:
   793                           	callstack 0
   794   000012                     ___awmod@sign:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x11
   798   000012                     	ds	1
   799   000013                     ??_memset:
   800   000013                     ??_ADC_Select_Channel:
   801   000013                     ?_abs:
   802                           	callstack 0
   803   000013                     ADC_init@ret:
   804                           	callstack 0
   805   000013                     ___lwdiv@counter:
   806                           	callstack 0
   807   000013                     ___awdiv@quotient:
   808                           	callstack 0
   809   000013                     abs@a:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x12
   813   000013                     	ds	1
   814   000014                     ADC_Select_Channel@ret:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x13
   818   000014                     	ds	1
   819   000015                     ??_abs:
   820   000015                     gpio_pin_direction_initialize@ret:
   821                           	callstack 0
   822   000015                     ___xxtofl@sign:
   823                           	callstack 0
   824   000015                     ADC_StartConversion_INT@ADC_obj:
   825                           	callstack 0
   826   000015                     memset@k:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x14
   830   000015                     	ds	1
   831   000016                     gpio_pin_write_logic@ret:
   832                           	callstack 0
   833   000016                     ___xxtofl@exp:
   834                           	callstack 0
   835   000016                     fputs@s:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x15
   839   000016                     	ds	1
   840   000017                     ADC_StartConversion_INT@channel:
   841                           	callstack 0
   842   000017                     lcd_8bit_send_enable@lcd_obj:
   843                           	callstack 0
   844   000017                     dc_motor_move_right@dc_motor:
   845                           	callstack 0
   846   000017                     gpio_pin_initialize@pin:
   847                           	callstack 0
   848   000017                     memset@s:
   849                           	callstack 0
   850   000017                     ___xxtofl@arg:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x16
   854   000017                     	ds	1
   855   000018                     ADC_StartConversion_INT@l_conversion_status:
   856                           	callstack 0
   857   000018                     fputs@fp:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x17
   861   000018                     	ds	1
   862   000019                     ??_gpio_pin_initialize:
   863   000019                     lcd_8bit_send_enable@ret:
   864                           	callstack 0
   865   000019                     dc_motor_move_right@ret:
   866                           	callstack 0
   867   000019                     ADC_StartConversion_INT@ret:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x18
   871   000019                     	ds	1
   872   00001A                     gpio_pin_initialize@ret:
   873                           	callstack 0
   874   00001A                     fputs@c:
   875                           	callstack 0
   876   00001A                     lcd_8bit_send_command@lcd_obj:
   877                           	callstack 0
   878   00001A                     lcd_8bit_send_char@lcd_obj:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x19
   882   00001A                     	ds	1
   883   00001B                     ?___flmul:
   884                           	callstack 0
   885   00001B                     dc_motor_initialize@dc_motor:
   886                           	callstack 0
   887   00001B                     fputs@i:
   888                           	callstack 0
   889   00001B                     ___flmul@b:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x1A
   893   00001B                     	ds	1
   894   00001C                     lcd_8bit_send_command@command:
   895                           	callstack 0
   896   00001C                     lcd_8bit_send_char@chr:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x1B
   900   00001C                     	ds	1
   901   00001D                     ??_lcd_8bit_send_command:
   902   00001D                     ??_lcd_8bit_send_char:
   903   00001D                     dc_motor_initialize@ret:
   904                           	callstack 0
   905   00001D                     pad@fp:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x1C
   909   00001D                     	ds	2
   910   00001F                     lcd_8bit_send_command@ret:
   911                           	callstack 0
   912   00001F                     lcd_8bit_send_char@ret:
   913                           	callstack 0
   914   00001F                     pad@buf:
   915                           	callstack 0
   916   00001F                     ___flmul@a:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x1E
   920   00001F                     	ds	1
   921   000020                     lcd_8bit_send_command@i:
   922                           	callstack 0
   923   000020                     lcd_8bit_send_char@i:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x1F
   927   000020                     	ds	1
   928   000021                     pad@p:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x20
   932   000021                     	ds	1
   933   000022                     lcd_8bit_initialize@lcd_obj:
   934                           	callstack 0
   935   000022                     lcd_8bit_send_string@lcd_obj:
   936                           	callstack 0
   937   000022                     lcd_8bit_set_cursor@lcd_obj:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x21
   941   000022                     	ds	1
   942   000023                     ??___flmul:
   943   000023                     ??_pad:
   944                           
   945                           ; 1 bytes @ 0x22
   946   000023                     	ds	1
   947   000024                     ??_lcd_8bit_initialize:
   948   000024                     lcd_8bit_set_cursor@row:
   949                           	callstack 0
   950   000024                     lcd_8bit_send_string@string:
   951                           	callstack 0
   952   000024                     pad@i:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x23
   956   000024                     	ds	1
   957   000025                     lcd_8bit_set_cursor@column:
   958                           	callstack 0
   959   000025                     lcd_8bit_initialize@i:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x24
   963   000025                     	ds	1
   964   000026                     ??_lcd_8bit_set_cursor:
   965   000026                     lcd_8bit_send_string@ret:
   966                           	callstack 0
   967   000026                     pad@w:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x25
   971   000026                     	ds	1
   972   000027                     lcd_8bit_initialize@ret:
   973                           	callstack 0
   974   000027                     ___flmul@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x26
   978   000027                     	ds	1
   979   000028                     lcd_8bit_set_cursor@ret:
   980                           	callstack 0
   981   000028                     ___flmul@aexp:
   982                           	callstack 0
   983   000028                     dtoa@fp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x27
   987   000028                     	ds	1
   988   000029                     lcd_8bit_send_string_pos@lcd_obj:
   989                           	callstack 0
   990   000029                     ___flmul@grs:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x28
   994   000029                     	ds	1
   995   00002A                     dtoa@d:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x29
   999   00002A                     	ds	1
  1000   00002B                     lcd_8bit_send_string_pos@row:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x2A
  1004   00002B                     	ds	1
  1005   00002C                     lcd_8bit_send_string_pos@column:
  1006                           	callstack 0
  1007   00002C                     _dtoa$3827:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2B
  1011   00002C                     	ds	1
  1012   00002D                     ___flmul@bexp:
  1013                           	callstack 0
  1014   00002D                     lcd_8bit_send_string_pos@string:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x2C
  1018   00002D                     	ds	1
  1019   00002E                     dtoa@p:
  1020                           	callstack 0
  1021   00002E                     ___flmul@prod:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x2D
  1025   00002E                     	ds	1
  1026   00002F                     lcd_8bit_send_string_pos@ret:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x2E
  1030   00002F                     	ds	1
  1031   000030                     dtoa@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x2F
  1035   000030                     	ds	2
  1036   000032                     dtoa@s:
  1037                           	callstack 0
  1038   000032                     ___flmul@temp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x31
  1042   000032                     	ds	1
  1043   000033                     dtoa@i:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x32
  1047   000033                     	ds	1
  1048   000034                     ?___fldiv:
  1049                           	callstack 0
  1050   000034                     ___fldiv@b:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x33
  1054   000034                     	ds	1
  1055   000035                     vfpfcnvrt@fp:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x34
  1059   000035                     	ds	2
  1060   000037                     vfpfcnvrt@fmt:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x36
  1064   000037                     	ds	1
  1065   000038                     ___fldiv@a:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x37
  1069   000038                     	ds	1
  1070   000039                     vfpfcnvrt@ap:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x38
  1074   000039                     	ds	2
  1075   00003B                     ??_vfpfcnvrt:
  1076                           
  1077                           ; 1 bytes @ 0x3A
  1078   00003B                     	ds	1
  1079   00003C                     ??___fldiv:
  1080                           
  1081                           ; 1 bytes @ 0x3B
  1082   00003C                     	ds	1
  1083   00003D                     vfpfcnvrt@convarg:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x3C
  1087   00003D                     	ds	3
  1088   000040                     ___fldiv@rem:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x3F
  1092   000040                     	ds	1
  1093   000041                     vfpfcnvrt@cp:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x40
  1097   000041                     	ds	2
  1098   000043                     ?_vfprintf:
  1099                           	callstack 0
  1100   000043                     vfprintf@fp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x42
  1104   000043                     	ds	1
  1105   000044                     ___fldiv@sign:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x43
  1109   000044                     	ds	1
  1110   000045                     ___fldiv@new_exp:
  1111                           	callstack 0
  1112   000045                     vfprintf@fmt:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x44
  1116   000045                     	ds	2
  1117   000047                     vfprintf@ap:
  1118                           	callstack 0
  1119   000047                     ___fldiv@grs:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x46
  1123   000047                     	ds	2
  1124   000049                     vfprintf@cfmt:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x48
  1128   000049                     	ds	2
  1129   00004B                     ?_sprintf:
  1130                           	callstack 0
  1131   00004B                     ___fldiv@bexp:
  1132                           	callstack 0
  1133   00004B                     sprintf@s:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x4A
  1137   00004B                     	ds	1
  1138   00004C                     ___fldiv@aexp:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x4B
  1142   00004C                     	ds	1
  1143   00004D                     ?___fladd:
  1144                           	callstack 0
  1145   00004D                     sprintf@fmt:
  1146                           	callstack 0
  1147   00004D                     ___fladd@b:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x4C
  1151   00004D                     	ds	4
  1152   000051                     ___fladd@a:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x50
  1156   000051                     	ds	2
  1157   000053                     sprintf@ap:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x52
  1161   000053                     	ds	2
  1162   000055                     ??___fladd:
  1163   000055                     sprintf@f:
  1164                           	callstack 0
  1165                           
  1166                           ; 12 bytes @ 0x54
  1167   000055                     	ds	4
  1168   000059                     ___fladd@signs:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x58
  1172   000059                     	ds	1
  1173   00005A                     ___fladd@aexp:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x59
  1177   00005A                     	ds	1
  1178   00005B                     ___fladd@bexp:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x5A
  1182   00005B                     	ds	1
  1183   00005C                     ___fladd@grs:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x5B
  1187   00005C                     	ds	1
  1188   00005D                     ?___fltol:
  1189                           	callstack 0
  1190   00005D                     ___fltol@f1:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x5C
  1194   00005D                     	ds	4
  1195   000061                     ??___fltol:
  1196   000061                     convert_short_to_string@value:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x60
  1200   000061                     	ds	2
  1201   000063                     convert_short_to_string@str:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x62
  1205   000063                     	ds	2
  1206   000065                     ___fltol@sign1:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x64
  1210   000065                     	ds	1
  1211   000066                     ___fltol@exp1:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x65
  1215   000066                     	ds	1
  1216   000067                     
  1217                           ; 1 bytes @ 0x66
  1218 ;;
  1219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1220 ;;
  1221 ;; *************** function _main *****************
  1222 ;; Defined at:
  1223 ;;		line 21 in file "application.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2  1317[None  ] int 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels required when called: 13
  1243 ;; This function calls:
  1244 ;;		_ADC_StartConversion_INT
  1245 ;;		_CCP_PWM_Start
  1246 ;;		_CCP_PWM_Stop
  1247 ;;		_CCP_PWM_set_DutyCycle
  1248 ;;		___flmul
  1249 ;;		___fltol
  1250 ;;		___lwdiv
  1251 ;;		___xxtofl
  1252 ;;		_application_initialize
  1253 ;;		_convert_short_to_string
  1254 ;;		_dc_motor_move_right
  1255 ;;		_lcd_8bit_send_string_pos
  1256 ;; This function is called by:
  1257 ;;		Startup code after reset
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text0
  1262   0025C8                     __ptext0:
  1263                           	callstack 0
  1264   0025C8                     _main:
  1265                           	callstack 18
  1266   0025C8                     
  1267                           ;application.c: 23:     application_initialize();
  1268   0025C8  ECE2  F022         	call	_application_initialize	;wreg free
  1269   0025CC                     
  1270                           ;application.c: 24:     ret = lcd_8bit_send_string_pos(&lcd_1,1,1,"Temperature : ");
  1271   0025CC  0EE0               	movlw	low _lcd_1
  1272   0025CE  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1273   0025D0  0E00               	movlw	high _lcd_1
  1274   0025D2  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1275   0025D4  0E01               	movlw	1
  1276   0025D6  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1277   0025D8  0E01               	movlw	1
  1278   0025DA  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1279   0025DC  0E0D               	movlw	low STR_4
  1280   0025DE  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1281   0025E0  0E10               	movlw	high STR_4
  1282   0025E2  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1283   0025E4  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1284   0025E8  0100               	movlb	0	; () banked
  1285   0025EA  6FFF               	movwf	_ret& (0+255),b
  1286   0025EC                     
  1287                           ; BSR set to: 0
  1288                           ;application.c: 25:     ret = lcd_8bit_send_string_pos(&lcd_1,3,1,"Fan Level :- ");
  1289   0025EC  0EE0               	movlw	low _lcd_1
  1290   0025EE  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1291   0025F0  0E00               	movlw	high _lcd_1
  1292   0025F2  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1293   0025F4  0E03               	movlw	3
  1294   0025F6  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1295   0025F8  0E01               	movlw	1
  1296   0025FA  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1297   0025FC  0E1C               	movlw	low STR_5
  1298   0025FE  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1299   002600  0E10               	movlw	high STR_5
  1300   002602  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1301   002604  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1302   002608  0100               	movlb	0	; () banked
  1303   00260A  6FFF               	movwf	_ret& (0+255),b
  1304                           
  1305                           ;application.c: 26:     ret = dc_motor_move_right(&motor_1);
  1306   00260C  0EF1               	movlw	low _motor_1
  1307   00260E  6E17               	movwf	dc_motor_move_right@dc_motor^0,c
  1308   002610  0E00               	movlw	high _motor_1
  1309   002612  6E18               	movwf	(dc_motor_move_right@dc_motor+1)^0,c
  1310   002614  EC5A  F021         	call	_dc_motor_move_right	;wreg free
  1311   002618  0100               	movlb	0	; () banked
  1312   00261A  6FFF               	movwf	_ret& (0+255),b
  1313   00261C                     l10074:
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;application.c: 28:     {;application.c: 29:         if(Flag == 0)
  1317   00261C  506D               	movf	_Flag^0,w,c	;volatile
  1318   00261E  A4D8               	btfss	status,2,c
  1319   002620  EF14  F013         	goto	u10781
  1320   002624  EF16  F013         	goto	u10780
  1321   002628                     u10781:
  1322   002628  EF22  F013         	goto	l10080
  1323   00262C                     u10780:
  1324   00262C                     
  1325                           ; BSR set to: 0
  1326                           ;application.c: 30:         {;application.c: 31:             ret=ADC_StartConversion_INT
      +                          (&Lm35,ADC_CHANNEL0);
  1327   00262C  0EEA               	movlw	low _Lm35
  1328   00262E  6E15               	movwf	ADC_StartConversion_INT@ADC_obj^0,c
  1329   002630  0E00               	movlw	high _Lm35
  1330   002632  6E16               	movwf	(ADC_StartConversion_INT@ADC_obj+1)^0,c
  1331   002634  0E00               	movlw	0
  1332   002636  6E17               	movwf	ADC_StartConversion_INT@channel^0,c
  1333   002638  EC9F  F021         	call	_ADC_StartConversion_INT	;wreg free
  1334   00263C  0100               	movlb	0	; () banked
  1335   00263E  6FFF               	movwf	_ret& (0+255),b
  1336   002640                     
  1337                           ; BSR set to: 0
  1338                           ;application.c: 32:             Flag = 1;
  1339   002640  0E01               	movlw	1
  1340   002642  6E6D               	movwf	_Flag^0,c	;volatile
  1341   002644                     l10080:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;application.c: 34:         temp = res1 * 4.8828125f;
  1345   002644  0E00               	movlw	0
  1346   002646  6E1F               	movwf	___flmul@a^0,c
  1347   002648  0E40               	movlw	64
  1348   00264A  6E20               	movwf	(___flmul@a+1)^0,c
  1349   00264C  0E9C               	movlw	156
  1350   00264E  6E21               	movwf	(___flmul@a+2)^0,c
  1351   002650  0E40               	movlw	64
  1352   002652  6E22               	movwf	(___flmul@a+3)^0,c
  1353   002654  C0BA  F00D         	movff	_res1,___xxtofl@val
  1354   002658  C0BB  F00E         	movff	_res1+1,___xxtofl@val+1
  1355   00265C  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1356   00265E  6A10               	clrf	(___xxtofl@val+3)^0,c
  1357   002660  0E00               	movlw	0
  1358   002662  EC98  F015         	call	___xxtofl
  1359   002666  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1360   00266A  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1361   00266E  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1362   002672  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1363   002676  EC3F  F00D         	call	___flmul	;wreg free
  1364   00267A  C01B  F05D         	movff	?___flmul,___fltol@f1
  1365   00267E  C01C  F05E         	movff	?___flmul+1,___fltol@f1+1
  1366   002682  C01D  F05F         	movff	?___flmul+2,___fltol@f1+2
  1367   002686  C01E  F060         	movff	?___flmul+3,___fltol@f1+3
  1368   00268A  ECE2  F01A         	call	___fltol	;wreg free
  1369   00268E  C05D  F06B         	movff	?___fltol,_temp
  1370   002692  C05E  F06C         	movff	?___fltol+1,_temp+1
  1371   002696                     
  1372                           ;application.c: 35:         temp /= 10;
  1373   002696  C06B  F00D         	movff	_temp,___lwdiv@dividend
  1374   00269A  C06C  F00E         	movff	_temp+1,___lwdiv@dividend+1
  1375   00269E  0E00               	movlw	0
  1376   0026A0  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  1377   0026A2  0E0A               	movlw	10
  1378   0026A4  6E0F               	movwf	___lwdiv@divisor^0,c
  1379   0026A6  EC79  F01F         	call	___lwdiv	;wreg free
  1380   0026AA  C00D  F06B         	movff	?___lwdiv,_temp
  1381   0026AE  C00E  F06C         	movff	?___lwdiv+1,_temp+1
  1382   0026B2                     
  1383                           ;application.c: 37:         ret = convert_short_to_string(temp,Temp_value);
  1384   0026B2  C06B  F061         	movff	_temp,convert_short_to_string@value
  1385   0026B6  C06C  F062         	movff	_temp+1,convert_short_to_string@value+1
  1386   0026BA  0E31               	movlw	low _Temp_value
  1387   0026BC  6E63               	movwf	convert_short_to_string@str^0,c
  1388   0026BE  0E01               	movlw	high _Temp_value
  1389   0026C0  6E64               	movwf	(convert_short_to_string@str+1)^0,c
  1390   0026C2  ECFB  F01C         	call	_convert_short_to_string	;wreg free
  1391   0026C6  0100               	movlb	0	; () banked
  1392   0026C8  6FFF               	movwf	_ret& (0+255),b
  1393   0026CA                     
  1394                           ; BSR set to: 0
  1395                           ;application.c: 38:         ret = lcd_8bit_send_string_pos(&lcd_1,1,15,Temp_value);
  1396   0026CA  0EE0               	movlw	low _lcd_1
  1397   0026CC  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1398   0026CE  0E00               	movlw	high _lcd_1
  1399   0026D0  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1400   0026D2  0E01               	movlw	1
  1401   0026D4  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1402   0026D6  0E0F               	movlw	15
  1403   0026D8  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1404   0026DA  0E31               	movlw	low _Temp_value
  1405   0026DC  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1406   0026DE  0E01               	movlw	high _Temp_value
  1407   0026E0  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1408   0026E2  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1409   0026E6  0100               	movlb	0	; () banked
  1410   0026E8  6FFF               	movwf	_ret& (0+255),b
  1411   0026EA                     
  1412                           ; BSR set to: 0
  1413                           ;application.c: 40:         if(temp>=90)
  1414   0026EA  506C               	movf	(_temp+1)^0,w,c
  1415   0026EC  E109               	bnz	u10790
  1416   0026EE  0E5A               	movlw	90
  1417   0026F0  5C6B               	subwf	_temp^0,w,c
  1418   0026F2  A0D8               	btfss	status,0,c
  1419   0026F4  EF7E  F013         	goto	u10791
  1420   0026F8  EF80  F013         	goto	u10790
  1421   0026FC                     u10791:
  1422   0026FC  EFA4  F013         	goto	l10096
  1423   002700                     u10790:
  1424   002700                     
  1425                           ; BSR set to: 0
  1426                           ;application.c: 41:         {;application.c: 42:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,100);
  1427   002700  0ED0               	movlw	low _ccp_obj
  1428   002702  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1429   002704  0E00               	movlw	high _ccp_obj
  1430   002706  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1431   002708  0E64               	movlw	100
  1432   00270A  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1433   00270C  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1434   002710  0100               	movlb	0	; () banked
  1435   002712  6FFF               	movwf	_ret& (0+255),b
  1436   002714                     
  1437                           ; BSR set to: 0
  1438                           ;application.c: 43:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 5");
  1439   002714  0EE0               	movlw	low _lcd_1
  1440   002716  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1441   002718  0E00               	movlw	high _lcd_1
  1442   00271A  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1443   00271C  0E04               	movlw	4
  1444   00271E  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1445   002720  0E01               	movlw	1
  1446   002722  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1447   002724  0E4A               	movlw	low STR_6
  1448   002726  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1449   002728  0E10               	movlw	high STR_6
  1450   00272A  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1451   00272C  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1452   002730  0100               	movlb	0	; () banked
  1453   002732  6FFF               	movwf	_ret& (0+255),b
  1454   002734                     l10094:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;application.c: 44:             ret = CCP_PWM_Start(&ccp_obj);
  1458   002734  0ED0               	movlw	low _ccp_obj
  1459   002736  6E0D               	movwf	CCP_PWM_Start@ccp_obj^0,c
  1460   002738  0E00               	movlw	high _ccp_obj
  1461   00273A  6E0E               	movwf	(CCP_PWM_Start@ccp_obj+1)^0,c
  1462   00273C  ECEA  F01F         	call	_CCP_PWM_Start	;wreg free
  1463   002740  0100               	movlb	0	; () banked
  1464   002742  6FFF               	movwf	_ret& (0+255),b
  1465                           
  1466                           ;application.c: 45:         }
  1467   002744  EF0E  F013         	goto	l10074
  1468   002748                     l10096:
  1469                           
  1470                           ; BSR set to: 0
  1471   002748  506C               	movf	(_temp+1)^0,w,c
  1472   00274A  E109               	bnz	u10800
  1473   00274C  0E46               	movlw	70
  1474   00274E  5C6B               	subwf	_temp^0,w,c
  1475   002750  A0D8               	btfss	status,0,c
  1476   002752  EFAD  F013         	goto	u10801
  1477   002756  EFAF  F013         	goto	u10800
  1478   00275A                     u10801:
  1479   00275A  EFCB  F013         	goto	l10104
  1480   00275E                     u10800:
  1481   00275E                     
  1482                           ; BSR set to: 0
  1483                           ;application.c: 47:         {;application.c: 48:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,80);
  1484   00275E  0ED0               	movlw	low _ccp_obj
  1485   002760  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1486   002762  0E00               	movlw	high _ccp_obj
  1487   002764  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1488   002766  0E50               	movlw	80
  1489   002768  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1490   00276A  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1491   00276E  0100               	movlb	0	; () banked
  1492   002770  6FFF               	movwf	_ret& (0+255),b
  1493   002772                     
  1494                           ; BSR set to: 0
  1495                           ;application.c: 49:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 4");
  1496   002772  0EE0               	movlw	low _lcd_1
  1497   002774  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1498   002776  0E00               	movlw	high _lcd_1
  1499   002778  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1500   00277A  0E04               	movlw	4
  1501   00277C  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1502   00277E  0E01               	movlw	1
  1503   002780  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1504   002782  0E42               	movlw	low STR_7
  1505   002784  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1506   002786  0E10               	movlw	high STR_7
  1507   002788  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1508   00278A  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1509   00278E  0100               	movlb	0	; () banked
  1510   002790  6FFF               	movwf	_ret& (0+255),b
  1511   002792  EF9A  F013         	goto	l10094
  1512   002796                     l10104:
  1513                           
  1514                           ; BSR set to: 0
  1515   002796  506C               	movf	(_temp+1)^0,w,c
  1516   002798  E109               	bnz	u10810
  1517   00279A  0E32               	movlw	50
  1518   00279C  5C6B               	subwf	_temp^0,w,c
  1519   00279E  A0D8               	btfss	status,0,c
  1520   0027A0  EFD4  F013         	goto	u10811
  1521   0027A4  EFD6  F013         	goto	u10810
  1522   0027A8                     u10811:
  1523   0027A8  EFF2  F013         	goto	l10112
  1524   0027AC                     u10810:
  1525   0027AC                     
  1526                           ; BSR set to: 0
  1527                           ;application.c: 53:         {;application.c: 54:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,60);
  1528   0027AC  0ED0               	movlw	low _ccp_obj
  1529   0027AE  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1530   0027B0  0E00               	movlw	high _ccp_obj
  1531   0027B2  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1532   0027B4  0E3C               	movlw	60
  1533   0027B6  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1534   0027B8  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1535   0027BC  0100               	movlb	0	; () banked
  1536   0027BE  6FFF               	movwf	_ret& (0+255),b
  1537   0027C0                     
  1538                           ; BSR set to: 0
  1539                           ;application.c: 55:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 3");
  1540   0027C0  0EE0               	movlw	low _lcd_1
  1541   0027C2  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1542   0027C4  0E00               	movlw	high _lcd_1
  1543   0027C6  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1544   0027C8  0E04               	movlw	4
  1545   0027CA  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1546   0027CC  0E01               	movlw	1
  1547   0027CE  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1548   0027D0  0E3A               	movlw	low STR_8
  1549   0027D2  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1550   0027D4  0E10               	movlw	high STR_8
  1551   0027D6  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1552   0027D8  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1553   0027DC  0100               	movlb	0	; () banked
  1554   0027DE  6FFF               	movwf	_ret& (0+255),b
  1555   0027E0  EF9A  F013         	goto	l10094
  1556   0027E4                     l10112:
  1557                           
  1558                           ; BSR set to: 0
  1559   0027E4  506C               	movf	(_temp+1)^0,w,c
  1560   0027E6  E109               	bnz	u10820
  1561   0027E8  0E1E               	movlw	30
  1562   0027EA  5C6B               	subwf	_temp^0,w,c
  1563   0027EC  A0D8               	btfss	status,0,c
  1564   0027EE  EFFB  F013         	goto	u10821
  1565   0027F2  EFFD  F013         	goto	u10820
  1566   0027F6                     u10821:
  1567   0027F6  EF19  F014         	goto	l10120
  1568   0027FA                     u10820:
  1569   0027FA                     
  1570                           ; BSR set to: 0
  1571                           ;application.c: 59:         {;application.c: 60:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,40);
  1572   0027FA  0ED0               	movlw	low _ccp_obj
  1573   0027FC  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1574   0027FE  0E00               	movlw	high _ccp_obj
  1575   002800  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1576   002802  0E28               	movlw	40
  1577   002804  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1578   002806  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1579   00280A  0100               	movlb	0	; () banked
  1580   00280C  6FFF               	movwf	_ret& (0+255),b
  1581   00280E                     
  1582                           ; BSR set to: 0
  1583                           ;application.c: 61:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 2");
  1584   00280E  0EE0               	movlw	low _lcd_1
  1585   002810  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1586   002812  0E00               	movlw	high _lcd_1
  1587   002814  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1588   002816  0E04               	movlw	4
  1589   002818  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1590   00281A  0E01               	movlw	1
  1591   00281C  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1592   00281E  0E32               	movlw	low STR_9
  1593   002820  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1594   002822  0E10               	movlw	high STR_9
  1595   002824  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1596   002826  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1597   00282A  0100               	movlb	0	; () banked
  1598   00282C  6FFF               	movwf	_ret& (0+255),b
  1599   00282E  EF9A  F013         	goto	l10094
  1600   002832                     l10120:
  1601                           
  1602                           ; BSR set to: 0
  1603   002832  506C               	movf	(_temp+1)^0,w,c
  1604   002834  E109               	bnz	u10830
  1605   002836  0E16               	movlw	22
  1606   002838  5C6B               	subwf	_temp^0,w,c
  1607   00283A  A0D8               	btfss	status,0,c
  1608   00283C  EF22  F014         	goto	u10831
  1609   002840  EF24  F014         	goto	u10830
  1610   002844                     u10831:
  1611   002844  EF40  F014         	goto	l10128
  1612   002848                     u10830:
  1613   002848                     
  1614                           ; BSR set to: 0
  1615                           ;application.c: 65:         {;application.c: 66:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,20);
  1616   002848  0ED0               	movlw	low _ccp_obj
  1617   00284A  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1618   00284C  0E00               	movlw	high _ccp_obj
  1619   00284E  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1620   002850  0E14               	movlw	20
  1621   002852  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1622   002854  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1623   002858  0100               	movlb	0	; () banked
  1624   00285A  6FFF               	movwf	_ret& (0+255),b
  1625   00285C                     
  1626                           ; BSR set to: 0
  1627                           ;application.c: 67:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 1");
  1628   00285C  0EE0               	movlw	low _lcd_1
  1629   00285E  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1630   002860  0E00               	movlw	high _lcd_1
  1631   002862  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1632   002864  0E04               	movlw	4
  1633   002866  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1634   002868  0E01               	movlw	1
  1635   00286A  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1636   00286C  0E2A               	movlw	low STR_10
  1637   00286E  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1638   002870  0E10               	movlw	high STR_10
  1639   002872  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1640   002874  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1641   002878  0100               	movlb	0	; () banked
  1642   00287A  6FFF               	movwf	_ret& (0+255),b
  1643   00287C  EF9A  F013         	goto	l10094
  1644   002880                     l10128:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;application.c: 71:         {;application.c: 72:             ret = CCP_PWM_Stop(&ccp_obj
      +                          );
  1648   002880  0ED0               	movlw	low _ccp_obj
  1649   002882  6E0D               	movwf	CCP_PWM_Stop@ccp_obj^0,c
  1650   002884  0E00               	movlw	high _ccp_obj
  1651   002886  6E0E               	movwf	(CCP_PWM_Stop@ccp_obj+1)^0,c
  1652   002888  EC57  F020         	call	_CCP_PWM_Stop	;wreg free
  1653   00288C  0100               	movlb	0	; () banked
  1654   00288E  6FFF               	movwf	_ret& (0+255),b
  1655   002890                     
  1656                           ; BSR set to: 0
  1657                           ;application.c: 73:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Fan OFF");
  1658   002890  0EE0               	movlw	low _lcd_1
  1659   002892  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1660   002894  0E00               	movlw	high _lcd_1
  1661   002896  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1662   002898  0E04               	movlw	4
  1663   00289A  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1664   00289C  0E01               	movlw	1
  1665   00289E  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1666   0028A0  0E52               	movlw	low STR_11
  1667   0028A2  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1668   0028A4  0E10               	movlw	high STR_11
  1669   0028A6  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1670   0028A8  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1671   0028AC  0100               	movlb	0	; () banked
  1672   0028AE  6FFF               	movwf	_ret& (0+255),b
  1673   0028B0  EF0E  F013         	goto	l10074
  1674   0028B4  EF07  F000         	goto	start
  1675   0028B8                     __end_of_main:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _lcd_8bit_send_string_pos *****************
  1679 ;; Defined at:
  1680 ;;		line 374 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  lcd_obj         2   40[COMRAM] PTR const struct .
  1683 ;;		 -> lcd_1(10), 
  1684 ;;  row             1   42[COMRAM] unsigned char 
  1685 ;;  column          1   43[COMRAM] unsigned char 
  1686 ;;  string          2   44[COMRAM] PTR unsigned char 
  1687 ;;		 -> STR_11(8), STR_10(8), STR_9(8), STR_8(8), 
  1688 ;;		 -> STR_7(8), STR_6(8), Temp_value(11), STR_5(14), 
  1689 ;;		 -> STR_4(15), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  ret             1   46[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      unsigned char 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1701 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;Total ram usage:        7 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 8
  1708 ;; This function calls:
  1709 ;;		_lcd_8bit_send_string
  1710 ;;		_lcd_8bit_set_cursor
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text1
  1717   004170                     __ptext1:
  1718                           	callstack 0
  1719   004170                     _lcd_8bit_send_string_pos:
  1720                           	callstack 22
  1721   004170                     
  1722                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 377:     if((lcd_obj == ((void*)0))||(string==((void*
      +                          )0)))
  1723   004170  5029               	movf	lcd_8bit_send_string_pos@lcd_obj^0,w,c
  1724   004172  102A               	iorwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,w,c
  1725   004174  B4D8               	btfsc	status,2,c
  1726   004176  EFBF  F020         	goto	u10211
  1727   00417A  EFC1  F020         	goto	u10210
  1728   00417E                     u10211:
  1729   00417E  EFCA  F020         	goto	l9528
  1730   004182                     u10210:
  1731   004182  502D               	movf	lcd_8bit_send_string_pos@string^0,w,c
  1732   004184  102E               	iorwf	(lcd_8bit_send_string_pos@string+1)^0,w,c
  1733   004186  A4D8               	btfss	status,2,c
  1734   004188  EFC8  F020         	goto	u10221
  1735   00418C  EFCA  F020         	goto	u10220
  1736   004190                     u10221:
  1737   004190  EFCE  F020         	goto	l9530
  1738   004194                     u10220:
  1739   004194                     l9528:
  1740                           
  1741                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 378:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 379:    
      +                               ret = (Std_ReturnType)0x00;
  1742   004194  0E00               	movlw	0
  1743   004196  6E2F               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1744                           
  1745                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 380:     }
  1746   004198  EFE3  F020         	goto	l9534
  1747   00419C                     l9530:
  1748   00419C  C029  F022         	movff	lcd_8bit_send_string_pos@lcd_obj,lcd_8bit_set_cursor@lcd_obj
  1749   0041A0  C02A  F023         	movff	lcd_8bit_send_string_pos@lcd_obj+1,lcd_8bit_set_cursor@lcd_obj+1
  1750   0041A4  C02B  F024         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1751   0041A8  C02C  F025         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
  1752   0041AC  EC9A  F01C         	call	_lcd_8bit_set_cursor	;wreg free
  1753   0041B0                     
  1754                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 384:         ret = lcd_8bit_send_string(lcd_obj,strin
      +                          g);
  1755   0041B0  C029  F022         	movff	lcd_8bit_send_string_pos@lcd_obj,lcd_8bit_send_string@lcd_obj
  1756   0041B4  C02A  F023         	movff	lcd_8bit_send_string_pos@lcd_obj+1,lcd_8bit_send_string@lcd_obj+1
  1757   0041B8  C02D  F024         	movff	lcd_8bit_send_string_pos@string,lcd_8bit_send_string@string
  1758   0041BC  C02E  F025         	movff	lcd_8bit_send_string_pos@string+1,lcd_8bit_send_string@string+1
  1759   0041C0  EC58  F01E         	call	_lcd_8bit_send_string	;wreg free
  1760   0041C4  6E2F               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1761   0041C6                     l9534:
  1762                           
  1763                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 387:     return ret;
  1764   0041C6  502F               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1765   0041C8  0012               	return		;funcret
  1766   0041CA                     __end_of_lcd_8bit_send_string_pos:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _lcd_8bit_set_cursor *****************
  1770 ;; Defined at:
  1771 ;;		line 551 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  lcd_obj         2   33[COMRAM] PTR const struct .
  1774 ;;		 -> lcd_1(10), 
  1775 ;;  row             1   35[COMRAM] unsigned char 
  1776 ;;  column          1   36[COMRAM] unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  ret             1   39[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      unsigned char 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        7 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 7
  1795 ;; This function calls:
  1796 ;;		_lcd_8bit_send_command
  1797 ;; This function is called by:
  1798 ;;		_lcd_8bit_send_string_pos
  1799 ;;		_lcd_8bit_send_char_pos
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text2
  1804   003934                     __ptext2:
  1805                           	callstack 0
  1806   003934                     _lcd_8bit_set_cursor:
  1807                           	callstack 22
  1808   003934                     
  1809                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 551: static Std_ReturnType lcd_8bit_set_cursor(const 
      +                          lcd_8bit_t *lcd_obj,uint8 row,uint8 column);ECU_layer/Char_lCD/ecu_chr_lcd.c: 552: {;ECU
      +                          _layer/Char_lCD/ecu_chr_lcd.c: 553:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1810   003934  0E01               	movlw	1
  1811   003936  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1812   003938                     
  1813                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 554:     if(lcd_obj == ((void*)0))
  1814   003938  5022               	movf	lcd_8bit_set_cursor@lcd_obj^0,w,c
  1815   00393A  1023               	iorwf	(lcd_8bit_set_cursor@lcd_obj+1)^0,w,c
  1816   00393C  A4D8               	btfss	status,2,c
  1817   00393E  EFA3  F01C         	goto	u10041
  1818   003942  EFA5  F01C         	goto	u10040
  1819   003946                     u10041:
  1820   003946  EFA9  F01C         	goto	l9372
  1821   00394A                     u10040:
  1822   00394A                     
  1823                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 555:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 556:    
      +                               ret = (Std_ReturnType)0x00;
  1824   00394A  0E00               	movlw	0
  1825   00394C  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1826                           
  1827                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 557:     }
  1828   00394E  EFF9  F01C         	goto	l9384
  1829   003952                     l9372:
  1830                           
  1831                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 559:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 560:    
      +                               column--;
  1832   003952  0625               	decf	lcd_8bit_set_cursor@column^0,f,c
  1833                           
  1834                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 561:         switch (row)
  1835   003954  EFDC  F01C         	goto	l9382
  1836   003958                     l9374:
  1837                           
  1838                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 564:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0x80 + column));
  1839   003958  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1840   00395C  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1841   003960  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1842   003962  0F80               	addlw	128
  1843   003964  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1844   003966  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1845   00396A  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1846                           
  1847                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 565:             break;
  1848   00396C  EFF9  F01C         	goto	l9384
  1849   003970                     l9376:
  1850                           
  1851                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 567:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0xC0 + column));
  1852   003970  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1853   003974  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1854   003978  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1855   00397A  0FC0               	addlw	192
  1856   00397C  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1857   00397E  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1858   003982  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1859                           
  1860                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 568:             break;
  1861   003984  EFF9  F01C         	goto	l9384
  1862   003988                     l9378:
  1863                           
  1864                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 570:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0x94 + column));
  1865   003988  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1866   00398C  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1867   003990  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1868   003992  0F94               	addlw	148
  1869   003994  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1870   003996  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1871   00399A  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1872                           
  1873                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 571:             break;
  1874   00399C  EFF9  F01C         	goto	l9384
  1875   0039A0                     l9380:
  1876                           
  1877                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 573:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0xD4 + column));
  1878   0039A0  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1879   0039A4  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1880   0039A8  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1881   0039AA  0FD4               	addlw	212
  1882   0039AC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1883   0039AE  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1884   0039B2  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1885                           
  1886                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 574:             break;
  1887   0039B4  EFF9  F01C         	goto	l9384
  1888   0039B8                     l9382:
  1889   0039B8  5024               	movf	lcd_8bit_set_cursor@row^0,w,c
  1890   0039BA  6E26               	movwf	??_lcd_8bit_set_cursor^0,c
  1891   0039BC  6A27               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1892                           
  1893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 1, Range of values is 0 to 0
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte            4     3 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900   0039BE  5027               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1901   0039C0  0A00               	xorlw	0	; case 0
  1902   0039C2  B4D8               	btfsc	status,2,c
  1903   0039C4  EFE6  F01C         	goto	l10352
  1904   0039C8  EFF9  F01C         	goto	l9384
  1905   0039CC                     l10352:
  1906                           
  1907                           ; Switch size 1, requested type "simple"
  1908                           ; Number of cases is 4, Range of values is 1 to 4
  1909                           ; switch strategies available:
  1910                           ; Name         Instructions Cycles
  1911                           ; simple_byte           13     7 (average)
  1912                           ;	Chosen strategy is simple_byte
  1913   0039CC  5026               	movf	??_lcd_8bit_set_cursor^0,w,c
  1914   0039CE  0A01               	xorlw	1	; case 1
  1915   0039D0  B4D8               	btfsc	status,2,c
  1916   0039D2  EFAC  F01C         	goto	l9374
  1917   0039D6  0A03               	xorlw	3	; case 2
  1918   0039D8  B4D8               	btfsc	status,2,c
  1919   0039DA  EFB8  F01C         	goto	l9376
  1920   0039DE  0A01               	xorlw	1	; case 3
  1921   0039E0  B4D8               	btfsc	status,2,c
  1922   0039E2  EFC4  F01C         	goto	l9378
  1923   0039E6  0A07               	xorlw	7	; case 4
  1924   0039E8  B4D8               	btfsc	status,2,c
  1925   0039EA  EFD0  F01C         	goto	l9380
  1926   0039EE  EFF9  F01C         	goto	l9384
  1927   0039F2                     l9384:
  1928                           
  1929                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 580:     return ret;
  1930   0039F2  5028               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1931   0039F4  0012               	return		;funcret
  1932   0039F6                     __end_of_lcd_8bit_set_cursor:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _lcd_8bit_send_string *****************
  1936 ;; Defined at:
  1937 ;;		line 346 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  lcd_obj         2   33[COMRAM] PTR const struct .
  1940 ;;		 -> lcd_1(10), 
  1941 ;;  string          2   35[COMRAM] PTR unsigned char 
  1942 ;;		 -> STR_11(8), STR_10(8), STR_9(8), STR_8(8), 
  1943 ;;		 -> STR_7(8), STR_6(8), Temp_value(11), STR_5(14), 
  1944 ;;		 -> STR_4(15), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  ret             1   37[COMRAM] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      unsigned char 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;Total ram usage:        5 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 7
  1963 ;; This function calls:
  1964 ;;		_lcd_8bit_send_char
  1965 ;; This function is called by:
  1966 ;;		_lcd_8bit_send_string_pos
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text3
  1971   003CB0                     __ptext3:
  1972                           	callstack 0
  1973   003CB0                     _lcd_8bit_send_string:
  1974                           	callstack 22
  1975   003CB0                     
  1976                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 346: Std_ReturnType lcd_8bit_send_string(const lcd_8b
      +                          it_t *lcd_obj,uint8 *string);ECU_layer/Char_lCD/ecu_chr_lcd.c: 347: {;ECU_layer/Char_lCD
      +                          /ecu_chr_lcd.c: 348:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1977   003CB0  0E01               	movlw	1
  1978   003CB2  6E26               	movwf	lcd_8bit_send_string@ret^0,c
  1979   003CB4                     
  1980                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 349:     if((lcd_obj == ((void*)0))||(string==((void*
      +                          )0)))
  1981   003CB4  5022               	movf	lcd_8bit_send_string@lcd_obj^0,w,c
  1982   003CB6  1023               	iorwf	(lcd_8bit_send_string@lcd_obj+1)^0,w,c
  1983   003CB8  B4D8               	btfsc	status,2,c
  1984   003CBA  EF61  F01E         	goto	u10051
  1985   003CBE  EF63  F01E         	goto	u10050
  1986   003CC2                     u10051:
  1987   003CC2  EF6C  F01E         	goto	l9398
  1988   003CC6                     u10050:
  1989   003CC6  5024               	movf	lcd_8bit_send_string@string^0,w,c
  1990   003CC8  1025               	iorwf	(lcd_8bit_send_string@string+1)^0,w,c
  1991   003CCA  A4D8               	btfss	status,2,c
  1992   003CCC  EF6A  F01E         	goto	u10061
  1993   003CD0  EF6C  F01E         	goto	u10060
  1994   003CD4                     u10061:
  1995   003CD4  EF8B  F01E         	goto	l9404
  1996   003CD8                     u10060:
  1997   003CD8                     l9398:
  1998                           
  1999                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 350:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 351:    
      +                               ret = (Std_ReturnType)0x00;
  2000   003CD8  0E00               	movlw	0
  2001   003CDA  6E26               	movwf	lcd_8bit_send_string@ret^0,c
  2002                           
  2003                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 352:     }
  2004   003CDC  EFA4  F01E         	goto	l9406
  2005   003CE0                     l9400:
  2006                           
  2007                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 356:         {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 357:
      +                                       ret = lcd_8bit_send_char(lcd_obj,*string++);
  2008   003CE0  C022  F01A         	movff	lcd_8bit_send_string@lcd_obj,lcd_8bit_send_char@lcd_obj
  2009   003CE4  C023  F01B         	movff	lcd_8bit_send_string@lcd_obj+1,lcd_8bit_send_char@lcd_obj+1
  2010   003CE8  C024  FFF6         	movff	lcd_8bit_send_string@string,tblptrl
  2011   003CEC  C025  FFF7         	movff	lcd_8bit_send_string@string+1,tblptrh
  2012   003CF0  0E00               	movlw	low (__smallconst shr (0+16))
  2013   003CF2  6EF8               	movwf	tblptru,c
  2014   003CF4  0E0F               	movlw	(high __ramtop+-1)
  2015   003CF6  64F7               	cpfsgt	tblptrh,c
  2016   003CF8  D003               	bra	u10077
  2017   003CFA  0008               	tblrd		*
  2018   003CFC  50F5               	movf	tablat,w,c
  2019   003CFE  D005               	bra	u10070
  2020   003D00                     u10077:
  2021   003D00  CFF6 FFE9          	movff	tblptrl,fsr0l
  2022   003D04  CFF7 FFEA          	movff	tblptrh,fsr0h
  2023   003D08  50EF               	movf	indf0,w,c
  2024   003D0A                     u10070:
  2025   003D0A  6E1C               	movwf	lcd_8bit_send_char@chr^0,c
  2026   003D0C  ECA6  F01E         	call	_lcd_8bit_send_char	;wreg free
  2027   003D10  6E26               	movwf	lcd_8bit_send_string@ret^0,c
  2028   003D12  4A24               	infsnz	lcd_8bit_send_string@string^0,f,c
  2029   003D14  2A25               	incf	(lcd_8bit_send_string@string+1)^0,f,c
  2030   003D16                     l9404:
  2031                           
  2032                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 355:         while(*string)
  2033   003D16  C024  FFF6         	movff	lcd_8bit_send_string@string,tblptrl
  2034   003D1A  C025  FFF7         	movff	lcd_8bit_send_string@string+1,tblptrh
  2035   003D1E  0E00               	movlw	low (__smallconst shr (0+16))
  2036   003D20  6EF8               	movwf	tblptru,c
  2037   003D22  0E0F               	movlw	(high __ramtop+-1)
  2038   003D24  64F7               	cpfsgt	tblptrh,c
  2039   003D26  D003               	bra	u10087
  2040   003D28  0008               	tblrd		*
  2041   003D2A  50F5               	movf	tablat,w,c
  2042   003D2C  D005               	bra	u10080
  2043   003D2E                     u10087:
  2044   003D2E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2045   003D32  CFF7 FFEA          	movff	tblptrh,fsr0h
  2046   003D36  50EF               	movf	indf0,w,c
  2047   003D38                     u10080:
  2048   003D38  0900               	iorlw	0
  2049   003D3A  A4D8               	btfss	status,2,c
  2050   003D3C  EFA2  F01E         	goto	u10091
  2051   003D40  EFA4  F01E         	goto	u10090
  2052   003D44                     u10091:
  2053   003D44  EF70  F01E         	goto	l9400
  2054   003D48                     u10090:
  2055   003D48                     l9406:
  2056                           
  2057                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 361:     return ret;
  2058   003D48  5026               	movf	lcd_8bit_send_string@ret^0,w,c
  2059   003D4A  0012               	return		;funcret
  2060   003D4C                     __end_of_lcd_8bit_send_string:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _lcd_8bit_send_char *****************
  2064 ;; Defined at:
  2065 ;;		line 294 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  lcd_obj         2   25[COMRAM] PTR const struct .
  2068 ;;		 -> lcd_1(10), 
  2069 ;;  chr             1   27[COMRAM] unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  i               2   31[COMRAM] int 
  2072 ;;  ret             1   30[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:        8 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 6
  2089 ;; This function calls:
  2090 ;;		_gpio_pin_write_logic
  2091 ;;		_lcd_8bit_send_enable
  2092 ;; This function is called by:
  2093 ;;		_lcd_8bit_send_string
  2094 ;;		_lcd_8bit_send_char_pos
  2095 ;;		_lcd_8bit_send_custome_chr
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text4
  2100   003D4C                     __ptext4:
  2101                           	callstack 0
  2102   003D4C                     _lcd_8bit_send_char:
  2103                           	callstack 22
  2104   003D4C                     
  2105                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 297:     if(lcd_obj == ((void*)0))
  2106   003D4C  501A               	movf	lcd_8bit_send_char@lcd_obj^0,w,c
  2107   003D4E  101B               	iorwf	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  2108   003D50  A4D8               	btfss	status,2,c
  2109   003D52  EFAD  F01E         	goto	u9811
  2110   003D56  EFAF  F01E         	goto	u9810
  2111   003D5A                     u9811:
  2112   003D5A  EFB3  F01E         	goto	l9130
  2113   003D5E                     u9810:
  2114   003D5E                     
  2115                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 298:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 299:    
      +                               ret = (Std_ReturnType)0x00;
  2116   003D5E  0E00               	movlw	0
  2117   003D60  6E1F               	movwf	lcd_8bit_send_char@ret^0,c
  2118                           
  2119                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 300:     }
  2120   003D62  EFEF  F01E         	goto	l9146
  2121   003D66                     l9130:
  2122   003D66  0E09               	movlw	9
  2123   003D68  241A               	addwf	lcd_8bit_send_char@lcd_obj^0,w,c
  2124   003D6A  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  2125   003D6C  0E00               	movlw	0
  2126   003D6E  201B               	addwfc	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  2127   003D70  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2128   003D72  0E01               	movlw	1
  2129   003D74  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2130   003D76  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2131   003D7A                     
  2132                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 304:         for(int i=0;i<8;i++)
  2133   003D7A  0E00               	movlw	0
  2134   003D7C  6E21               	movwf	(lcd_8bit_send_char@i+1)^0,c
  2135   003D7E  0E00               	movlw	0
  2136   003D80  6E20               	movwf	lcd_8bit_send_char@i^0,c
  2137   003D82                     l9138:
  2138   003D82  5020               	movf	lcd_8bit_send_char@i^0,w,c
  2139   003D84  241A               	addwf	lcd_8bit_send_char@lcd_obj^0,w,c
  2140   003D86  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  2141   003D88  5021               	movf	(lcd_8bit_send_char@i+1)^0,w,c
  2142   003D8A  201B               	addwfc	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  2143   003D8C  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2144   003D8E  C020  F01D         	movff	lcd_8bit_send_char@i,??_lcd_8bit_send_char
  2145   003D92  C01C  F01E         	movff	lcd_8bit_send_char@chr,??_lcd_8bit_send_char+1
  2146   003D96  2A1D               	incf	??_lcd_8bit_send_char^0,f,c
  2147   003D98  EFD0  F01E         	goto	u9824
  2148   003D9C                     u9825:
  2149   003D9C  90D8               	bcf	status,0,c
  2150   003D9E  321E               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
  2151   003DA0                     u9824:
  2152   003DA0  2E1D               	decfsz	??_lcd_8bit_send_char^0,f,c
  2153   003DA2  EFCE  F01E         	goto	u9825
  2154   003DA6  501E               	movf	(??_lcd_8bit_send_char+1)^0,w,c
  2155   003DA8  0B01               	andlw	1
  2156   003DAA  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2157   003DAC  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2158   003DB0                     
  2159                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 307:         }
  2160   003DB0  4A20               	infsnz	lcd_8bit_send_char@i^0,f,c
  2161   003DB2  2A21               	incf	(lcd_8bit_send_char@i+1)^0,f,c
  2162   003DB4  BE21               	btfsc	(lcd_8bit_send_char@i+1)^0,7,c
  2163   003DB6  EFE6  F01E         	goto	u9831
  2164   003DBA  5021               	movf	(lcd_8bit_send_char@i+1)^0,w,c
  2165   003DBC  E109               	bnz	u9830
  2166   003DBE  0E08               	movlw	8
  2167   003DC0  5C20               	subwf	lcd_8bit_send_char@i^0,w,c
  2168   003DC2  A0D8               	btfss	status,0,c
  2169   003DC4  EFE6  F01E         	goto	u9831
  2170   003DC8  EFE8  F01E         	goto	u9830
  2171   003DCC                     u9831:
  2172   003DCC  EFC1  F01E         	goto	l9138
  2173   003DD0                     u9830:
  2174   003DD0                     
  2175                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 308:         ret = lcd_8bit_send_enable(lcd_obj);
  2176   003DD0  C01A  F017         	movff	lcd_8bit_send_char@lcd_obj,lcd_8bit_send_enable@lcd_obj
  2177   003DD4  C01B  F018         	movff	lcd_8bit_send_char@lcd_obj+1,lcd_8bit_send_enable@lcd_obj+1
  2178   003DD8  EC0D  F021         	call	_lcd_8bit_send_enable	;wreg free
  2179   003DDC  6E1F               	movwf	lcd_8bit_send_char@ret^0,c
  2180   003DDE                     l9146:
  2181                           
  2182                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 310:     return ret;
  2183   003DDE  501F               	movf	lcd_8bit_send_char@ret^0,w,c
  2184   003DE0  0012               	return		;funcret
  2185   003DE2                     __end_of_lcd_8bit_send_char:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function _dc_motor_move_right *****************
  2189 ;; Defined at:
  2190 ;;		line 44 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  dc_motor        2   22[COMRAM] PTR const struct .
  2193 ;;		 -> motor_1(2), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  ret             1   24[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        3 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 5
  2212 ;; This function calls:
  2213 ;;		_gpio_pin_write_logic
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text5
  2220   0042B4                     __ptext5:
  2221                           	callstack 0
  2222   0042B4                     _dc_motor_move_right:
  2223                           	callstack 25
  2224   0042B4                     
  2225                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 47:     if(dc_motor == ((void*)0))
  2226   0042B4  5017               	movf	dc_motor_move_right@dc_motor^0,w,c
  2227   0042B6  1018               	iorwf	(dc_motor_move_right@dc_motor+1)^0,w,c
  2228   0042B8  A4D8               	btfss	status,2,c
  2229   0042BA  EF61  F021         	goto	u10261
  2230   0042BE  EF63  F021         	goto	u10260
  2231   0042C2                     u10261:
  2232   0042C2  EF67  F021         	goto	l9570
  2233   0042C6                     u10260:
  2234   0042C6                     
  2235                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 48:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 49:    
      +                               ret = (Std_ReturnType)0x00;
  2236   0042C6  0E00               	movlw	0
  2237   0042C8  6E19               	movwf	dc_motor_move_right@ret^0,c
  2238                           
  2239                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 50:     }
  2240   0042CA  EF7B  F021         	goto	l9572
  2241   0042CE                     l9570:
  2242                           
  2243                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 52:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 54:    
      +                               ret = gpio_pin_write_logic(&(dc_motor->dc_motor_pin[0]),GPIO_HIGH);
  2244   0042CE  C017  F00D         	movff	dc_motor_move_right@dc_motor,gpio_pin_write_logic@pin
  2245   0042D2  C018  F00E         	movff	dc_motor_move_right@dc_motor+1,gpio_pin_write_logic@pin+1
  2246   0042D6  0E01               	movlw	1
  2247   0042D8  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2248   0042DA  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2249   0042DE  6E19               	movwf	dc_motor_move_right@ret^0,c
  2250                           
  2251                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 55:         ret = gpio_pin_write_logic(&(dc_motor->d
      +                          c_motor_pin[1]),GPIO_LOW);
  2252   0042E0  0E01               	movlw	1
  2253   0042E2  2417               	addwf	dc_motor_move_right@dc_motor^0,w,c
  2254   0042E4  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  2255   0042E6  0E00               	movlw	0
  2256   0042E8  2018               	addwfc	(dc_motor_move_right@dc_motor+1)^0,w,c
  2257   0042EA  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2258   0042EC  0E00               	movlw	0
  2259   0042EE  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2260   0042F0  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2261   0042F4  6E19               	movwf	dc_motor_move_right@ret^0,c
  2262   0042F6                     l9572:
  2263                           
  2264                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 57:     return ret;
  2265   0042F6  5019               	movf	dc_motor_move_right@ret^0,w,c
  2266   0042F8  0012               	return		;funcret
  2267   0042FA                     __end_of_dc_motor_move_right:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _convert_short_to_string *****************
  2271 ;; Defined at:
  2272 ;;		line 447 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  value           2   96[COMRAM] unsigned short 
  2275 ;;  str             2   98[COMRAM] PTR unsigned char 
  2276 ;;		 -> Temp_value(11), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  Temp_String     6    0[BANK0 ] unsigned char [6]
  2279 ;;  DataCounter     1    7[BANK0 ] unsigned char 
  2280 ;;  ret             1    6[BANK0 ] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      unsigned char 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;Total ram usage:       12 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 12
  2297 ;; This function calls:
  2298 ;;		_memset
  2299 ;;		_sprintf
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text6
  2306   0039F6                     __ptext6:
  2307                           	callstack 0
  2308   0039F6                     _convert_short_to_string:
  2309                           	callstack 18
  2310   0039F6                     
  2311                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 447: Std_ReturnType convert_short_to_string(uint16 va
      +                          lue,uint8 *str);ECU_layer/Char_lCD/ecu_chr_lcd.c: 448: {;ECU_layer/Char_lCD/ecu_chr_lcd.
      +                          c: 449:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2312   0039F6  0E01               	movlw	1
  2313   0039F8  0100               	movlb	0	; () banked
  2314   0039FA  6FF9               	movwf	convert_short_to_string@ret& (0+255),b
  2315   0039FC                     
  2316                           ; BSR set to: 0
  2317                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 450:     uint8 Temp_String[6] = {0};
  2318   0039FC  EE20  F0F3         	lfsr	2,convert_short_to_string@Temp_String
  2319   003A00  0E05               	movlw	5
  2320   003A02                     u10231:
  2321   003A02  6ADE               	clrf	postinc2,c
  2322   003A04  06E8               	decf	wreg,f,c
  2323   003A06  E2FD               	bc	u10231
  2324   003A08                     
  2325                           ; BSR set to: 0
  2326                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 451:     uint8 DataCounter = 0;
  2327   003A08  0E00               	movlw	0
  2328   003A0A  6FFA               	movwf	convert_short_to_string@DataCounter& (0+255),b
  2329   003A0C                     
  2330                           ; BSR set to: 0
  2331                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 452:     if(str == ((void*)0))
  2332   003A0C  5063               	movf	convert_short_to_string@str^0,w,c
  2333   003A0E  1064               	iorwf	(convert_short_to_string@str+1)^0,w,c
  2334   003A10  A4D8               	btfss	status,2,c
  2335   003A12  EF0D  F01D         	goto	u10241
  2336   003A16  EF0F  F01D         	goto	u10240
  2337   003A1A                     u10241:
  2338   003A1A  EF13  F01D         	goto	l9548
  2339   003A1E                     u10240:
  2340   003A1E                     
  2341                           ; BSR set to: 0
  2342                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 453:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 454:    
      +                               ret = (Std_ReturnType)0x00;
  2343   003A1E  0E00               	movlw	0
  2344   003A20  6FF9               	movwf	convert_short_to_string@ret& (0+255),b
  2345                           
  2346                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 455:     }
  2347   003A22  EF56  F01D         	goto	l9560
  2348   003A26                     l9548:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 457:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 458:    
      +                               memset(str, ' ', 5);
  2352   003A26  C063  F00D         	movff	convert_short_to_string@str,memset@dest
  2353   003A2A  C064  F00E         	movff	convert_short_to_string@str+1,memset@dest+1
  2354   003A2E  0E00               	movlw	0
  2355   003A30  6E10               	movwf	(memset@c+1)^0,c
  2356   003A32  0E20               	movlw	32
  2357   003A34  6E0F               	movwf	memset@c^0,c
  2358   003A36  0E00               	movlw	0
  2359   003A38  6E12               	movwf	(memset@n+1)^0,c
  2360   003A3A  0E05               	movlw	5
  2361   003A3C  6E11               	movwf	memset@n^0,c
  2362   003A3E  EC3D  F017         	call	_memset	;wreg free
  2363   003A42                     
  2364                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 459:         str[5] = '\0';
  2365   003A42  EE20 F005          	lfsr	2,5
  2366   003A46  5063               	movf	convert_short_to_string@str^0,w,c
  2367   003A48  26D9               	addwf	fsr2l,f,c
  2368   003A4A  5064               	movf	(convert_short_to_string@str+1)^0,w,c
  2369   003A4C  22DA               	addwfc	fsr2h,f,c
  2370   003A4E  6ADF               	clrf	indf2,c
  2371   003A50                     
  2372                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 460:         sprintf((char *)Temp_String, "%i", value
      +                          );
  2373   003A50  0EF3               	movlw	low convert_short_to_string@Temp_String
  2374   003A52  6E4B               	movwf	sprintf@s^0,c
  2375   003A54  0E00               	movlw	high convert_short_to_string@Temp_String
  2376   003A56  6E4C               	movwf	(sprintf@s+1)^0,c
  2377   003A58  0E5A               	movlw	low STR_1
  2378   003A5A  6E4D               	movwf	sprintf@fmt^0,c
  2379   003A5C  0E10               	movlw	high STR_1
  2380   003A5E  6E4E               	movwf	(sprintf@fmt+1)^0,c
  2381   003A60  C061  F04F         	movff	convert_short_to_string@value,?_sprintf+4
  2382   003A64  C062  F050         	movff	convert_short_to_string@value+1,?_sprintf+5
  2383   003A68  EC34  F021         	call	_sprintf	;wreg free
  2384                           
  2385                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 461:         while(Temp_String[DataCounter] != '\0'){
  2386   003A6C  EF47  F01D         	goto	l9558
  2387   003A70                     l9554:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 462:             str[DataCounter] = Temp_String[DataC
      +                          ounter];
  2391   003A70  0EF3               	movlw	low convert_short_to_string@Temp_String
  2392   003A72  25FA               	addwf	convert_short_to_string@DataCounter& (0+255),w,b
  2393   003A74  6ED9               	movwf	fsr2l,c
  2394   003A76  6ADA               	clrf	fsr2h,c
  2395   003A78  0E00               	movlw	high convert_short_to_string@Temp_String
  2396   003A7A  22DA               	addwfc	fsr2h,f,c
  2397   003A7C  51FA               	movf	convert_short_to_string@DataCounter& (0+255),w,b
  2398   003A7E  2463               	addwf	convert_short_to_string@str^0,w,c
  2399   003A80  6EE1               	movwf	fsr1l,c
  2400   003A82  0E00               	movlw	0
  2401   003A84  2064               	addwfc	(convert_short_to_string@str+1)^0,w,c
  2402   003A86  6EE2               	movwf	fsr1h,c
  2403   003A88  CFDF FFE7          	movff	indf2,indf1
  2404   003A8C                     
  2405                           ; BSR set to: 0
  2406                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 463:             DataCounter++;
  2407   003A8C  2BFA               	incf	convert_short_to_string@DataCounter& (0+255),f,b
  2408   003A8E                     l9558:
  2409                           
  2410                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 461:         while(Temp_String[DataCounter] != '\0'){
  2411   003A8E  0EF3               	movlw	low convert_short_to_string@Temp_String
  2412   003A90  0100               	movlb	0	; () banked
  2413   003A92  25FA               	addwf	convert_short_to_string@DataCounter& (0+255),w,b
  2414   003A94  6ED9               	movwf	fsr2l,c
  2415   003A96  6ADA               	clrf	fsr2h,c
  2416   003A98  0E00               	movlw	high convert_short_to_string@Temp_String
  2417   003A9A  22DA               	addwfc	fsr2h,f,c
  2418   003A9C  50DF               	movf	indf2,w,c
  2419   003A9E  A4D8               	btfss	status,2,c
  2420   003AA0  EF54  F01D         	goto	u10251
  2421   003AA4  EF56  F01D         	goto	u10250
  2422   003AA8                     u10251:
  2423   003AA8  EF38  F01D         	goto	l9554
  2424   003AAC                     u10250:
  2425   003AAC                     l9560:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 467:     return ret;
  2429   003AAC  51F9               	movf	convert_short_to_string@ret& (0+255),w,b
  2430   003AAE                     
  2431                           ; BSR set to: 0
  2432   003AAE  0012               	return		;funcret
  2433   003AB0                     __end_of_convert_short_to_string:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _sprintf *****************
  2437 ;; Defined at:
  2438 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  s               2   74[COMRAM] PTR unsigned char 
  2441 ;;		 -> convert_int_to_string@Temp_String(11), convert_short_to_string@Temp_String(6), 
  2442 ;;  fmt             2   76[COMRAM] PTR const unsigned char 
  2443 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  f              12   84[COMRAM] struct _IO_FILE
  2446 ;;  ap              2   82[COMRAM] PTR void [1]
  2447 ;;		 -> ?_sprintf(2), 
  2448 ;;  ret             2    0        int 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  2   74[COMRAM] int 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2458 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;Total ram usage:       22 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 11
  2465 ;; This function calls:
  2466 ;;		_vfprintf
  2467 ;; This function is called by:
  2468 ;;		_convert_short_to_string
  2469 ;;		_convert_byte_to_string
  2470 ;;		_convert_int_to_string
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text7
  2475   004268                     __ptext7:
  2476                           	callstack 0
  2477   004268                     _sprintf:
  2478                           	callstack 18
  2479   004268  0E4F               	movlw	low (?_sprintf+4)
  2480   00426A  6E53               	movwf	sprintf@ap^0,c
  2481   00426C  0E00               	movlw	high (?_sprintf+4)
  2482   00426E  6E54               	movwf	(sprintf@ap+1)^0,c
  2483   004270  C04B  F055         	movff	sprintf@s,sprintf@f
  2484   004274  C04C  F056         	movff	sprintf@s+1,sprintf@f+1
  2485   004278  0E00               	movlw	0
  2486   00427A  6E59               	movwf	(sprintf@f+4)^0,c
  2487   00427C  0E00               	movlw	0
  2488   00427E  6E58               	movwf	(sprintf@f+3)^0,c
  2489   004280  0E00               	movlw	0
  2490   004282  6E60               	movwf	(sprintf@f+11)^0,c
  2491   004284  0E00               	movlw	0
  2492   004286  6E5F               	movwf	(sprintf@f+10)^0,c
  2493   004288  0E55               	movlw	low sprintf@f
  2494   00428A  6E43               	movwf	vfprintf@fp^0,c
  2495   00428C  0E00               	movlw	high sprintf@f
  2496   00428E  6E44               	movwf	(vfprintf@fp+1)^0,c
  2497   004290  C04D  F045         	movff	sprintf@fmt,vfprintf@fmt
  2498   004294  C04E  F046         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2499   004298  0E53               	movlw	low sprintf@ap
  2500   00429A  6E47               	movwf	vfprintf@ap^0,c
  2501   00429C  0E00               	movlw	high sprintf@ap
  2502   00429E  6E48               	movwf	(vfprintf@ap+1)^0,c
  2503   0042A0  ECE5  F020         	call	_vfprintf	;wreg free
  2504   0042A4  5058               	movf	(sprintf@f+3)^0,w,c
  2505   0042A6  244B               	addwf	sprintf@s^0,w,c
  2506   0042A8  6ED9               	movwf	fsr2l,c
  2507   0042AA  5059               	movf	(sprintf@f+4)^0,w,c
  2508   0042AC  204C               	addwfc	(sprintf@s+1)^0,w,c
  2509   0042AE  6EDA               	movwf	fsr2h,c
  2510   0042B0  6ADF               	clrf	indf2,c
  2511   0042B2  0012               	return		;funcret
  2512   0042B4                     __end_of_sprintf:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _vfprintf *****************
  2516 ;; Defined at:
  2517 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2520 ;;		 -> sprintf@f(12), 
  2521 ;;  fmt             2   68[COMRAM] PTR const unsigned char 
  2522 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2523 ;;  ap              2   70[COMRAM] PTR PTR void 
  2524 ;;		 -> sprintf@ap(2), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  cfmt            2   72[COMRAM] PTR unsigned char 
  2527 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  2   66[COMRAM] int 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:        8 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 10
  2544 ;; This function calls:
  2545 ;;		_vfpfcnvrt
  2546 ;; This function is called by:
  2547 ;;		_sprintf
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text8
  2552   0041CA                     __ptext8:
  2553                           	callstack 0
  2554   0041CA                     _vfprintf:
  2555                           	callstack 18
  2556   0041CA                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2558   0041CA  C045  F049         	movff	vfprintf@fmt,vfprintf@cfmt
  2559   0041CE  C046  F04A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2562   0041D2  EFF9  F020         	goto	l9312
  2563   0041D6                     l9310:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2566   0041D6  C043  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2567   0041DA  C044  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2568   0041DE  0E49               	movlw	low vfprintf@cfmt
  2569   0041E0  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2570   0041E2  0E00               	movlw	high vfprintf@cfmt
  2571   0041E4  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2572   0041E6  C047  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2573   0041EA  C048  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2574   0041EE  EC33  F019         	call	_vfpfcnvrt	;wreg free
  2575   0041F2                     l9312:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2578   0041F2  C049  FFF6         	movff	vfprintf@cfmt,tblptrl
  2579   0041F6  C04A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2580   0041FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2581   0041FA  6AF8               	clrf	tblptru,c
  2582   0041FC                     	endif
  2583   0041FC                     	if	0	;tblptru may be non-zero
  2584   0041FC                     	endif
  2585   0041FC  0008               	tblrd		*
  2586   0041FE  50F5               	movf	tablat,w,c
  2587   004200  0900               	iorlw	0
  2588   004202  A4D8               	btfss	status,2,c
  2589   004204  EF06  F021         	goto	u9981
  2590   004208  EF08  F021         	goto	u9980
  2591   00420C                     u9981:
  2592   00420C  EFEB  F020         	goto	l9310
  2593   004210                     u9980:
  2594   004210                     
  2595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2596   004210  0E00               	movlw	0
  2597   004212  6E44               	movwf	(?_vfprintf+1)^0,c
  2598   004214  0E00               	movlw	0
  2599   004216  6E43               	movwf	?_vfprintf^0,c
  2600   004218  0012               	return		;funcret
  2601   00421A                     __end_of_vfprintf:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _vfpfcnvrt *****************
  2605 ;; Defined at:
  2606 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2609 ;;		 -> sprintf@f(12), 
  2610 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2611 ;;		 -> vfprintf@cfmt(2), 
  2612 ;;  ap              2   56[COMRAM] PTR PTR void 
  2613 ;;		 -> sprintf@ap(2), 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  convarg         4   60[COMRAM] struct .
  2616 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2617 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2618 ;;  i               2    0        int 
  2619 ;;  done            2    0        int 
  2620 ;;  c               1    0        unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:       14 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 9
  2637 ;; This function calls:
  2638 ;;		_dtoa
  2639 ;;		_fputc
  2640 ;; This function is called by:
  2641 ;;		_vfprintf
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text9
  2646   003266                     __ptext9:
  2647                           	callstack 0
  2648   003266                     _vfpfcnvrt:
  2649                           	callstack 18
  2650   003266                     
  2651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2652   003266  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2653   00326A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2654   00326E  CFDE FFF6          	movff	postinc2,tblptrl
  2655   003272  CFDD FFF7          	movff	postdec2,tblptrh
  2656   003276                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2657   003276  6AF8               	clrf	tblptru,c
  2658   003278                     	endif
  2659   003278                     	if	0	;tblptru may be non-zero
  2660   003278                     	endif
  2661   003278  0008               	tblrd		*
  2662   00327A  50F5               	movf	tablat,w,c
  2663   00327C  0A25               	xorlw	37
  2664   00327E  A4D8               	btfss	status,2,c
  2665   003280  EF44  F019         	goto	u9761
  2666   003284  EF46  F019         	goto	u9760
  2667   003288                     u9761:
  2668   003288  EFB3  F019         	goto	l9072
  2669   00328C                     u9760:
  2670   00328C                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2672   00328C  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673   003290  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674   003294  2ADE               	incf	postinc2,f,c
  2675   003296  0E00               	movlw	0
  2676   003298  22DD               	addwfc	postdec2,f,c
  2677   00329A                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2679   00329A  0E00               	movlw	0
  2680   00329C  0100               	movlb	0	; () banked
  2681   00329E  6F97               	movwf	(_width+1)& (0+255),b
  2682   0032A0  0E00               	movlw	0
  2683   0032A2  6F96               	movwf	_width& (0+255),b
  2684   0032A4  C096  F0B0         	movff	_width,_flags
  2685   0032A8                     
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2688   0032A8  6998               	setf	_prec& (0+255),b
  2689   0032AA  6999               	setf	(_prec+1)& (0+255),b
  2690   0032AC                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2693   0032AC  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2694   0032B0  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2695   0032B4  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  2696   0032B8  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  2697   0032BC                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2700   0032BC  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2701   0032C0  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2702   0032C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2703   0032C4  6AF8               	clrf	tblptru,c
  2704   0032C6                     	endif
  2705   0032C6                     	if	0	;tblptru may be non-zero
  2706   0032C6                     	endif
  2707   0032C6  0008               	tblrd		*
  2708   0032C8  50F5               	movf	tablat,w,c
  2709   0032CA  0A64               	xorlw	100
  2710   0032CC  B4D8               	btfsc	status,2,c
  2711   0032CE  EF6B  F019         	goto	u9771
  2712   0032D2  EF6D  F019         	goto	u9770
  2713   0032D6                     u9771:
  2714   0032D6  EF7C  F019         	goto	l9062
  2715   0032DA                     u9770:
  2716   0032DA                     
  2717                           ; BSR set to: 0
  2718   0032DA  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2719   0032DE  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2720   0032E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2721   0032E2  6AF8               	clrf	tblptru,c
  2722   0032E4                     	endif
  2723   0032E4                     	if	0	;tblptru may be non-zero
  2724   0032E4                     	endif
  2725   0032E4  0008               	tblrd		*
  2726   0032E6  50F5               	movf	tablat,w,c
  2727   0032E8  0A69               	xorlw	105
  2728   0032EA  A4D8               	btfss	status,2,c
  2729   0032EC  EF7A  F019         	goto	u9781
  2730   0032F0  EF7C  F019         	goto	u9780
  2731   0032F4                     u9781:
  2732   0032F4  EFAA  F019         	goto	l9068
  2733   0032F8                     u9780:
  2734   0032F8                     l9062:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2738   0032F8  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2739   0032FC  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2740   003300  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2741   003304  0E02               	movlw	2
  2742   003306  26DE               	addwf	postinc2,f,c
  2743   003308  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2744   00330C  0E00               	movlw	0
  2745   00330E  22DD               	addwfc	postdec2,f,c
  2746   003310  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2747   003314  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2748   003318  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg
  2749   00331C  CFDD F03E          	movff	postdec2,vfpfcnvrt@convarg+1
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2752   003320  0E01               	movlw	1
  2753   003322  2441               	addwf	vfpfcnvrt@cp^0,w,c
  2754   003324  6E3B               	movwf	??_vfpfcnvrt^0,c
  2755   003326  0E00               	movlw	0
  2756   003328  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2757   00332A  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2758   00332C  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2759   003330  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2760   003334  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2761   003338  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2762   00333C                     
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2765   00333C  C035  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  2766   003340  C036  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2767   003344  C03D  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  2768   003348  C03E  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2769   00334C  EC72  F016         	call	_dtoa	;wreg free
  2770   003350  EFC8  F019         	goto	l2104
  2771   003354                     l9068:
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2774   003354  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775   003358  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776   00335C  2ADE               	incf	postinc2,f,c
  2777   00335E  0E00               	movlw	0
  2778   003360  22DD               	addwfc	postdec2,f,c
  2779   003362  EFC8  F019         	goto	l2104
  2780   003366                     l9072:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2783   003366  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2784   00336A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2785   00336E  CFDE FFF6          	movff	postinc2,tblptrl
  2786   003372  CFDD FFF7          	movff	postdec2,tblptrh
  2787   003376                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2788   003376  6AF8               	clrf	tblptru,c
  2789   003378                     	endif
  2790   003378                     	if	0	;tblptru may be non-zero
  2791   003378                     	endif
  2792   003378  0008               	tblrd		*
  2793   00337A  50F5               	movf	tablat,w,c
  2794   00337C  6E0D               	movwf	fputc@c^0,c
  2795   00337E  6A0E               	clrf	(fputc@c+1)^0,c
  2796   003380  C035  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2797   003384  C036  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2798   003388  ECD3  F01B         	call	_fputc	;wreg free
  2799   00338C  EFAA  F019         	goto	l9068
  2800   003390                     l2104:
  2801   003390  0012               	return		;funcret
  2802   003392                     __end_of_vfpfcnvrt:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _dtoa *****************
  2806 ;; Defined at:
  2807 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2810 ;;		 -> sprintf@f(12), 
  2811 ;;  d               2   41[COMRAM] int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  i               2   50[COMRAM] int 
  2814 ;;  w               2   47[COMRAM] int 
  2815 ;;  p               2   45[COMRAM] int 
  2816 ;;  s               1   49[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;Total ram usage:       13 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 8
  2833 ;; This function calls:
  2834 ;;		___awdiv
  2835 ;;		___awmod
  2836 ;;		_abs
  2837 ;;		_pad
  2838 ;; This function is called by:
  2839 ;;		_vfpfcnvrt
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text10
  2844   002CE4                     __ptext10:
  2845                           	callstack 0
  2846   002CE4                     _dtoa:
  2847                           	callstack 18
  2848   002CE4                     
  2849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2850   002CE4  BE2B               	btfsc	(dtoa@d+1)^0,7,c
  2851   002CE6  EF77  F016         	goto	u8631
  2852   002CEA  EF7A  F016         	goto	u8630
  2853   002CEE                     u8631:
  2854   002CEE  0E01               	movlw	1
  2855   002CF0  EF7B  F016         	goto	u8640
  2856   002CF4                     u8630:
  2857   002CF4  0E00               	movlw	0
  2858   002CF6                     u8640:
  2859   002CF6  6E32               	movwf	dtoa@s^0,c
  2860   002CF8                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2862   002CF8  5032               	movf	dtoa@s^0,w,c
  2863   002CFA  B4D8               	btfsc	status,2,c
  2864   002CFC  EF82  F016         	goto	u8651
  2865   002D00  EF84  F016         	goto	u8650
  2866   002D04                     u8651:
  2867   002D04  EF88  F016         	goto	l8396
  2868   002D08                     u8650:
  2869   002D08                     
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2871   002D08  6C2A               	negf	dtoa@d^0,c
  2872   002D0A  1E2B               	comf	(dtoa@d+1)^0,f,c
  2873   002D0C  B0D8               	btfsc	status,0,c
  2874   002D0E  2A2B               	incf	(dtoa@d+1)^0,f,c
  2875   002D10                     l8396:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2878   002D10  0100               	movlb	0	; () banked
  2879   002D12  BF99               	btfsc	(_prec+1)& (0+255),7,b
  2880   002D14  EF90  F016         	goto	u8660
  2881   002D18  EF8E  F016         	goto	u8661
  2882   002D1C                     u8661:
  2883   002D1C  EF96  F016         	goto	l2083
  2884   002D20                     u8660:
  2885   002D20                     
  2886                           ; BSR set to: 0
  2887   002D20  0E00               	movlw	0
  2888   002D22  6E2F               	movwf	(dtoa@p+1)^0,c
  2889   002D24  0E01               	movlw	1
  2890   002D26  6E2E               	movwf	dtoa@p^0,c
  2891   002D28  EF9A  F016         	goto	l2085
  2892   002D2C                     l2083:
  2893                           
  2894                           ; BSR set to: 0
  2895   002D2C  C098  F02E         	movff	_prec,dtoa@p
  2896   002D30  C099  F02F         	movff	_prec+1,dtoa@p+1
  2897   002D34                     l2085:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2901   002D34  C096  F030         	movff	_width,dtoa@w
  2902   002D38  C097  F031         	movff	_width+1,dtoa@w+1
  2903   002D3C                     
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2906   002D3C  5032               	movf	dtoa@s^0,w,c
  2907   002D3E  B4D8               	btfsc	status,2,c
  2908   002D40  EFA4  F016         	goto	u8671
  2909   002D44  EFA6  F016         	goto	u8670
  2910   002D48                     u8671:
  2911   002D48  EFBD  F016         	goto	l2086
  2912   002D4C                     u8670:
  2913   002D4C                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2916   002D4C  0630               	decf	dtoa@w^0,f,c
  2917   002D4E  A0D8               	btfss	status,0,c
  2918   002D50  0631               	decf	(dtoa@w+1)^0,f,c
  2919   002D52                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2922   002D52  5032               	movf	dtoa@s^0,w,c
  2923   002D54  A4D8               	btfss	status,2,c
  2924   002D56  EFAF  F016         	goto	u8681
  2925   002D5A  EFB1  F016         	goto	u8680
  2926   002D5E                     u8681:
  2927   002D5E  EFB7  F016         	goto	l8408
  2928   002D62                     u8680:
  2929   002D62                     
  2930                           ; BSR set to: 0
  2931   002D62  0E00               	movlw	0
  2932   002D64  6E2D               	movwf	(_dtoa$3827+1)^0,c
  2933   002D66  0E2B               	movlw	43
  2934   002D68  6E2C               	movwf	_dtoa$3827^0,c
  2935   002D6A  EFBB  F016         	goto	l8410
  2936   002D6E                     l8408:
  2937                           
  2938                           ; BSR set to: 0
  2939   002D6E  0E00               	movlw	0
  2940   002D70  6E2D               	movwf	(_dtoa$3827+1)^0,c
  2941   002D72  0E2D               	movlw	45
  2942   002D74  6E2C               	movwf	_dtoa$3827^0,c
  2943   002D76                     l8410:
  2944                           
  2945                           ; BSR set to: 0
  2946   002D76  C02C  F032         	movff	_dtoa$3827,dtoa@s
  2947   002D7A                     l2086:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2951   002D7A  0E00               	movlw	0
  2952   002D7C  6E34               	movwf	(dtoa@i+1)^0,c
  2953   002D7E  0E1F               	movlw	31
  2954   002D80  6E33               	movwf	dtoa@i^0,c
  2955   002D82                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2958   002D82  0E00               	movlw	0
  2959   002D84  0101               	movlb	1	; () banked
  2960   002D86  6F30               	movwf	(_dbuf+31)& (0+255),b
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2963   002D88  EFF6  F016         	goto	l8424
  2964   002D8C                     l8414:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2967   002D8C  0633               	decf	dtoa@i^0,f,c
  2968   002D8E  A0D8               	btfss	status,0,c
  2969   002D90  0634               	decf	(dtoa@i+1)^0,f,c
  2970   002D92                     
  2971                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2972   002D92  0E11               	movlw	low _dbuf
  2973   002D94  2433               	addwf	dtoa@i^0,w,c
  2974   002D96  6ED9               	movwf	fsr2l,c
  2975   002D98  0E01               	movlw	high _dbuf
  2976   002D9A  2034               	addwfc	(dtoa@i+1)^0,w,c
  2977   002D9C  6EDA               	movwf	fsr2h,c
  2978   002D9E  C02A  F00D         	movff	dtoa@d,___awmod@dividend
  2979   002DA2  C02B  F00E         	movff	dtoa@d+1,___awmod@dividend+1
  2980   002DA6  0E00               	movlw	0
  2981   002DA8  6E10               	movwf	(___awmod@divisor+1)^0,c
  2982   002DAA  0E0A               	movlw	10
  2983   002DAC  6E0F               	movwf	___awmod@divisor^0,c
  2984   002DAE  EC58  F01D         	call	___awmod	;wreg free
  2985   002DB2  C00D  F013         	movff	?___awmod,abs@a
  2986   002DB6  C00E  F014         	movff	?___awmod+1,abs@a+1
  2987   002DBA  ECC0  F021         	call	_abs	;wreg free
  2988   002DBE  5013               	movf	?_abs^0,w,c
  2989   002DC0  0F30               	addlw	48
  2990   002DC2  6EDF               	movwf	indf2,c
  2991   002DC4                     
  2992                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2993   002DC4  062E               	decf	dtoa@p^0,f,c
  2994   002DC6  A0D8               	btfss	status,0,c
  2995   002DC8  062F               	decf	(dtoa@p+1)^0,f,c
  2996   002DCA                     
  2997                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2998   002DCA  0630               	decf	dtoa@w^0,f,c
  2999   002DCC  A0D8               	btfss	status,0,c
  3000   002DCE  0631               	decf	(dtoa@w+1)^0,f,c
  3001   002DD0                     
  3002                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3003   002DD0  C02A  F00D         	movff	dtoa@d,___awdiv@dividend
  3004   002DD4  C02B  F00E         	movff	dtoa@d+1,___awdiv@dividend+1
  3005   002DD8  0E00               	movlw	0
  3006   002DDA  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3007   002DDC  0E0A               	movlw	10
  3008   002DDE  6E0F               	movwf	___awdiv@divisor^0,c
  3009   002DE0  EC38  F01C         	call	___awdiv	;wreg free
  3010   002DE4  C00D  F02A         	movff	?___awdiv,dtoa@d
  3011   002DE8  C00E  F02B         	movff	?___awdiv+1,dtoa@d+1
  3012   002DEC                     l8424:
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3015   002DEC  BE34               	btfsc	(dtoa@i+1)^0,7,c
  3016   002DEE  EF01  F017         	goto	u8691
  3017   002DF2  5034               	movf	(dtoa@i+1)^0,w,c
  3018   002DF4  E108               	bnz	u8690
  3019   002DF6  0433               	decf	dtoa@i^0,w,c
  3020   002DF8  A0D8               	btfss	status,0,c
  3021   002DFA  EF01  F017         	goto	u8691
  3022   002DFE  EF03  F017         	goto	u8690
  3023   002E02                     u8691:
  3024   002E02  EF19  F017         	goto	l8430
  3025   002E06                     u8690:
  3026   002E06  502A               	movf	dtoa@d^0,w,c
  3027   002E08  102B               	iorwf	(dtoa@d+1)^0,w,c
  3028   002E0A  A4D8               	btfss	status,2,c
  3029   002E0C  EF0A  F017         	goto	u8701
  3030   002E10  EF0C  F017         	goto	u8700
  3031   002E14                     u8701:
  3032   002E14  EFC6  F016         	goto	l8414
  3033   002E18                     u8700:
  3034   002E18  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  3035   002E1A  EF19  F017         	goto	u8710
  3036   002E1E  502F               	movf	(dtoa@p+1)^0,w,c
  3037   002E20  E106               	bnz	u8711
  3038   002E22  042E               	decf	dtoa@p^0,w,c
  3039   002E24  B0D8               	btfsc	status,0,c
  3040   002E26  EF17  F017         	goto	u8711
  3041   002E2A  EF19  F017         	goto	u8710
  3042   002E2E                     u8711:
  3043   002E2E  EFC6  F016         	goto	l8414
  3044   002E32                     u8710:
  3045   002E32                     l8430:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3048   002E32  5032               	movf	dtoa@s^0,w,c
  3049   002E34  B4D8               	btfsc	status,2,c
  3050   002E36  EF1F  F017         	goto	u8721
  3051   002E3A  EF21  F017         	goto	u8720
  3052   002E3E                     u8721:
  3053   002E3E  EF2C  F017         	goto	l8436
  3054   002E42                     u8720:
  3055   002E42                     
  3056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3057   002E42  0633               	decf	dtoa@i^0,f,c
  3058   002E44  A0D8               	btfss	status,0,c
  3059   002E46  0634               	decf	(dtoa@i+1)^0,f,c
  3060   002E48                     
  3061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3062   002E48  0E11               	movlw	low _dbuf
  3063   002E4A  2433               	addwf	dtoa@i^0,w,c
  3064   002E4C  6ED9               	movwf	fsr2l,c
  3065   002E4E  0E01               	movlw	high _dbuf
  3066   002E50  2034               	addwfc	(dtoa@i+1)^0,w,c
  3067   002E52  6EDA               	movwf	fsr2h,c
  3068   002E54  C032  FFDF         	movff	dtoa@s,indf2
  3069   002E58                     l8436:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3072   002E58  C028  F01D         	movff	dtoa@fp,pad@fp
  3073   002E5C  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  3074   002E60  0E11               	movlw	low _dbuf
  3075   002E62  2433               	addwf	dtoa@i^0,w,c
  3076   002E64  6E1F               	movwf	pad@buf^0,c
  3077   002E66  0E01               	movlw	high _dbuf
  3078   002E68  2034               	addwfc	(dtoa@i+1)^0,w,c
  3079   002E6A  6E20               	movwf	(pad@buf+1)^0,c
  3080   002E6C  C030  F021         	movff	dtoa@w,pad@p
  3081   002E70  C031  F022         	movff	dtoa@w+1,pad@p+1
  3082   002E74  EC3C  F01F         	call	_pad	;wreg free
  3083   002E78  0012               	return		;funcret
  3084   002E7A                     __end_of_dtoa:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _pad *****************
  3088 ;; Defined at:
  3089 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3092 ;;		 -> sprintf@f(12), 
  3093 ;;  buf             2   30[COMRAM] PTR unsigned char 
  3094 ;;		 -> dbuf(32), 
  3095 ;;  p               2   32[COMRAM] int 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  w               2   37[COMRAM] int 
  3098 ;;  i               2   35[COMRAM] int 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3108 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;Total ram usage:       11 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 7
  3115 ;; This function calls:
  3116 ;;		_fputc
  3117 ;;		_fputs
  3118 ;; This function is called by:
  3119 ;;		_dtoa
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text11
  3124   003E78                     __ptext11:
  3125                           	callstack 0
  3126   003E78                     _pad:
  3127                           	callstack 18
  3128   003E78                     
  3129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3130   003E78  BE22               	btfsc	(pad@p+1)^0,7,c
  3131   003E7A  EF41  F01F         	goto	u8531
  3132   003E7E  EF43  F01F         	goto	u8530
  3133   003E82                     u8531:
  3134   003E82  EF49  F01F         	goto	l8338
  3135   003E86                     u8530:
  3136   003E86  C021  F026         	movff	pad@p,pad@w
  3137   003E8A  C022  F027         	movff	pad@p+1,pad@w+1
  3138   003E8E  EF4D  F01F         	goto	l2074
  3139   003E92                     l8338:
  3140   003E92  0E00               	movlw	0
  3141   003E94  6E27               	movwf	(pad@w+1)^0,c
  3142   003E96  0E00               	movlw	0
  3143   003E98  6E26               	movwf	pad@w^0,c
  3144   003E9A                     l2074:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3147   003E9A  0E00               	movlw	0
  3148   003E9C  6E25               	movwf	(pad@i+1)^0,c
  3149   003E9E  0E00               	movlw	0
  3150   003EA0  6E24               	movwf	pad@i^0,c
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3153   003EA2  EF5F  F01F         	goto	l8344
  3154   003EA6                     l8340:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3157   003EA6  0E00               	movlw	0
  3158   003EA8  6E0E               	movwf	(fputc@c+1)^0,c
  3159   003EAA  0E20               	movlw	32
  3160   003EAC  6E0D               	movwf	fputc@c^0,c
  3161   003EAE  C01D  F00F         	movff	pad@fp,fputc@fp
  3162   003EB2  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  3163   003EB6  ECD3  F01B         	call	_fputc	;wreg free
  3164   003EBA                     
  3165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3166   003EBA  4A24               	infsnz	pad@i^0,f,c
  3167   003EBC  2A25               	incf	(pad@i+1)^0,f,c
  3168   003EBE                     l8344:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3171   003EBE  5026               	movf	pad@w^0,w,c
  3172   003EC0  5C24               	subwf	pad@i^0,w,c
  3173   003EC2  5025               	movf	(pad@i+1)^0,w,c
  3174   003EC4  0A80               	xorlw	128
  3175   003EC6  6E23               	movwf	??_pad^0,c
  3176   003EC8  5027               	movf	(pad@w+1)^0,w,c
  3177   003ECA  0A80               	xorlw	128
  3178   003ECC  5823               	subwfb	??_pad^0,w,c
  3179   003ECE  A0D8               	btfss	status,0,c
  3180   003ED0  EF6C  F01F         	goto	u8541
  3181   003ED4  EF6E  F01F         	goto	u8540
  3182   003ED8                     u8541:
  3183   003ED8  EF53  F01F         	goto	l8340
  3184   003EDC                     u8540:
  3185   003EDC                     
  3186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3187   003EDC  C01F  F016         	movff	pad@buf,fputs@s
  3188   003EE0  C020  F017         	movff	pad@buf+1,fputs@s+1
  3189   003EE4  C01D  F018         	movff	pad@fp,fputs@fp
  3190   003EE8  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  3191   003EEC  EC7D  F021         	call	_fputs	;wreg free
  3192   003EF0  0012               	return		;funcret
  3193   003EF2                     __end_of_pad:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _fputs *****************
  3197 ;; Defined at:
  3198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  s               2   21[COMRAM] PTR const unsigned char 
  3201 ;;		 -> dbuf(32), 
  3202 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3203 ;;		 -> sprintf@f(12), 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  i               2   26[COMRAM] int 
  3206 ;;  c               1   25[COMRAM] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2   21[COMRAM] int 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;Total ram usage:        7 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 6
  3223 ;; This function calls:
  3224 ;;		_fputc
  3225 ;; This function is called by:
  3226 ;;		_pad
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text12
  3231   0042FA                     __ptext12:
  3232                           	callstack 0
  3233   0042FA                     _fputs:
  3234                           	callstack 18
  3235   0042FA  0E00               	movlw	0
  3236   0042FC  6E1C               	movwf	(fputs@i+1)^0,c
  3237   0042FE  0E00               	movlw	0
  3238   004300  6E1B               	movwf	fputs@i^0,c
  3239   004302  EF8E  F021         	goto	l8228
  3240   004306                     l8224:
  3241   004306  C01A  F00D         	movff	fputs@c,fputc@c
  3242   00430A  6A0E               	clrf	(fputc@c+1)^0,c
  3243   00430C  C018  F00F         	movff	fputs@fp,fputc@fp
  3244   004310  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  3245   004314  ECD3  F01B         	call	_fputc	;wreg free
  3246   004318  4A1B               	infsnz	fputs@i^0,f,c
  3247   00431A  2A1C               	incf	(fputs@i+1)^0,f,c
  3248   00431C                     l8228:
  3249   00431C  501B               	movf	fputs@i^0,w,c
  3250   00431E  2416               	addwf	fputs@s^0,w,c
  3251   004320  6ED9               	movwf	fsr2l,c
  3252   004322  501C               	movf	(fputs@i+1)^0,w,c
  3253   004324  2017               	addwfc	(fputs@s+1)^0,w,c
  3254   004326  6EDA               	movwf	fsr2h,c
  3255   004328  50DF               	movf	indf2,w,c
  3256   00432A  6E1A               	movwf	fputs@c^0,c
  3257   00432C  501A               	movf	fputs@c^0,w,c
  3258   00432E  A4D8               	btfss	status,2,c
  3259   004330  EF9C  F021         	goto	u8361
  3260   004334  EF9E  F021         	goto	u8360
  3261   004338                     u8361:
  3262   004338  EF83  F021         	goto	l8224
  3263   00433C                     u8360:
  3264   00433C  0012               	return		;funcret
  3265   00433E                     __end_of_fputs:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _fputc *****************
  3269 ;; Defined at:
  3270 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  c               2   12[COMRAM] int 
  3273 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  3274 ;;		 -> sprintf@f(12), 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2   12[COMRAM] int 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;Total ram usage:        9 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 5
  3293 ;; This function calls:
  3294 ;;		_putch
  3295 ;; This function is called by:
  3296 ;;		_pad
  3297 ;;		_vfpfcnvrt
  3298 ;;		_fputs
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text13
  3303   0037A6                     __ptext13:
  3304                           	callstack 0
  3305   0037A6                     _fputc:
  3306                           	callstack 21
  3307   0037A6  500F               	movf	fputc@fp^0,w,c
  3308   0037A8  1010               	iorwf	(fputc@fp+1)^0,w,c
  3309   0037AA  B4D8               	btfsc	status,2,c
  3310   0037AC  EFDA  F01B         	goto	u8321
  3311   0037B0  EFDC  F01B         	goto	u8320
  3312   0037B4                     u8321:
  3313   0037B4  EFE5  F01B         	goto	l8212
  3314   0037B8                     u8320:
  3315   0037B8  500F               	movf	fputc@fp^0,w,c
  3316   0037BA  1010               	iorwf	(fputc@fp+1)^0,w,c
  3317   0037BC  A4D8               	btfss	status,2,c
  3318   0037BE  EFE3  F01B         	goto	u8331
  3319   0037C2  EFE5  F01B         	goto	u8330
  3320   0037C6                     u8331:
  3321   0037C6  EFEA  F01B         	goto	l8214
  3322   0037CA                     u8330:
  3323   0037CA                     l8212:
  3324   0037CA  500D               	movf	fputc@c^0,w,c
  3325   0037CC  ECF5  F022         	call	_putch
  3326   0037D0  EF37  F01C         	goto	l2129
  3327   0037D4                     l8214:
  3328   0037D4  EE20 F00A          	lfsr	2,10
  3329   0037D8  500F               	movf	fputc@fp^0,w,c
  3330   0037DA  26D9               	addwf	fsr2l,f,c
  3331   0037DC  5010               	movf	(fputc@fp+1)^0,w,c
  3332   0037DE  22DA               	addwfc	fsr2h,f,c
  3333   0037E0  50DE               	movf	postinc2,w,c
  3334   0037E2  10DE               	iorwf	postinc2,w,c
  3335   0037E4  B4D8               	btfsc	status,2,c
  3336   0037E6  EFF7  F01B         	goto	u8341
  3337   0037EA  EFF9  F01B         	goto	u8340
  3338   0037EE                     u8341:
  3339   0037EE  EF14  F01C         	goto	l8218
  3340   0037F2                     u8340:
  3341   0037F2  EE20 F00A          	lfsr	2,10
  3342   0037F6  500F               	movf	fputc@fp^0,w,c
  3343   0037F8  26D9               	addwf	fsr2l,f,c
  3344   0037FA  5010               	movf	(fputc@fp+1)^0,w,c
  3345   0037FC  22DA               	addwfc	fsr2h,f,c
  3346   0037FE  EE10 F003          	lfsr	1,3
  3347   003802  500F               	movf	fputc@fp^0,w,c
  3348   003804  26E1               	addwf	fsr1l,f,c
  3349   003806  5010               	movf	(fputc@fp+1)^0,w,c
  3350   003808  22E2               	addwfc	fsr1h,f,c
  3351   00380A  50DE               	movf	postinc2,w,c
  3352   00380C  5CE6               	subwf	postinc1,w,c
  3353   00380E  50E6               	movf	postinc1,w,c
  3354   003810  0A80               	xorlw	128
  3355   003812  6E15               	movwf	(??_fputc+4)^0,c
  3356   003814  50DE               	movf	postinc2,w,c
  3357   003816  0A80               	xorlw	128
  3358   003818  5815               	subwfb	(??_fputc+4)^0,w,c
  3359   00381A  B0D8               	btfsc	status,0,c
  3360   00381C  EF12  F01C         	goto	u8351
  3361   003820  EF14  F01C         	goto	u8350
  3362   003824                     u8351:
  3363   003824  EF37  F01C         	goto	l2129
  3364   003828                     u8350:
  3365   003828                     l8218:
  3366   003828  EE20 F003          	lfsr	2,3
  3367   00382C  500F               	movf	fputc@fp^0,w,c
  3368   00382E  26D9               	addwf	fsr2l,f,c
  3369   003830  5010               	movf	(fputc@fp+1)^0,w,c
  3370   003832  22DA               	addwfc	fsr2h,f,c
  3371   003834  CFDE F011          	movff	postinc2,??_fputc
  3372   003838  CFDD F012          	movff	postdec2,??_fputc+1
  3373   00383C  C00F  FFD9         	movff	fputc@fp,fsr2l
  3374   003840  C010  FFDA         	movff	fputc@fp+1,fsr2h
  3375   003844  CFDE F013          	movff	postinc2,??_fputc+2
  3376   003848  CFDD F014          	movff	postdec2,??_fputc+3
  3377   00384C  5011               	movf	??_fputc^0,w,c
  3378   00384E  2413               	addwf	(??_fputc+2)^0,w,c
  3379   003850  6ED9               	movwf	fsr2l,c
  3380   003852  5012               	movf	(??_fputc+1)^0,w,c
  3381   003854  2014               	addwfc	(??_fputc+3)^0,w,c
  3382   003856  6EDA               	movwf	fsr2h,c
  3383   003858  C00D  FFDF         	movff	fputc@c,indf2
  3384   00385C  EE20 F003          	lfsr	2,3
  3385   003860  500F               	movf	fputc@fp^0,w,c
  3386   003862  26D9               	addwf	fsr2l,f,c
  3387   003864  5010               	movf	(fputc@fp+1)^0,w,c
  3388   003866  22DA               	addwfc	fsr2h,f,c
  3389   003868  2ADE               	incf	postinc2,f,c
  3390   00386A  0E00               	movlw	0
  3391   00386C  22DD               	addwfc	postdec2,f,c
  3392   00386E                     l2129:
  3393   00386E  0012               	return		;funcret
  3394   003870                     __end_of_fputc:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _putch *****************
  3398 ;; Defined at:
  3399 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  c               1    wreg     unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  c               1    0[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 4
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_fputc
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text14
  3428   0045EA                     __ptext14:
  3429                           	callstack 0
  3430   0045EA                     _putch:
  3431                           	callstack 21
  3432   0045EA  0012               	return		;funcret
  3433   0045EC                     __end_of_putch:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _abs *****************
  3437 ;; Defined at:
  3438 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  a               2   18[COMRAM] int 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2   18[COMRAM] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;Total ram usage:        4 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 4
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_dtoa
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text15
  3467   004380                     __ptext15:
  3468                           	callstack 0
  3469   004380                     _abs:
  3470                           	callstack 21
  3471   004380  BE14               	btfsc	(abs@a+1)^0,7,c
  3472   004382  EFCD  F021         	goto	u8550
  3473   004386  5014               	movf	(abs@a+1)^0,w,c
  3474   004388  E106               	bnz	u8551
  3475   00438A  0413               	decf	abs@a^0,w,c
  3476   00438C  B0D8               	btfsc	status,0,c
  3477   00438E  EFCB  F021         	goto	u8551
  3478   004392  EFCD  F021         	goto	u8550
  3479   004396                     u8551:
  3480   004396  EFDB  F021         	goto	l2114
  3481   00439A                     u8550:
  3482   00439A  C013  F015         	movff	abs@a,??_abs
  3483   00439E  C014  F016         	movff	abs@a+1,??_abs+1
  3484   0043A2  1E15               	comf	??_abs^0,f,c
  3485   0043A4  1E16               	comf	(??_abs+1)^0,f,c
  3486   0043A6  4A15               	infsnz	??_abs^0,f,c
  3487   0043A8  2A16               	incf	(??_abs+1)^0,f,c
  3488   0043AA  C015  F013         	movff	??_abs,?_abs
  3489   0043AE  C016  F014         	movff	??_abs+1,?_abs+1
  3490   0043B2  EFDF  F021         	goto	l2117
  3491   0043B6                     l2114:
  3492   0043B6  C013  F013         	movff	abs@a,?_abs
  3493   0043BA  C014  F014         	movff	abs@a+1,?_abs+1
  3494   0043BE                     l2117:
  3495   0043BE  0012               	return		;funcret
  3496   0043C0                     __end_of_abs:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function ___awmod *****************
  3500 ;; Defined at:
  3501 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  dividend        2   12[COMRAM] int 
  3504 ;;  divisor         2   14[COMRAM] int 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  sign            1   17[COMRAM] unsigned char 
  3507 ;;  counter         1   16[COMRAM] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  2   12[COMRAM] int 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;Total ram usage:        6 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 4
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_dtoa
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text16
  3532   003AB0                     __ptext16:
  3533                           	callstack 0
  3534   003AB0                     ___awmod:
  3535                           	callstack 21
  3536   003AB0  0E00               	movlw	0
  3537   003AB2  6E12               	movwf	___awmod@sign^0,c
  3538   003AB4  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3539   003AB6  EF61  F01D         	goto	u8470
  3540   003ABA  EF5F  F01D         	goto	u8471
  3541   003ABE                     u8471:
  3542   003ABE  EF67  F01D         	goto	l8306
  3543   003AC2                     u8470:
  3544   003AC2  6C0D               	negf	___awmod@dividend^0,c
  3545   003AC4  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3546   003AC6  B0D8               	btfsc	status,0,c
  3547   003AC8  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3548   003ACA  0E01               	movlw	1
  3549   003ACC  6E12               	movwf	___awmod@sign^0,c
  3550   003ACE                     l8306:
  3551   003ACE  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3552   003AD0  EF6E  F01D         	goto	u8480
  3553   003AD4  EF6C  F01D         	goto	u8481
  3554   003AD8                     u8481:
  3555   003AD8  EF72  F01D         	goto	l8310
  3556   003ADC                     u8480:
  3557   003ADC  6C0F               	negf	___awmod@divisor^0,c
  3558   003ADE  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3559   003AE0  B0D8               	btfsc	status,0,c
  3560   003AE2  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3561   003AE4                     l8310:
  3562   003AE4  500F               	movf	___awmod@divisor^0,w,c
  3563   003AE6  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3564   003AE8  B4D8               	btfsc	status,2,c
  3565   003AEA  EF79  F01D         	goto	u8491
  3566   003AEE  EF7B  F01D         	goto	u8490
  3567   003AF2                     u8491:
  3568   003AF2  EF9F  F01D         	goto	l8326
  3569   003AF6                     u8490:
  3570   003AF6  0E01               	movlw	1
  3571   003AF8  6E11               	movwf	___awmod@counter^0,c
  3572   003AFA  EF83  F01D         	goto	l8316
  3573   003AFE                     l8314:
  3574   003AFE  90D8               	bcf	status,0,c
  3575   003B00  360F               	rlcf	___awmod@divisor^0,f,c
  3576   003B02  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3577   003B04  2A11               	incf	___awmod@counter^0,f,c
  3578   003B06                     l8316:
  3579   003B06  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3580   003B08  EF88  F01D         	goto	u8501
  3581   003B0C  EF8A  F01D         	goto	u8500
  3582   003B10                     u8501:
  3583   003B10  EF7F  F01D         	goto	l8314
  3584   003B14                     u8500:
  3585   003B14                     l8318:
  3586   003B14  500F               	movf	___awmod@divisor^0,w,c
  3587   003B16  5C0D               	subwf	___awmod@dividend^0,w,c
  3588   003B18  5010               	movf	(___awmod@divisor+1)^0,w,c
  3589   003B1A  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3590   003B1C  A0D8               	btfss	status,0,c
  3591   003B1E  EF93  F01D         	goto	u8511
  3592   003B22  EF95  F01D         	goto	u8510
  3593   003B26                     u8511:
  3594   003B26  EF99  F01D         	goto	l8322
  3595   003B2A                     u8510:
  3596   003B2A  500F               	movf	___awmod@divisor^0,w,c
  3597   003B2C  5E0D               	subwf	___awmod@dividend^0,f,c
  3598   003B2E  5010               	movf	(___awmod@divisor+1)^0,w,c
  3599   003B30  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3600   003B32                     l8322:
  3601   003B32  90D8               	bcf	status,0,c
  3602   003B34  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3603   003B36  320F               	rrcf	___awmod@divisor^0,f,c
  3604   003B38  2E11               	decfsz	___awmod@counter^0,f,c
  3605   003B3A  EF8A  F01D         	goto	l8318
  3606   003B3E                     l8326:
  3607   003B3E  5012               	movf	___awmod@sign^0,w,c
  3608   003B40  B4D8               	btfsc	status,2,c
  3609   003B42  EFA5  F01D         	goto	u8521
  3610   003B46  EFA7  F01D         	goto	u8520
  3611   003B4A                     u8521:
  3612   003B4A  EFAB  F01D         	goto	l8330
  3613   003B4E                     u8520:
  3614   003B4E  6C0D               	negf	___awmod@dividend^0,c
  3615   003B50  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3616   003B52  B0D8               	btfsc	status,0,c
  3617   003B54  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3618   003B56                     l8330:
  3619   003B56  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3620   003B5A  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3621   003B5E  0012               	return		;funcret
  3622   003B60                     __end_of___awmod:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function ___awdiv *****************
  3626 ;; Defined at:
  3627 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  dividend        2   12[COMRAM] int 
  3630 ;;  divisor         2   14[COMRAM] int 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  quotient        2   18[COMRAM] int 
  3633 ;;  sign            1   17[COMRAM] unsigned char 
  3634 ;;  counter         1   16[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  2   12[COMRAM] int 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;Total ram usage:        8 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 4
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_dtoa
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text17
  3659   003870                     __ptext17:
  3660                           	callstack 0
  3661   003870                     ___awdiv:
  3662                           	callstack 21
  3663   003870  0E00               	movlw	0
  3664   003872  6E12               	movwf	___awdiv@sign^0,c
  3665   003874  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3666   003876  EF41  F01C         	goto	u8410
  3667   00387A  EF3F  F01C         	goto	u8411
  3668   00387E                     u8411:
  3669   00387E  EF47  F01C         	goto	l8262
  3670   003882                     u8410:
  3671   003882  6C0F               	negf	___awdiv@divisor^0,c
  3672   003884  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3673   003886  B0D8               	btfsc	status,0,c
  3674   003888  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3675   00388A  0E01               	movlw	1
  3676   00388C  6E12               	movwf	___awdiv@sign^0,c
  3677   00388E                     l8262:
  3678   00388E  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3679   003890  EF4E  F01C         	goto	u8420
  3680   003894  EF4C  F01C         	goto	u8421
  3681   003898                     u8421:
  3682   003898  EF54  F01C         	goto	l8268
  3683   00389C                     u8420:
  3684   00389C  6C0D               	negf	___awdiv@dividend^0,c
  3685   00389E  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3686   0038A0  B0D8               	btfsc	status,0,c
  3687   0038A2  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3688   0038A4  0E01               	movlw	1
  3689   0038A6  1A12               	xorwf	___awdiv@sign^0,f,c
  3690   0038A8                     l8268:
  3691   0038A8  0E00               	movlw	0
  3692   0038AA  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3693   0038AC  0E00               	movlw	0
  3694   0038AE  6E13               	movwf	___awdiv@quotient^0,c
  3695   0038B0  500F               	movf	___awdiv@divisor^0,w,c
  3696   0038B2  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3697   0038B4  B4D8               	btfsc	status,2,c
  3698   0038B6  EF5F  F01C         	goto	u8431
  3699   0038BA  EF61  F01C         	goto	u8430
  3700   0038BE                     u8431:
  3701   0038BE  EF89  F01C         	goto	l8290
  3702   0038C2                     u8430:
  3703   0038C2  0E01               	movlw	1
  3704   0038C4  6E11               	movwf	___awdiv@counter^0,c
  3705   0038C6  EF69  F01C         	goto	l8276
  3706   0038CA                     l8274:
  3707   0038CA  90D8               	bcf	status,0,c
  3708   0038CC  360F               	rlcf	___awdiv@divisor^0,f,c
  3709   0038CE  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3710   0038D0  2A11               	incf	___awdiv@counter^0,f,c
  3711   0038D2                     l8276:
  3712   0038D2  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3713   0038D4  EF6E  F01C         	goto	u8441
  3714   0038D8  EF70  F01C         	goto	u8440
  3715   0038DC                     u8441:
  3716   0038DC  EF65  F01C         	goto	l8274
  3717   0038E0                     u8440:
  3718   0038E0                     l8278:
  3719   0038E0  90D8               	bcf	status,0,c
  3720   0038E2  3613               	rlcf	___awdiv@quotient^0,f,c
  3721   0038E4  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3722   0038E6  500F               	movf	___awdiv@divisor^0,w,c
  3723   0038E8  5C0D               	subwf	___awdiv@dividend^0,w,c
  3724   0038EA  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3725   0038EC  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3726   0038EE  A0D8               	btfss	status,0,c
  3727   0038F0  EF7C  F01C         	goto	u8451
  3728   0038F4  EF7E  F01C         	goto	u8450
  3729   0038F8                     u8451:
  3730   0038F8  EF83  F01C         	goto	l8286
  3731   0038FC                     u8450:
  3732   0038FC  500F               	movf	___awdiv@divisor^0,w,c
  3733   0038FE  5E0D               	subwf	___awdiv@dividend^0,f,c
  3734   003900  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3735   003902  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3736   003904  8013               	bsf	___awdiv@quotient^0,0,c
  3737   003906                     l8286:
  3738   003906  90D8               	bcf	status,0,c
  3739   003908  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3740   00390A  320F               	rrcf	___awdiv@divisor^0,f,c
  3741   00390C  2E11               	decfsz	___awdiv@counter^0,f,c
  3742   00390E  EF70  F01C         	goto	l8278
  3743   003912                     l8290:
  3744   003912  5012               	movf	___awdiv@sign^0,w,c
  3745   003914  B4D8               	btfsc	status,2,c
  3746   003916  EF8F  F01C         	goto	u8461
  3747   00391A  EF91  F01C         	goto	u8460
  3748   00391E                     u8461:
  3749   00391E  EF95  F01C         	goto	l8294
  3750   003922                     u8460:
  3751   003922  6C13               	negf	___awdiv@quotient^0,c
  3752   003924  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3753   003926  B0D8               	btfsc	status,0,c
  3754   003928  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3755   00392A                     l8294:
  3756   00392A  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3757   00392E  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3758   003932  0012               	return		;funcret
  3759   003934                     __end_of___awdiv:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _memset *****************
  3763 ;; Defined at:
  3764 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  dest            2   12[COMRAM] PTR void 
  3767 ;;		 -> Temp_value(11), 
  3768 ;;  c               2   14[COMRAM] int 
  3769 ;;  n               2   16[COMRAM] unsigned int 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  s               2   22[COMRAM] PTR unsigned char 
  3772 ;;		 -> Temp_value(11), 
  3773 ;;  k               2   20[COMRAM] unsigned int 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2   12[COMRAM] PTR void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:       12 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 4
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_convert_short_to_string
  3794 ;;		_convert_byte_to_string
  3795 ;;		_convert_int_to_string
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text18
  3800   002E7A                     __ptext18:
  3801                           	callstack 0
  3802   002E7A                     _memset:
  3803                           	callstack 25
  3804   002E7A  C00D  F017         	movff	memset@dest,memset@s
  3805   002E7E  C00E  F018         	movff	memset@dest+1,memset@s+1
  3806   002E82  5011               	movf	memset@n^0,w,c
  3807   002E84  1012               	iorwf	(memset@n+1)^0,w,c
  3808   002E86  A4D8               	btfss	status,2,c
  3809   002E88  EF48  F017         	goto	u10101
  3810   002E8C  EF4A  F017         	goto	u10100
  3811   002E90                     u10101:
  3812   002E90  EF4C  F017         	goto	l9414
  3813   002E94                     u10100:
  3814   002E94  EFF7  F017         	goto	l2039
  3815   002E98                     l9414:
  3816   002E98  C017  FFD9         	movff	memset@s,fsr2l
  3817   002E9C  C018  FFDA         	movff	memset@s+1,fsr2h
  3818   002EA0  C00F  FFDF         	movff	memset@c,indf2
  3819   002EA4  5011               	movf	memset@n^0,w,c
  3820   002EA6  2417               	addwf	memset@s^0,w,c
  3821   002EA8  6E13               	movwf	??_memset^0,c
  3822   002EAA  5012               	movf	(memset@n+1)^0,w,c
  3823   002EAC  2018               	addwfc	(memset@s+1)^0,w,c
  3824   002EAE  6E14               	movwf	(??_memset+1)^0,c
  3825   002EB0  0EFF               	movlw	255
  3826   002EB2  2413               	addwf	??_memset^0,w,c
  3827   002EB4  6ED9               	movwf	fsr2l,c
  3828   002EB6  0EFF               	movlw	255
  3829   002EB8  2014               	addwfc	(??_memset+1)^0,w,c
  3830   002EBA  6EDA               	movwf	fsr2h,c
  3831   002EBC  C00F  FFDF         	movff	memset@c,indf2
  3832   002EC0  5012               	movf	(memset@n+1)^0,w,c
  3833   002EC2  E107               	bnz	u10111
  3834   002EC4  0E03               	movlw	3
  3835   002EC6  5C11               	subwf	memset@n^0,w,c
  3836   002EC8  B0D8               	btfsc	status,0,c
  3837   002ECA  EF69  F017         	goto	u10111
  3838   002ECE  EF6B  F017         	goto	u10110
  3839   002ED2                     u10111:
  3840   002ED2  EF6D  F017         	goto	l9420
  3841   002ED6                     u10110:
  3842   002ED6  EFF7  F017         	goto	l2039
  3843   002EDA                     l9420:
  3844   002EDA  EE20 F001          	lfsr	2,1
  3845   002EDE  5017               	movf	memset@s^0,w,c
  3846   002EE0  26D9               	addwf	fsr2l,f,c
  3847   002EE2  5018               	movf	(memset@s+1)^0,w,c
  3848   002EE4  22DA               	addwfc	fsr2h,f,c
  3849   002EE6  C00F  FFDF         	movff	memset@c,indf2
  3850   002EEA  EE20 F002          	lfsr	2,2
  3851   002EEE  5017               	movf	memset@s^0,w,c
  3852   002EF0  26D9               	addwf	fsr2l,f,c
  3853   002EF2  5018               	movf	(memset@s+1)^0,w,c
  3854   002EF4  22DA               	addwfc	fsr2h,f,c
  3855   002EF6  C00F  FFDF         	movff	memset@c,indf2
  3856   002EFA  5011               	movf	memset@n^0,w,c
  3857   002EFC  2417               	addwf	memset@s^0,w,c
  3858   002EFE  6E13               	movwf	??_memset^0,c
  3859   002F00  5012               	movf	(memset@n+1)^0,w,c
  3860   002F02  2018               	addwfc	(memset@s+1)^0,w,c
  3861   002F04  6E14               	movwf	(??_memset+1)^0,c
  3862   002F06  0EFE               	movlw	254
  3863   002F08  2413               	addwf	??_memset^0,w,c
  3864   002F0A  6ED9               	movwf	fsr2l,c
  3865   002F0C  0EFF               	movlw	255
  3866   002F0E  2014               	addwfc	(??_memset+1)^0,w,c
  3867   002F10  6EDA               	movwf	fsr2h,c
  3868   002F12  C00F  FFDF         	movff	memset@c,indf2
  3869   002F16  5011               	movf	memset@n^0,w,c
  3870   002F18  2417               	addwf	memset@s^0,w,c
  3871   002F1A  6E13               	movwf	??_memset^0,c
  3872   002F1C  5012               	movf	(memset@n+1)^0,w,c
  3873   002F1E  2018               	addwfc	(memset@s+1)^0,w,c
  3874   002F20  6E14               	movwf	(??_memset+1)^0,c
  3875   002F22  0EFD               	movlw	253
  3876   002F24  2413               	addwf	??_memset^0,w,c
  3877   002F26  6ED9               	movwf	fsr2l,c
  3878   002F28  0EFF               	movlw	255
  3879   002F2A  2014               	addwfc	(??_memset+1)^0,w,c
  3880   002F2C  6EDA               	movwf	fsr2h,c
  3881   002F2E  C00F  FFDF         	movff	memset@c,indf2
  3882   002F32  5012               	movf	(memset@n+1)^0,w,c
  3883   002F34  E107               	bnz	u10121
  3884   002F36  0E07               	movlw	7
  3885   002F38  5C11               	subwf	memset@n^0,w,c
  3886   002F3A  B0D8               	btfsc	status,0,c
  3887   002F3C  EFA2  F017         	goto	u10121
  3888   002F40  EFA4  F017         	goto	u10120
  3889   002F44                     u10121:
  3890   002F44  EFA6  F017         	goto	l9426
  3891   002F48                     u10120:
  3892   002F48  EFF7  F017         	goto	l2039
  3893   002F4C                     l9426:
  3894   002F4C  EE20 F003          	lfsr	2,3
  3895   002F50  5017               	movf	memset@s^0,w,c
  3896   002F52  26D9               	addwf	fsr2l,f,c
  3897   002F54  5018               	movf	(memset@s+1)^0,w,c
  3898   002F56  22DA               	addwfc	fsr2h,f,c
  3899   002F58  C00F  FFDF         	movff	memset@c,indf2
  3900   002F5C  5011               	movf	memset@n^0,w,c
  3901   002F5E  2417               	addwf	memset@s^0,w,c
  3902   002F60  6E13               	movwf	??_memset^0,c
  3903   002F62  5012               	movf	(memset@n+1)^0,w,c
  3904   002F64  2018               	addwfc	(memset@s+1)^0,w,c
  3905   002F66  6E14               	movwf	(??_memset+1)^0,c
  3906   002F68  0EFC               	movlw	252
  3907   002F6A  2413               	addwf	??_memset^0,w,c
  3908   002F6C  6ED9               	movwf	fsr2l,c
  3909   002F6E  0EFF               	movlw	255
  3910   002F70  2014               	addwfc	(??_memset+1)^0,w,c
  3911   002F72  6EDA               	movwf	fsr2h,c
  3912   002F74  C00F  FFDF         	movff	memset@c,indf2
  3913   002F78  5012               	movf	(memset@n+1)^0,w,c
  3914   002F7A  E107               	bnz	u10131
  3915   002F7C  0E09               	movlw	9
  3916   002F7E  5C11               	subwf	memset@n^0,w,c
  3917   002F80  B0D8               	btfsc	status,0,c
  3918   002F82  EFC5  F017         	goto	u10131
  3919   002F86  EFC7  F017         	goto	u10130
  3920   002F8A                     u10131:
  3921   002F8A  EFC9  F017         	goto	l9432
  3922   002F8E                     u10130:
  3923   002F8E  EFF7  F017         	goto	l2039
  3924   002F92                     l9432:
  3925   002F92  C017  F013         	movff	memset@s,??_memset
  3926   002F96  C018  F014         	movff	memset@s+1,??_memset+1
  3927   002F9A  1E13               	comf	??_memset^0,f,c
  3928   002F9C  1E14               	comf	(??_memset+1)^0,f,c
  3929   002F9E  4A13               	infsnz	??_memset^0,f,c
  3930   002FA0  2A14               	incf	(??_memset+1)^0,f,c
  3931   002FA2  0E03               	movlw	3
  3932   002FA4  1413               	andwf	??_memset^0,w,c
  3933   002FA6  6E15               	movwf	memset@k^0,c
  3934   002FA8  6A16               	clrf	(memset@k+1)^0,c
  3935   002FAA  5015               	movf	memset@k^0,w,c
  3936   002FAC  2617               	addwf	memset@s^0,f,c
  3937   002FAE  5016               	movf	(memset@k+1)^0,w,c
  3938   002FB0  2218               	addwfc	(memset@s+1)^0,f,c
  3939   002FB2  5015               	movf	memset@k^0,w,c
  3940   002FB4  5E11               	subwf	memset@n^0,f,c
  3941   002FB6  5016               	movf	(memset@k+1)^0,w,c
  3942   002FB8  5A12               	subwfb	(memset@n+1)^0,f,c
  3943   002FBA  0EFC               	movlw	252
  3944   002FBC  1611               	andwf	memset@n^0,f,c
  3945   002FBE  0EFF               	movlw	255
  3946   002FC0  1612               	andwf	(memset@n+1)^0,f,c
  3947   002FC2  EFEE  F017         	goto	l9440
  3948   002FC6                     l9434:
  3949   002FC6  C017  FFD9         	movff	memset@s,fsr2l
  3950   002FCA  C018  FFDA         	movff	memset@s+1,fsr2h
  3951   002FCE  C00F  FFDF         	movff	memset@c,indf2
  3952   002FD2  0611               	decf	memset@n^0,f,c
  3953   002FD4  A0D8               	btfss	status,0,c
  3954   002FD6  0612               	decf	(memset@n+1)^0,f,c
  3955   002FD8  4A17               	infsnz	memset@s^0,f,c
  3956   002FDA  2A18               	incf	(memset@s+1)^0,f,c
  3957   002FDC                     l9440:
  3958   002FDC  5011               	movf	memset@n^0,w,c
  3959   002FDE  1012               	iorwf	(memset@n+1)^0,w,c
  3960   002FE0  A4D8               	btfss	status,2,c
  3961   002FE2  EFF5  F017         	goto	u10141
  3962   002FE6  EFF7  F017         	goto	u10140
  3963   002FEA                     u10141:
  3964   002FEA  EFE3  F017         	goto	l9434
  3965   002FEE                     u10140:
  3966   002FEE                     l2039:
  3967   002FEE  0012               	return		;funcret
  3968   002FF0                     __end_of_memset:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _application_initialize *****************
  3972 ;; Defined at:
  3973 ;;		line 81 in file "application.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 9
  3994 ;; This function calls:
  3995 ;;		_Macl_initialize
  3996 ;;		_ecu_initialize
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text19
  4003   0045C4                     __ptext19:
  4004                           	callstack 0
  4005   0045C4                     _application_initialize:
  4006                           	callstack 21
  4007   0045C4                     
  4008                           ;application.c: 83:     Macl_initialize();
  4009   0045C4  EC50  F022         	call	_Macl_initialize	;wreg free
  4010                           
  4011                           ;application.c: 84:     ecu_initialize();
  4012   0045C8  EC76  F022         	call	_ecu_initialize	;wreg free
  4013   0045CC  0012               	return		;funcret
  4014   0045CE                     __end_of_application_initialize:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function _ecu_initialize *****************
  4018 ;; Defined at:
  4019 ;;		line 100 in file "ECU_layer/ecu_initialize.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  ret             1    0        unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 8
  4040 ;; This function calls:
  4041 ;;		_dc_motor_initialize
  4042 ;;		_lcd_8bit_initialize
  4043 ;; This function is called by:
  4044 ;;		_application_initialize
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text20
  4049   0044EC                     __ptext20:
  4050                           	callstack 0
  4051   0044EC                     _ecu_initialize:
  4052                           	callstack 21
  4053   0044EC  0EF1               	movlw	low _motor_1
  4054   0044EE  6E1B               	movwf	dc_motor_initialize@dc_motor^0,c
  4055   0044F0  0E00               	movlw	high _motor_1
  4056   0044F2  6E1C               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
  4057   0044F4  ECE0  F021         	call	_dc_motor_initialize	;wreg free
  4058   0044F8  0EE0               	movlw	low _lcd_1
  4059   0044FA  6E22               	movwf	lcd_8bit_initialize@lcd_obj^0,c
  4060   0044FC  0E00               	movlw	high _lcd_1
  4061   0044FE  6E23               	movwf	(lcd_8bit_initialize@lcd_obj+1)^0,c
  4062   004500  EC9A  F018         	call	_lcd_8bit_initialize	;wreg free
  4063   004504  0012               	return		;funcret
  4064   004506                     __end_of_ecu_initialize:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _lcd_8bit_initialize *****************
  4068 ;; Defined at:
  4069 ;;		line 226 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  lcd_obj         2   33[COMRAM] PTR const struct .
  4072 ;;		 -> lcd_1(10), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  i               2   36[COMRAM] int 
  4075 ;;  ret             1   38[COMRAM] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      unsigned char 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 7
  4092 ;; This function calls:
  4093 ;;		_gpio_pin_initialize
  4094 ;;		_lcd_8bit_send_command
  4095 ;; This function is called by:
  4096 ;;		_ecu_initialize
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text21
  4101   003134                     __ptext21:
  4102                           	callstack 0
  4103   003134                     _lcd_8bit_initialize:
  4104                           	callstack 21
  4105   003134                     
  4106                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 229:     if(lcd_obj == ((void*)0))
  4107   003134  5022               	movf	lcd_8bit_initialize@lcd_obj^0,w,c
  4108   003136  1023               	iorwf	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4109   003138  A4D8               	btfss	status,2,c
  4110   00313A  EFA1  F018         	goto	u9791
  4111   00313E  EFA3  F018         	goto	u9790
  4112   003142                     u9791:
  4113   003142  EFA7  F018         	goto	l9084
  4114   003146                     u9790:
  4115   003146                     
  4116                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 230:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 231:    
      +                               ret = (Std_ReturnType)0x00;
  4117   003146  0E00               	movlw	0
  4118   003148  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4119                           
  4120                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 232:     }
  4121   00314A  EF31  F019         	goto	l9120
  4122   00314E                     l9084:
  4123                           
  4124                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 234:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 235:    
      +                               ret = gpio_pin_initialize(&(lcd_obj->lcd_enable));
  4125   00314E  0E08               	movlw	8
  4126   003150  2422               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  4127   003152  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4128   003154  0E00               	movlw	0
  4129   003156  2023               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4130   003158  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4131   00315A  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4132   00315E  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4133                           
  4134                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 236:         ret = gpio_pin_initialize(&(lcd_obj->lcd
      +                          _rs));
  4135   003160  0E09               	movlw	9
  4136   003162  2422               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  4137   003164  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4138   003166  0E00               	movlw	0
  4139   003168  2023               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4140   00316A  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4141   00316C  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4142   003170  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4143   003172                     
  4144                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 238:         for(int i=0;i<8;i++)
  4145   003172  0E00               	movlw	0
  4146   003174  6E26               	movwf	(lcd_8bit_initialize@i+1)^0,c
  4147   003176  0E00               	movlw	0
  4148   003178  6E25               	movwf	lcd_8bit_initialize@i^0,c
  4149   00317A                     l9092:
  4150   00317A  5025               	movf	lcd_8bit_initialize@i^0,w,c
  4151   00317C  2422               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  4152   00317E  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4153   003180  5026               	movf	(lcd_8bit_initialize@i+1)^0,w,c
  4154   003182  2023               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4155   003184  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4156   003186  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4157   00318A                     
  4158                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 241:         }
  4159   00318A  4A25               	infsnz	lcd_8bit_initialize@i^0,f,c
  4160   00318C  2A26               	incf	(lcd_8bit_initialize@i+1)^0,f,c
  4161   00318E  BE26               	btfsc	(lcd_8bit_initialize@i+1)^0,7,c
  4162   003190  EFD3  F018         	goto	u9801
  4163   003194  5026               	movf	(lcd_8bit_initialize@i+1)^0,w,c
  4164   003196  E109               	bnz	u9800
  4165   003198  0E08               	movlw	8
  4166   00319A  5C25               	subwf	lcd_8bit_initialize@i^0,w,c
  4167   00319C  A0D8               	btfss	status,0,c
  4168   00319E  EFD3  F018         	goto	u9801
  4169   0031A2  EFD5  F018         	goto	u9800
  4170   0031A6                     u9801:
  4171   0031A6  EFBD  F018         	goto	l9092
  4172   0031AA                     u9800:
  4173   0031AA                     
  4174                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 243:         _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
  4175   0031AA  0E1A               	movlw	26
  4176   0031AC  6E24               	movwf	??_lcd_8bit_initialize^0,c
  4177   0031AE  0EF8               	movlw	248
  4178   0031B0                     u10847:
  4179   0031B0  2EE8               	decfsz	wreg,f,c
  4180   0031B2  D7FE               	bra	u10847
  4181   0031B4  2E24               	decfsz	??_lcd_8bit_initialize^0,f,c
  4182   0031B6  D7FC               	bra	u10847
  4183   0031B8  D000               	nop2	
  4184   0031BA  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4185   0031BE  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4186   0031C2  0E38               	movlw	56
  4187   0031C4  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4188   0031C6  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4189   0031CA                     
  4190                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 245:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00.0)));
  4191   0031CA  0E07               	movlw	7
  4192   0031CC  6E24               	movwf	??_lcd_8bit_initialize^0,c
  4193   0031CE  0E7D               	movlw	125
  4194   0031D0                     u10857:
  4195   0031D0  2EE8               	decfsz	wreg,f,c
  4196   0031D2  D7FE               	bra	u10857
  4197   0031D4  2E24               	decfsz	??_lcd_8bit_initialize^0,f,c
  4198   0031D6  D7FC               	bra	u10857
  4199   0031D8  F000               	nop	
  4200   0031DA  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4201   0031DE  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4202   0031E2  0E38               	movlw	56
  4203   0031E4  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4204   0031E6  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4205   0031EA                     
  4206                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 247:         _delay((unsigned long)((150)*(4000000UL/
      +                          4000000.0)));
  4207   0031EA  0E32               	movlw	50
  4208   0031EC                     u10867:
  4209   0031EC  2EE8               	decfsz	wreg,f,c
  4210   0031EE  D7FE               	bra	u10867
  4211   0031F0  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4212   0031F4  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4213   0031F8  0E38               	movlw	56
  4214   0031FA  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4215   0031FC  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4216   003200  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4217   003204  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4218   003208  0E01               	movlw	1
  4219   00320A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4220   00320C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4221   003210  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4222   003214  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4223   003218  0E02               	movlw	2
  4224   00321A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4225   00321C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4226   003220  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4227   003224  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4228   003228  0E06               	movlw	6
  4229   00322A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4230   00322C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4231   003230  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4232   003234  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4233   003238  0E0C               	movlw	12
  4234   00323A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4235   00323C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4236   003240  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4237   003244  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4238   003248  0E38               	movlw	56
  4239   00324A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4240   00324C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4241   003250                     
  4242                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 254:         ret = lcd_8bit_send_command(lcd_obj,0x80
      +                          );
  4243   003250  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4244   003254  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4245   003258  0E80               	movlw	128
  4246   00325A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4247   00325C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4248   003260  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4249   003262                     l9120:
  4250                           
  4251                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 256:     return ret;
  4252   003262  5027               	movf	lcd_8bit_initialize@ret^0,w,c
  4253   003264  0012               	return		;funcret
  4254   003266                     __end_of_lcd_8bit_initialize:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _lcd_8bit_send_command *****************
  4258 ;; Defined at:
  4259 ;;		line 267 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  lcd_obj         2   25[COMRAM] PTR const struct .
  4262 ;;		 -> lcd_1(10), 
  4263 ;;  command         1   27[COMRAM] unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  i               2   31[COMRAM] int 
  4266 ;;  ret             1   30[COMRAM] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      unsigned char 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4276 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;Total ram usage:        8 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; Hardware stack levels required when called: 6
  4283 ;; This function calls:
  4284 ;;		_gpio_pin_write_logic
  4285 ;;		_lcd_8bit_send_enable
  4286 ;; This function is called by:
  4287 ;;		_lcd_8bit_initialize
  4288 ;;		_lcd_8bit_set_cursor
  4289 ;;		_lcd_8bit_send_custome_chr
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text22
  4294   003DE2                     __ptext22:
  4295                           	callstack 0
  4296   003DE2                     _lcd_8bit_send_command:
  4297                           	callstack 22
  4298   003DE2                     
  4299                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 270:     if(lcd_obj == ((void*)0))
  4300   003DE2  501A               	movf	lcd_8bit_send_command@lcd_obj^0,w,c
  4301   003DE4  101B               	iorwf	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4302   003DE6  A4D8               	btfss	status,2,c
  4303   003DE8  EFF8  F01E         	goto	u8751
  4304   003DEC  EFFA  F01E         	goto	u8750
  4305   003DF0                     u8751:
  4306   003DF0  EFFE  F01E         	goto	l8460
  4307   003DF4                     u8750:
  4308   003DF4                     
  4309                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 271:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 272:    
      +                               ret = (Std_ReturnType)0x00;
  4310   003DF4  0E00               	movlw	0
  4311   003DF6  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4312                           
  4313                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 273:     }
  4314   003DF8  EF3A  F01F         	goto	l8476
  4315   003DFC                     l8460:
  4316   003DFC  0E09               	movlw	9
  4317   003DFE  241A               	addwf	lcd_8bit_send_command@lcd_obj^0,w,c
  4318   003E00  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4319   003E02  0E00               	movlw	0
  4320   003E04  201B               	addwfc	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4321   003E06  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4322   003E08  0E00               	movlw	0
  4323   003E0A  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4324   003E0C  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4325   003E10                     
  4326                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 277:         for(int i=0;i<8;i++)
  4327   003E10  0E00               	movlw	0
  4328   003E12  6E21               	movwf	(lcd_8bit_send_command@i+1)^0,c
  4329   003E14  0E00               	movlw	0
  4330   003E16  6E20               	movwf	lcd_8bit_send_command@i^0,c
  4331   003E18                     l8468:
  4332   003E18  5020               	movf	lcd_8bit_send_command@i^0,w,c
  4333   003E1A  241A               	addwf	lcd_8bit_send_command@lcd_obj^0,w,c
  4334   003E1C  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4335   003E1E  5021               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  4336   003E20  201B               	addwfc	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4337   003E22  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4338   003E24  C020  F01D         	movff	lcd_8bit_send_command@i,??_lcd_8bit_send_command
  4339   003E28  C01C  F01E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  4340   003E2C  2A1D               	incf	??_lcd_8bit_send_command^0,f,c
  4341   003E2E  EF1B  F01F         	goto	u8764
  4342   003E32                     u8765:
  4343   003E32  90D8               	bcf	status,0,c
  4344   003E34  321E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  4345   003E36                     u8764:
  4346   003E36  2E1D               	decfsz	??_lcd_8bit_send_command^0,f,c
  4347   003E38  EF19  F01F         	goto	u8765
  4348   003E3C  501E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  4349   003E3E  0B01               	andlw	1
  4350   003E40  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4351   003E42  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4352   003E46                     
  4353                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 280:         }
  4354   003E46  4A20               	infsnz	lcd_8bit_send_command@i^0,f,c
  4355   003E48  2A21               	incf	(lcd_8bit_send_command@i+1)^0,f,c
  4356   003E4A  BE21               	btfsc	(lcd_8bit_send_command@i+1)^0,7,c
  4357   003E4C  EF31  F01F         	goto	u8771
  4358   003E50  5021               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  4359   003E52  E109               	bnz	u8770
  4360   003E54  0E08               	movlw	8
  4361   003E56  5C20               	subwf	lcd_8bit_send_command@i^0,w,c
  4362   003E58  A0D8               	btfss	status,0,c
  4363   003E5A  EF31  F01F         	goto	u8771
  4364   003E5E  EF33  F01F         	goto	u8770
  4365   003E62                     u8771:
  4366   003E62  EF0C  F01F         	goto	l8468
  4367   003E66                     u8770:
  4368   003E66                     
  4369                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 281:         ret = lcd_8bit_send_enable(lcd_obj);
  4370   003E66  C01A  F017         	movff	lcd_8bit_send_command@lcd_obj,lcd_8bit_send_enable@lcd_obj
  4371   003E6A  C01B  F018         	movff	lcd_8bit_send_command@lcd_obj+1,lcd_8bit_send_enable@lcd_obj+1
  4372   003E6E  EC0D  F021         	call	_lcd_8bit_send_enable	;wreg free
  4373   003E72  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4374   003E74                     l8476:
  4375                           
  4376                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 283:     return ret;
  4377   003E74  501F               	movf	lcd_8bit_send_command@ret^0,w,c
  4378   003E76  0012               	return		;funcret
  4379   003E78                     __end_of_lcd_8bit_send_command:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _lcd_8bit_send_enable *****************
  4383 ;; Defined at:
  4384 ;;		line 534 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  lcd_obj         2   22[COMRAM] PTR const struct .
  4387 ;;		 -> lcd_1(10), 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  ret             1   24[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      unsigned char 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;Total ram usage:        3 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 5
  4406 ;; This function calls:
  4407 ;;		_gpio_pin_write_logic
  4408 ;; This function is called by:
  4409 ;;		_lcd_8bit_send_command
  4410 ;;		_lcd_8bit_send_char
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text23
  4415   00421A                     __ptext23:
  4416                           	callstack 0
  4417   00421A                     _lcd_8bit_send_enable:
  4418                           	callstack 22
  4419   00421A                     
  4420                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 537:     if(lcd_obj == ((void*)0))
  4421   00421A  5017               	movf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4422   00421C  1018               	iorwf	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4423   00421E  A4D8               	btfss	status,2,c
  4424   004220  EF14  F021         	goto	u8561
  4425   004224  EF16  F021         	goto	u8560
  4426   004228                     u8561:
  4427   004228  EF1A  F021         	goto	l8358
  4428   00422C                     u8560:
  4429   00422C                     
  4430                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 538:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 539:    
      +                               ret = (Std_ReturnType)0x00;
  4431   00422C  0E00               	movlw	0
  4432   00422E  6E19               	movwf	lcd_8bit_send_enable@ret^0,c
  4433                           
  4434                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 540:     }
  4435   004230  EF32  F021         	goto	l8362
  4436   004234                     l8358:
  4437   004234  0E08               	movlw	8
  4438   004236  2417               	addwf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4439   004238  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4440   00423A  0E00               	movlw	0
  4441   00423C  2018               	addwfc	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4442   00423E  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4443   004240  0E01               	movlw	1
  4444   004242  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4445   004244  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4446   004248                     
  4447                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 544:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  4448   004248  D000               	nop2		;2 cycle nop
  4449   00424A  D000               	nop2		;2 cycle nop
  4450   00424C  F000               	nop	
  4451                           
  4452                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 545:         ret = gpio_pin_write_logic(&(lcd_obj->lc
      +                          d_enable),GPIO_LOW);
  4453   00424E  0E08               	movlw	8
  4454   004250  2417               	addwf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4455   004252  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4456   004254  0E00               	movlw	0
  4457   004256  2018               	addwfc	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4458   004258  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4459   00425A  0E00               	movlw	0
  4460   00425C  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4461   00425E  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4462   004262  6E19               	movwf	lcd_8bit_send_enable@ret^0,c
  4463   004264                     l8362:
  4464                           
  4465                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 548:     return ret;
  4466   004264  5019               	movf	lcd_8bit_send_enable@ret^0,w,c
  4467   004266  0012               	return		;funcret
  4468   004268                     __end_of_lcd_8bit_send_enable:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _dc_motor_initialize *****************
  4472 ;; Defined at:
  4473 ;;		line 20 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  dc_motor        2   26[COMRAM] PTR const struct .
  4476 ;;		 -> motor_1(2), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  ret             1   28[COMRAM] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        3 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 6
  4495 ;; This function calls:
  4496 ;;		_gpio_pin_initialize
  4497 ;; This function is called by:
  4498 ;;		_ecu_initialize
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text24
  4503   0043C0                     __ptext24:
  4504                           	callstack 0
  4505   0043C0                     _dc_motor_initialize:
  4506                           	callstack 22
  4507   0043C0                     
  4508                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 23:     if(dc_motor == ((void*)0))
  4509   0043C0  501B               	movf	dc_motor_initialize@dc_motor^0,w,c
  4510   0043C2  101C               	iorwf	(dc_motor_initialize@dc_motor+1)^0,w,c
  4511   0043C4  A4D8               	btfss	status,2,c
  4512   0043C6  EFE7  F021         	goto	u9841
  4513   0043CA  EFE9  F021         	goto	u9840
  4514   0043CE                     u9841:
  4515   0043CE  EFED  F021         	goto	l9156
  4516   0043D2                     u9840:
  4517   0043D2                     
  4518                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 24:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 25:    
      +                               ret = (Std_ReturnType)0x00;
  4519   0043D2  0E00               	movlw	0
  4520   0043D4  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4521                           
  4522                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 26:     }
  4523   0043D6  EFFD  F021         	goto	l9158
  4524   0043DA                     l9156:
  4525                           
  4526                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 28:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 31:    
      +                               ret = gpio_pin_initialize(&(dc_motor->dc_motor_pin[0]));
  4527   0043DA  C01B  F017         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialize@pin
  4528   0043DE  C01C  F018         	movff	dc_motor_initialize@dc_motor+1,gpio_pin_initialize@pin+1
  4529   0043E2  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4530   0043E6  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4531                           
  4532                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 32:         ret = gpio_pin_initialize(&(dc_motor->dc
      +                          _motor_pin[1]));
  4533   0043E8  0E01               	movlw	1
  4534   0043EA  241B               	addwf	dc_motor_initialize@dc_motor^0,w,c
  4535   0043EC  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4536   0043EE  0E00               	movlw	0
  4537   0043F0  201C               	addwfc	(dc_motor_initialize@dc_motor+1)^0,w,c
  4538   0043F2  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4539   0043F4  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4540   0043F8  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4541   0043FA                     l9158:
  4542                           
  4543                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 34:     return ret;
  4544   0043FA  501D               	movf	dc_motor_initialize@ret^0,w,c
  4545   0043FC  0012               	return		;funcret
  4546   0043FE                     __end_of_dc_motor_initialize:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function _Macl_initialize *****************
  4550 ;; Defined at:
  4551 ;;		line 53 in file "MCAL_layer/Mcal_Initialize.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  ret             1    0        unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 7
  4572 ;; This function calls:
  4573 ;;		_ADC_init
  4574 ;;		_CCP_Init
  4575 ;;		_Timer2_init
  4576 ;; This function is called by:
  4577 ;;		_application_initialize
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text25
  4582   0044A0                     __ptext25:
  4583                           	callstack 0
  4584   0044A0                     _Macl_initialize:
  4585                           	callstack 22
  4586   0044A0  0EEA               	movlw	low _Lm35
  4587   0044A2  6E10               	movwf	ADC_init@ADC_obj^0,c
  4588   0044A4  0E00               	movlw	high _Lm35
  4589   0044A6  6E11               	movwf	(ADC_init@ADC_obj+1)^0,c
  4590   0044A8  EC5F  F01A         	call	_ADC_init	;wreg free
  4591   0044AC  0ED0               	movlw	low _ccp_obj
  4592   0044AE  0100               	movlb	0	; () banked
  4593   0044B0  6FF3               	movwf	CCP_Init@ccp_obj& (0+255),b
  4594   0044B2  0E00               	movlw	high _ccp_obj
  4595   0044B4  6FF4               	movwf	(CCP_Init@ccp_obj+1)& (0+255),b
  4596   0044B6  EC2F  F008         	call	_CCP_Init	;wreg free
  4597   0044BA  0EB5               	movlw	low _timer2
  4598   0044BC  6E0D               	movwf	Timer2_init@TM2_obj^0,c
  4599   0044BE  0E00               	movlw	high _timer2
  4600   0044C0  6E0E               	movwf	(Timer2_init@TM2_obj+1)^0,c
  4601   0044C2  EC08  F01E         	call	_Timer2_init	;wreg free
  4602   0044C6  0012               	return		;funcret
  4603   0044C8                     __end_of_Macl_initialize:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _Timer2_init *****************
  4607 ;; Defined at:
  4608 ;;		line 16 in file "MCAL_layer/Timer2/Timer2.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  TM2_obj         2   12[COMRAM] PTR const struct .
  4611 ;;		 -> timer2(5), 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  ret             1   15[COMRAM] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      unsigned char 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        4 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 4
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_Macl_initialize
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text26
  4638   003C10                     __ptext26:
  4639                           	callstack 0
  4640   003C10                     _Timer2_init:
  4641                           	callstack 24
  4642   003C10                     
  4643                           ;MCAL_layer/Timer2/Timer2.c: 16: Std_ReturnType Timer2_init(const Timer2_t *TM2_obj);MCA
      +                          L_layer/Timer2/Timer2.c: 17: {;MCAL_layer/Timer2/Timer2.c: 18:     Std_ReturnType ret = 
      +                          (Std_ReturnType)0x01;
  4644   003C10  0E01               	movlw	1
  4645   003C12  6E10               	movwf	Timer2_init@ret^0,c
  4646   003C14                     
  4647                           ;MCAL_layer/Timer2/Timer2.c: 19:     if(TM2_obj == ((void*)0))
  4648   003C14  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4649   003C16  100E               	iorwf	(Timer2_init@TM2_obj+1)^0,w,c
  4650   003C18  A4D8               	btfss	status,2,c
  4651   003C1A  EF11  F01E         	goto	u6121
  4652   003C1E  EF13  F01E         	goto	u6120
  4653   003C22                     u6121:
  4654   003C22  EF17  F01E         	goto	l1209
  4655   003C26                     u6120:
  4656   003C26                     
  4657                           ;MCAL_layer/Timer2/Timer2.c: 20:     {;MCAL_layer/Timer2/Timer2.c: 21:         ret = (St
      +                          d_ReturnType)0x00;
  4658   003C26  0E00               	movlw	0
  4659   003C28  6E10               	movwf	Timer2_init@ret^0,c
  4660                           
  4661                           ;MCAL_layer/Timer2/Timer2.c: 22:     }
  4662   003C2A  EF56  F01E         	goto	l6482
  4663   003C2E                     l1209:
  4664                           
  4665                           ;MCAL_layer/Timer2/Timer2.c: 24:     {;MCAL_layer/Timer2/Timer2.c: 25:         (T2CONbit
      +                          s.TMR2ON = 0);
  4666   003C2E  94CA               	bcf	202,2,c	;volatile
  4667   003C30                     
  4668                           ;MCAL_layer/Timer2/Timer2.c: 26:         (T2CONbits.T2CKPS = TM2_obj->prescaler_value);
  4669   003C30  EE20 F004          	lfsr	2,4
  4670   003C34  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4671   003C36  26D9               	addwf	fsr2l,f,c
  4672   003C38  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4673   003C3A  22DA               	addwfc	fsr2h,f,c
  4674   003C3C  50DF               	movf	223,w,c
  4675   003C3E  0B03               	andlw	3
  4676   003C40  6E0F               	movwf	??_Timer2_init^0,c
  4677   003C42  50CA               	movf	202,w,c	;volatile
  4678   003C44  180F               	xorwf	??_Timer2_init^0,w,c
  4679   003C46  0BFC               	andlw	-4
  4680   003C48  180F               	xorwf	??_Timer2_init^0,w,c
  4681   003C4A  6ECA               	movwf	202,c	;volatile
  4682                           
  4683                           ;MCAL_layer/Timer2/Timer2.c: 27:         (T2CONbits.TOUTPS = TM2_obj->postcaler_value);
  4684   003C4C  EE20 F004          	lfsr	2,4
  4685   003C50  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4686   003C52  26D9               	addwf	fsr2l,f,c
  4687   003C54  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4688   003C56  22DA               	addwfc	fsr2h,f,c
  4689   003C58  30DF               	rrcf	223,w,c
  4690   003C5A  32E8               	rrcf	wreg,f,c
  4691   003C5C  0B0F               	andlw	15
  4692   003C5E  6E0F               	movwf	??_Timer2_init^0,c
  4693   003C60  460F               	rlncf	??_Timer2_init^0,f,c
  4694   003C62  460F               	rlncf	??_Timer2_init^0,f,c
  4695   003C64  460F               	rlncf	??_Timer2_init^0,f,c
  4696   003C66  50CA               	movf	202,w,c	;volatile
  4697   003C68  180F               	xorwf	??_Timer2_init^0,w,c
  4698   003C6A  0B87               	andlw	-121
  4699   003C6C  180F               	xorwf	??_Timer2_init^0,w,c
  4700   003C6E  6ECA               	movwf	202,c	;volatile
  4701                           
  4702                           ;MCAL_layer/Timer2/Timer2.c: 28:         TMR2 = TM2_obj->preload_value;
  4703   003C70  EE20 F003          	lfsr	2,3
  4704   003C74  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4705   003C76  26D9               	addwf	fsr2l,f,c
  4706   003C78  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4707   003C7A  22DA               	addwfc	fsr2h,f,c
  4708   003C7C  50DF               	movf	indf2,w,c
  4709   003C7E  6ECC               	movwf	204,c	;volatile
  4710                           
  4711                           ;MCAL_layer/Timer2/Timer2.c: 29:         timer2_preload = TM2_obj->preload_value;
  4712   003C80  EE20 F003          	lfsr	2,3
  4713   003C84  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4714   003C86  26D9               	addwf	fsr2l,f,c
  4715   003C88  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4716   003C8A  22DA               	addwfc	fsr2h,f,c
  4717   003C8C  50DF               	movf	indf2,w,c
  4718   003C8E  0100               	movlb	0	; () banked
  4719   003C90  6FB1               	movwf	_timer2_preload& (0+255),b
  4720   003C92                     
  4721                           ; BSR set to: 0
  4722                           ;MCAL_layer/Timer2/Timer2.c: 31:         (PIE1bits.TMR2IE = 1);
  4723   003C92  829D               	bsf	157,1,c	;volatile
  4724   003C94                     
  4725                           ; BSR set to: 0
  4726                           ;MCAL_layer/Timer2/Timer2.c: 32:         (PIR1bits.TMR2IF = 0);
  4727   003C94  929E               	bcf	158,1,c	;volatile
  4728   003C96                     
  4729                           ; BSR set to: 0
  4730                           ;MCAL_layer/Timer2/Timer2.c: 49:         (INTCONbits.GIE = 1);
  4731   003C96  8EF2               	bsf	242,7,c	;volatile
  4732   003C98                     
  4733                           ; BSR set to: 0
  4734                           ;MCAL_layer/Timer2/Timer2.c: 50:         (INTCONbits.PEIE = 1);
  4735   003C98  8CF2               	bsf	242,6,c	;volatile
  4736   003C9A                     
  4737                           ; BSR set to: 0
  4738                           ;MCAL_layer/Timer2/Timer2.c: 52:         Timer2InterruptHandeler = TM2_obj->Timer2CallBa
      +                          ck;
  4739   003C9A  C00D  FFD9         	movff	Timer2_init@TM2_obj,fsr2l
  4740   003C9E  C00E  FFDA         	movff	Timer2_init@TM2_obj+1,fsr2h
  4741   003CA2  CFDE F09E          	movff	postinc2,_Timer2InterruptHandeler
  4742   003CA6  CFDD F09F          	movff	postdec2,_Timer2InterruptHandeler+1
  4743   003CAA                     
  4744                           ; BSR set to: 0
  4745                           ;MCAL_layer/Timer2/Timer2.c: 54:         (T2CONbits.TMR2ON = 1);
  4746   003CAA  84CA               	bsf	202,2,c	;volatile
  4747   003CAC                     l6482:
  4748                           
  4749                           ;MCAL_layer/Timer2/Timer2.c: 56:     return ret;
  4750   003CAC  5010               	movf	Timer2_init@ret^0,w,c
  4751   003CAE  0012               	return		;funcret
  4752   003CB0                     __end_of_Timer2_init:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _CCP_Init *****************
  4756 ;; Defined at:
  4757 ;;		line 19 in file "MCAL_layer/CCP/CCP1.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  ccp_obj         2    0[BANK0 ] PTR const struct .
  4760 ;;		 -> ccp_obj(16), 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  ret             1    8[BANK1 ] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      unsigned char 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:       13 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; Hardware stack levels required when called: 6
  4779 ;; This function calls:
  4780 ;;		_CCP_Timer_config
  4781 ;;		___fladd
  4782 ;;		___fldiv
  4783 ;;		___flmul
  4784 ;;		___fltol
  4785 ;;		___xxtofl
  4786 ;;		_gpio_pin_initialize
  4787 ;; This function is called by:
  4788 ;;		_Macl_initialize
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text27
  4793   00105E                     __ptext27:
  4794                           	callstack 0
  4795   00105E                     _CCP_Init:
  4796                           	callstack 22
  4797   00105E                     
  4798                           ;MCAL_layer/CCP/CCP1.c: 22:     if(ccp_obj == ((void*)0))
  4799   00105E  0100               	movlb	0	; () banked
  4800   001060  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4801   001062  11F4               	iorwf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4802   001064  A4D8               	btfss	status,2,c
  4803   001066  EF37  F008         	goto	u9851
  4804   00106A  EF39  F008         	goto	u9850
  4805   00106E                     u9851:
  4806   00106E  EF3E  F008         	goto	l9168
  4807   001072                     u9850:
  4808   001072                     
  4809                           ; BSR set to: 0
  4810                           ;MCAL_layer/CCP/CCP1.c: 23:     {;MCAL_layer/CCP/CCP1.c: 24:         ret = (Std_ReturnTy
      +                          pe)0x00;
  4811   001072  0E00               	movlw	0
  4812   001074  0101               	movlb	1	; () banked
  4813   001076  6F55               	movwf	CCP_Init@ret& (0+255),b
  4814                           
  4815                           ;MCAL_layer/CCP/CCP1.c: 25:     }
  4816   001078  EFDC  F00A         	goto	l9280
  4817   00107C                     l9168:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;MCAL_layer/CCP/CCP1.c: 27:     {;MCAL_layer/CCP/CCP1.c: 28:         (CCP1CONbits.CCP1M 
      +                          = (uint8)0);
  4821   00107C  0EF0               	movlw	-16
  4822   00107E  16BD               	andwf	189,f,c	;volatile
  4823   001080                     
  4824                           ; BSR set to: 0
  4825                           ;MCAL_layer/CCP/CCP1.c: 29:         if(ccp_obj->cpp_mode == CCP_CAPTURE_MODE_SELECT)
  4826   001080  C0F3  FFD9         	movff	CCP_Init@ccp_obj,fsr2l
  4827   001084  C0F4  FFDA         	movff	CCP_Init@ccp_obj+1,fsr2h
  4828   001088  04DE               	decf	postinc2,w,c
  4829   00108A  A4D8               	btfss	status,2,c
  4830   00108C  EF4A  F008         	goto	u9861
  4831   001090  EF4C  F008         	goto	u9860
  4832   001094                     u9861:
  4833   001094  EFEB  F008         	goto	l9206
  4834   001098                     u9860:
  4835   001098                     
  4836                           ; BSR set to: 0
  4837                           ;MCAL_layer/CCP/CCP1.c: 30:         {;MCAL_layer/CCP/CCP1.c: 31:             CCP_Timer_c
      +                          onfig(ccp_obj);
  4838   001098  C0F3  F00D         	movff	CCP_Init@ccp_obj,CCP_Timer_config@ccp_obj
  4839   00109C  C0F4  F00E         	movff	CCP_Init@ccp_obj+1,CCP_Timer_config@ccp_obj+1
  4840   0010A0  EC8A  F020         	call	_CCP_Timer_config	;wreg free
  4841   0010A4                     
  4842                           ;MCAL_layer/CCP/CCP1.c: 32:             if(ccp_obj->ccp_inst == CCP1_inst)
  4843   0010A4  0100               	movlb	0	; () banked
  4844   0010A6  EE20 F001          	lfsr	2,1
  4845   0010AA  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4846   0010AC  26D9               	addwf	fsr2l,f,c
  4847   0010AE  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4848   0010B0  22DA               	addwfc	fsr2h,f,c
  4849   0010B2  50DF               	movf	indf2,w,c
  4850   0010B4  A4D8               	btfss	status,2,c
  4851   0010B6  EF5F  F008         	goto	u9871
  4852   0010BA  EF61  F008         	goto	u9870
  4853   0010BE                     u9871:
  4854   0010BE  EFA0  F008         	goto	l9190
  4855   0010C2                     u9870:
  4856   0010C2  EF7D  F008         	goto	l9188
  4857   0010C6                     l9178:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;MCAL_layer/CCP/CCP1.c: 37:                         (CCP1CONbits.CCP1M = (uint8)4);
  4861   0010C6  50BD               	movf	189,w,c	;volatile
  4862   0010C8  0BF0               	andlw	-16
  4863   0010CA  0904               	iorlw	4
  4864   0010CC  6EBD               	movwf	189,c	;volatile
  4865                           
  4866                           ;MCAL_layer/CCP/CCP1.c: 38:                         break;
  4867   0010CE  EF96  F00A         	goto	l9266
  4868   0010D2                     l9180:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;MCAL_layer/CCP/CCP1.c: 40:                         (CCP1CONbits.CCP1M = (uint8)5);
  4872   0010D2  50BD               	movf	189,w,c	;volatile
  4873   0010D4  0BF0               	andlw	-16
  4874   0010D6  0905               	iorlw	5
  4875   0010D8  6EBD               	movwf	189,c	;volatile
  4876                           
  4877                           ;MCAL_layer/CCP/CCP1.c: 41:                         break;
  4878   0010DA  EF96  F00A         	goto	l9266
  4879   0010DE                     l9182:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;MCAL_layer/CCP/CCP1.c: 43:                         (CCP1CONbits.CCP1M = (uint8)6);
  4883   0010DE  50BD               	movf	189,w,c	;volatile
  4884   0010E0  0BF0               	andlw	-16
  4885   0010E2  0906               	iorlw	6
  4886   0010E4  6EBD               	movwf	189,c	;volatile
  4887                           
  4888                           ;MCAL_layer/CCP/CCP1.c: 44:                         break;
  4889   0010E6  EF96  F00A         	goto	l9266
  4890   0010EA                     l9184:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;MCAL_layer/CCP/CCP1.c: 46:                         (CCP1CONbits.CCP1M = (uint8)7);
  4894   0010EA  50BD               	movf	189,w,c	;volatile
  4895   0010EC  0BF0               	andlw	-16
  4896   0010EE  0907               	iorlw	7
  4897   0010F0  6EBD               	movwf	189,c	;volatile
  4898                           
  4899                           ;MCAL_layer/CCP/CCP1.c: 47:                         break;
  4900   0010F2  EF96  F00A         	goto	l9266
  4901   0010F6                     l9186:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;MCAL_layer/CCP/CCP1.c: 50:                 }
  4905   0010F6  EF96  F00A         	goto	l9266
  4906   0010FA                     l9188:
  4907                           
  4908                           ; BSR set to: 0
  4909   0010FA  EE20 F002          	lfsr	2,2
  4910   0010FE  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4911   001100  26D9               	addwf	fsr2l,f,c
  4912   001102  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4913   001104  22DA               	addwfc	fsr2h,f,c
  4914   001106  50DF               	movf	indf2,w,c
  4915   001108  6FF5               	movwf	??_CCP_Init& (0+255),b
  4916   00110A  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  4917                           
  4918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4919                           ; Switch size 1, requested type "simple"
  4920                           ; Number of cases is 1, Range of values is 0 to 0
  4921                           ; switch strategies available:
  4922                           ; Name         Instructions Cycles
  4923                           ; simple_byte            4     3 (average)
  4924                           ;	Chosen strategy is simple_byte
  4925   00110C  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  4926   00110E  0A00               	xorlw	0	; case 0
  4927   001110  B4D8               	btfsc	status,2,c
  4928   001112  EF8D  F008         	goto	l10354
  4929   001116  EF7B  F008         	goto	l9186
  4930   00111A                     l10354:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ; Switch size 1, requested type "simple"
  4934                           ; Number of cases is 4, Range of values is 4 to 7
  4935                           ; switch strategies available:
  4936                           ; Name         Instructions Cycles
  4937                           ; simple_byte           13     7 (average)
  4938                           ;	Chosen strategy is simple_byte
  4939   00111A  51F5               	movf	??_CCP_Init& (0+255),w,b
  4940   00111C  0A04               	xorlw	4	; case 4
  4941   00111E  B4D8               	btfsc	status,2,c
  4942   001120  EF63  F008         	goto	l9178
  4943   001124  0A01               	xorlw	1	; case 5
  4944   001126  B4D8               	btfsc	status,2,c
  4945   001128  EF69  F008         	goto	l9180
  4946   00112C  0A03               	xorlw	3	; case 6
  4947   00112E  B4D8               	btfsc	status,2,c
  4948   001130  EF6F  F008         	goto	l9182
  4949   001134  0A01               	xorlw	1	; case 7
  4950   001136  B4D8               	btfsc	status,2,c
  4951   001138  EF75  F008         	goto	l9184
  4952   00113C  EF7B  F008         	goto	l9186
  4953   001140                     l9190:
  4954                           
  4955                           ; BSR set to: 0
  4956   001140  EE20 F001          	lfsr	2,1
  4957   001144  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4958   001146  26D9               	addwf	fsr2l,f,c
  4959   001148  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4960   00114A  22DA               	addwfc	fsr2h,f,c
  4961   00114C  04DE               	decf	postinc2,w,c
  4962   00114E  A4D8               	btfss	status,2,c
  4963   001150  EFAC  F008         	goto	u9881
  4964   001154  EFAE  F008         	goto	u9880
  4965   001158                     u9881:
  4966   001158  EF96  F00A         	goto	l9266
  4967   00115C                     u9880:
  4968   00115C  EFC8  F008         	goto	l9204
  4969   001160                     l9194:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;MCAL_layer/CCP/CCP1.c: 57:                         (CCP2CONbits.CCP2M = (uint8)4);
  4973   001160  50BA               	movf	186,w,c	;volatile
  4974   001162  0BF0               	andlw	-16
  4975   001164  0904               	iorlw	4
  4976   001166  6EBA               	movwf	186,c	;volatile
  4977                           
  4978                           ;MCAL_layer/CCP/CCP1.c: 58:                         break;
  4979   001168  EF96  F00A         	goto	l9266
  4980   00116C                     l9196:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;MCAL_layer/CCP/CCP1.c: 60:                         (CCP2CONbits.CCP2M = (uint8)5);
  4984   00116C  50BA               	movf	186,w,c	;volatile
  4985   00116E  0BF0               	andlw	-16
  4986   001170  0905               	iorlw	5
  4987   001172  6EBA               	movwf	186,c	;volatile
  4988                           
  4989                           ;MCAL_layer/CCP/CCP1.c: 61:                         break;
  4990   001174  EF96  F00A         	goto	l9266
  4991   001178                     l9198:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;MCAL_layer/CCP/CCP1.c: 63:                         (CCP2CONbits.CCP2M = (uint8)6);
  4995   001178  50BA               	movf	186,w,c	;volatile
  4996   00117A  0BF0               	andlw	-16
  4997   00117C  0906               	iorlw	6
  4998   00117E  6EBA               	movwf	186,c	;volatile
  4999                           
  5000                           ;MCAL_layer/CCP/CCP1.c: 64:                         break;
  5001   001180  EF96  F00A         	goto	l9266
  5002   001184                     l9200:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;MCAL_layer/CCP/CCP1.c: 66:                         (CCP2CONbits.CCP2M = (uint8)7);
  5006   001184  50BA               	movf	186,w,c	;volatile
  5007   001186  0BF0               	andlw	-16
  5008   001188  0907               	iorlw	7
  5009   00118A  6EBA               	movwf	186,c	;volatile
  5010                           
  5011                           ;MCAL_layer/CCP/CCP1.c: 67:                         break;
  5012   00118C  EF96  F00A         	goto	l9266
  5013   001190                     l9204:
  5014                           
  5015                           ; BSR set to: 0
  5016   001190  EE20 F002          	lfsr	2,2
  5017   001194  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5018   001196  26D9               	addwf	fsr2l,f,c
  5019   001198  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5020   00119A  22DA               	addwfc	fsr2h,f,c
  5021   00119C  50DF               	movf	indf2,w,c
  5022   00119E  6FF5               	movwf	??_CCP_Init& (0+255),b
  5023   0011A0  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  5024                           
  5025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5026                           ; Switch size 1, requested type "simple"
  5027                           ; Number of cases is 1, Range of values is 0 to 0
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte            4     3 (average)
  5031                           ;	Chosen strategy is simple_byte
  5032   0011A2  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  5033   0011A4  0A00               	xorlw	0	; case 0
  5034   0011A6  B4D8               	btfsc	status,2,c
  5035   0011A8  EFD8  F008         	goto	l10356
  5036   0011AC  EF7B  F008         	goto	l9186
  5037   0011B0                     l10356:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ; Switch size 1, requested type "simple"
  5041                           ; Number of cases is 4, Range of values is 4 to 7
  5042                           ; switch strategies available:
  5043                           ; Name         Instructions Cycles
  5044                           ; simple_byte           13     7 (average)
  5045                           ;	Chosen strategy is simple_byte
  5046   0011B0  51F5               	movf	??_CCP_Init& (0+255),w,b
  5047   0011B2  0A04               	xorlw	4	; case 4
  5048   0011B4  B4D8               	btfsc	status,2,c
  5049   0011B6  EFB0  F008         	goto	l9194
  5050   0011BA  0A01               	xorlw	1	; case 5
  5051   0011BC  B4D8               	btfsc	status,2,c
  5052   0011BE  EFB6  F008         	goto	l9196
  5053   0011C2  0A03               	xorlw	3	; case 6
  5054   0011C4  B4D8               	btfsc	status,2,c
  5055   0011C6  EFBC  F008         	goto	l9198
  5056   0011CA  0A01               	xorlw	1	; case 7
  5057   0011CC  B4D8               	btfsc	status,2,c
  5058   0011CE  EFC2  F008         	goto	l9200
  5059   0011D2  EF7B  F008         	goto	l9186
  5060   0011D6                     l9206:
  5061                           
  5062                           ; BSR set to: 0
  5063   0011D6  C0F3  FFD9         	movff	CCP_Init@ccp_obj,fsr2l
  5064   0011DA  C0F4  FFDA         	movff	CCP_Init@ccp_obj+1,fsr2h
  5065   0011DE  50DF               	movf	indf2,w,c
  5066   0011E0  A4D8               	btfss	status,2,c
  5067   0011E2  EFF5  F008         	goto	u9891
  5068   0011E6  EFF7  F008         	goto	u9890
  5069   0011EA                     u9891:
  5070   0011EA  EFA8  F009         	goto	l9246
  5071   0011EE                     u9890:
  5072   0011EE                     
  5073                           ; BSR set to: 0
  5074                           ;MCAL_layer/CCP/CCP1.c: 75:         {;MCAL_layer/CCP/CCP1.c: 76:             CCP_Timer_c
      +                          onfig(ccp_obj);
  5075   0011EE  C0F3  F00D         	movff	CCP_Init@ccp_obj,CCP_Timer_config@ccp_obj
  5076   0011F2  C0F4  F00E         	movff	CCP_Init@ccp_obj+1,CCP_Timer_config@ccp_obj+1
  5077   0011F6  EC8A  F020         	call	_CCP_Timer_config	;wreg free
  5078   0011FA                     
  5079                           ;MCAL_layer/CCP/CCP1.c: 77:             if(ccp_obj->ccp_inst == CCP1_inst)
  5080   0011FA  0100               	movlb	0	; () banked
  5081   0011FC  EE20 F001          	lfsr	2,1
  5082   001200  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5083   001202  26D9               	addwf	fsr2l,f,c
  5084   001204  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5085   001206  22DA               	addwfc	fsr2h,f,c
  5086   001208  50DF               	movf	indf2,w,c
  5087   00120A  A4D8               	btfss	status,2,c
  5088   00120C  EF0A  F009         	goto	u9901
  5089   001210  EF0C  F009         	goto	u9900
  5090   001214                     u9901:
  5091   001214  EF53  F009         	goto	l9228
  5092   001218                     u9900:
  5093   001218  EF2C  F009         	goto	l9226
  5094   00121C                     l9214:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;MCAL_layer/CCP/CCP1.c: 82:                         (CCP1CONbits.CCP1M = (uint8)2);
  5098   00121C  50BD               	movf	189,w,c	;volatile
  5099   00121E  0BF0               	andlw	-16
  5100   001220  0902               	iorlw	2
  5101   001222  6EBD               	movwf	189,c	;volatile
  5102                           
  5103                           ;MCAL_layer/CCP/CCP1.c: 83:                         break;
  5104   001224  EF96  F00A         	goto	l9266
  5105   001228                     l9216:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;MCAL_layer/CCP/CCP1.c: 85:                         (CCP1CONbits.CCP1M = (uint8)8);
  5109   001228  50BD               	movf	189,w,c	;volatile
  5110   00122A  0BF0               	andlw	-16
  5111   00122C  0908               	iorlw	8
  5112   00122E  6EBD               	movwf	189,c	;volatile
  5113                           
  5114                           ;MCAL_layer/CCP/CCP1.c: 86:                         break;
  5115   001230  EF96  F00A         	goto	l9266
  5116   001234                     l9218:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;MCAL_layer/CCP/CCP1.c: 88:                         (CCP1CONbits.CCP1M = (uint8)9);
  5120   001234  50BD               	movf	189,w,c	;volatile
  5121   001236  0BF0               	andlw	-16
  5122   001238  0909               	iorlw	9
  5123   00123A  6EBD               	movwf	189,c	;volatile
  5124                           
  5125                           ;MCAL_layer/CCP/CCP1.c: 89:                         break;
  5126   00123C  EF96  F00A         	goto	l9266
  5127   001240                     l9220:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;MCAL_layer/CCP/CCP1.c: 91:                         (CCP1CONbits.CCP1M = (uint8)10);
  5131   001240  50BD               	movf	189,w,c	;volatile
  5132   001242  0BF0               	andlw	-16
  5133   001244  090A               	iorlw	10
  5134   001246  6EBD               	movwf	189,c	;volatile
  5135                           
  5136                           ;MCAL_layer/CCP/CCP1.c: 92:                         break;
  5137   001248  EF96  F00A         	goto	l9266
  5138   00124C                     l9222:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;MCAL_layer/CCP/CCP1.c: 94:                         (CCP1CONbits.CCP1M = (uint8)11);
  5142   00124C  50BD               	movf	189,w,c	;volatile
  5143   00124E  0BF0               	andlw	-16
  5144   001250  090B               	iorlw	11
  5145   001252  6EBD               	movwf	189,c	;volatile
  5146                           
  5147                           ;MCAL_layer/CCP/CCP1.c: 95:                         break;
  5148   001254  EF96  F00A         	goto	l9266
  5149   001258                     l9226:
  5150                           
  5151                           ; BSR set to: 0
  5152   001258  EE20 F002          	lfsr	2,2
  5153   00125C  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5154   00125E  26D9               	addwf	fsr2l,f,c
  5155   001260  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5156   001262  22DA               	addwfc	fsr2h,f,c
  5157   001264  50DF               	movf	indf2,w,c
  5158   001266  6FF5               	movwf	??_CCP_Init& (0+255),b
  5159   001268  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  5160                           
  5161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5162                           ; Switch size 1, requested type "simple"
  5163                           ; Number of cases is 1, Range of values is 0 to 0
  5164                           ; switch strategies available:
  5165                           ; Name         Instructions Cycles
  5166                           ; simple_byte            4     3 (average)
  5167                           ;	Chosen strategy is simple_byte
  5168   00126A  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  5169   00126C  0A00               	xorlw	0	; case 0
  5170   00126E  B4D8               	btfsc	status,2,c
  5171   001270  EF3C  F009         	goto	l10358
  5172   001274  EF7B  F008         	goto	l9186
  5173   001278                     l10358:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ; Switch size 1, requested type "simple"
  5177                           ; Number of cases is 5, Range of values is 2 to 11
  5178                           ; switch strategies available:
  5179                           ; Name         Instructions Cycles
  5180                           ; simple_byte           16     9 (average)
  5181                           ;	Chosen strategy is simple_byte
  5182   001278  51F5               	movf	??_CCP_Init& (0+255),w,b
  5183   00127A  0A02               	xorlw	2	; case 2
  5184   00127C  B4D8               	btfsc	status,2,c
  5185   00127E  EF0E  F009         	goto	l9214
  5186   001282  0A0A               	xorlw	10	; case 8
  5187   001284  B4D8               	btfsc	status,2,c
  5188   001286  EF14  F009         	goto	l9216
  5189   00128A  0A01               	xorlw	1	; case 9
  5190   00128C  B4D8               	btfsc	status,2,c
  5191   00128E  EF1A  F009         	goto	l9218
  5192   001292  0A03               	xorlw	3	; case 10
  5193   001294  B4D8               	btfsc	status,2,c
  5194   001296  EF20  F009         	goto	l9220
  5195   00129A  0A01               	xorlw	1	; case 11
  5196   00129C  B4D8               	btfsc	status,2,c
  5197   00129E  EF26  F009         	goto	l9222
  5198   0012A2  EF7B  F008         	goto	l9186
  5199   0012A6                     l9228:
  5200                           
  5201                           ; BSR set to: 0
  5202   0012A6  EE20 F001          	lfsr	2,1
  5203   0012AA  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5204   0012AC  26D9               	addwf	fsr2l,f,c
  5205   0012AE  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5206   0012B0  22DA               	addwfc	fsr2h,f,c
  5207   0012B2  04DE               	decf	postinc2,w,c
  5208   0012B4  A4D8               	btfss	status,2,c
  5209   0012B6  EF5F  F009         	goto	u9911
  5210   0012BA  EF61  F009         	goto	u9910
  5211   0012BE                     u9911:
  5212   0012BE  EF96  F00A         	goto	l9266
  5213   0012C2                     u9910:
  5214   0012C2  EF81  F009         	goto	l9244
  5215   0012C6                     l9232:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;MCAL_layer/CCP/CCP1.c: 105:                         (CCP2CONbits.CCP2M = (uint8)2);
  5219   0012C6  50BA               	movf	186,w,c	;volatile
  5220   0012C8  0BF0               	andlw	-16
  5221   0012CA  0902               	iorlw	2
  5222   0012CC  6EBA               	movwf	186,c	;volatile
  5223                           
  5224                           ;MCAL_layer/CCP/CCP1.c: 106:                         break;
  5225   0012CE  EF96  F00A         	goto	l9266
  5226   0012D2                     l9234:
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;MCAL_layer/CCP/CCP1.c: 108:                         (CCP2CONbits.CCP2M = (uint8)8);
  5230   0012D2  50BA               	movf	186,w,c	;volatile
  5231   0012D4  0BF0               	andlw	-16
  5232   0012D6  0908               	iorlw	8
  5233   0012D8  6EBA               	movwf	186,c	;volatile
  5234                           
  5235                           ;MCAL_layer/CCP/CCP1.c: 109:                         break;
  5236   0012DA  EF96  F00A         	goto	l9266
  5237   0012DE                     l9236:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;MCAL_layer/CCP/CCP1.c: 111:                         (CCP2CONbits.CCP2M = (uint8)9);
  5241   0012DE  50BA               	movf	186,w,c	;volatile
  5242   0012E0  0BF0               	andlw	-16
  5243   0012E2  0909               	iorlw	9
  5244   0012E4  6EBA               	movwf	186,c	;volatile
  5245                           
  5246                           ;MCAL_layer/CCP/CCP1.c: 112:                         break;
  5247   0012E6  EF96  F00A         	goto	l9266
  5248   0012EA                     l9238:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;MCAL_layer/CCP/CCP1.c: 114:                         (CCP2CONbits.CCP2M = (uint8)10);
  5252   0012EA  50BA               	movf	186,w,c	;volatile
  5253   0012EC  0BF0               	andlw	-16
  5254   0012EE  090A               	iorlw	10
  5255   0012F0  6EBA               	movwf	186,c	;volatile
  5256                           
  5257                           ;MCAL_layer/CCP/CCP1.c: 115:                         break;
  5258   0012F2  EF96  F00A         	goto	l9266
  5259   0012F6                     l9240:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;MCAL_layer/CCP/CCP1.c: 117:                         (CCP2CONbits.CCP2M = (uint8)11);
  5263   0012F6  50BA               	movf	186,w,c	;volatile
  5264   0012F8  0BF0               	andlw	-16
  5265   0012FA  090B               	iorlw	11
  5266   0012FC  6EBA               	movwf	186,c	;volatile
  5267                           
  5268                           ;MCAL_layer/CCP/CCP1.c: 118:                         break;
  5269   0012FE  EF96  F00A         	goto	l9266
  5270   001302                     l9244:
  5271                           
  5272                           ; BSR set to: 0
  5273   001302  EE20 F002          	lfsr	2,2
  5274   001306  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5275   001308  26D9               	addwf	fsr2l,f,c
  5276   00130A  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5277   00130C  22DA               	addwfc	fsr2h,f,c
  5278   00130E  50DF               	movf	indf2,w,c
  5279   001310  6FF5               	movwf	??_CCP_Init& (0+255),b
  5280   001312  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  5281                           
  5282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5283                           ; Switch size 1, requested type "simple"
  5284                           ; Number of cases is 1, Range of values is 0 to 0
  5285                           ; switch strategies available:
  5286                           ; Name         Instructions Cycles
  5287                           ; simple_byte            4     3 (average)
  5288                           ;	Chosen strategy is simple_byte
  5289   001314  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  5290   001316  0A00               	xorlw	0	; case 0
  5291   001318  B4D8               	btfsc	status,2,c
  5292   00131A  EF91  F009         	goto	l10360
  5293   00131E  EF7B  F008         	goto	l9186
  5294   001322                     l10360:
  5295                           
  5296                           ; BSR set to: 0
  5297                           ; Switch size 1, requested type "simple"
  5298                           ; Number of cases is 5, Range of values is 2 to 11
  5299                           ; switch strategies available:
  5300                           ; Name         Instructions Cycles
  5301                           ; simple_byte           16     9 (average)
  5302                           ;	Chosen strategy is simple_byte
  5303   001322  51F5               	movf	??_CCP_Init& (0+255),w,b
  5304   001324  0A02               	xorlw	2	; case 2
  5305   001326  B4D8               	btfsc	status,2,c
  5306   001328  EF63  F009         	goto	l9232
  5307   00132C  0A0A               	xorlw	10	; case 8
  5308   00132E  B4D8               	btfsc	status,2,c
  5309   001330  EF69  F009         	goto	l9234
  5310   001334  0A01               	xorlw	1	; case 9
  5311   001336  B4D8               	btfsc	status,2,c
  5312   001338  EF6F  F009         	goto	l9236
  5313   00133C  0A03               	xorlw	3	; case 10
  5314   00133E  B4D8               	btfsc	status,2,c
  5315   001340  EF75  F009         	goto	l9238
  5316   001344  0A01               	xorlw	1	; case 11
  5317   001346  B4D8               	btfsc	status,2,c
  5318   001348  EF7B  F009         	goto	l9240
  5319   00134C  EF7B  F008         	goto	l9186
  5320   001350                     l9246:
  5321                           
  5322                           ; BSR set to: 0
  5323   001350  C0F3  FFD9         	movff	CCP_Init@ccp_obj,fsr2l
  5324   001354  C0F4  FFDA         	movff	CCP_Init@ccp_obj+1,fsr2h
  5325   001358  0E02               	movlw	2
  5326   00135A  18DE               	xorwf	postinc2,w,c
  5327   00135C  A4D8               	btfss	status,2,c
  5328   00135E  EFB3  F009         	goto	u9921
  5329   001362  EFB5  F009         	goto	u9920
  5330   001366                     u9921:
  5331   001366  EF96  F00A         	goto	l9266
  5332   00136A                     u9920:
  5333   00136A                     
  5334                           ; BSR set to: 0
  5335                           ;MCAL_layer/CCP/CCP1.c: 126:         {;MCAL_layer/CCP/CCP1.c: 129:             if(ccp_ob
      +                          j->ccp_spacific_mode == (uint8)12)
  5336   00136A  EE20 F002          	lfsr	2,2
  5337   00136E  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5338   001370  26D9               	addwf	fsr2l,f,c
  5339   001372  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5340   001374  22DA               	addwfc	fsr2h,f,c
  5341   001376  0E0C               	movlw	12
  5342   001378  18DE               	xorwf	postinc2,w,c
  5343   00137A  A4D8               	btfss	status,2,c
  5344   00137C  EFC2  F009         	goto	u9931
  5345   001380  EFC4  F009         	goto	u9930
  5346   001384                     u9931:
  5347   001384  EF7B  F008         	goto	l9186
  5348   001388                     u9930:
  5349   001388                     
  5350                           ; BSR set to: 0
  5351                           ;MCAL_layer/CCP/CCP1.c: 130:             {;MCAL_layer/CCP/CCP1.c: 131:                 i
      +                          f(ccp_obj->ccp_inst == CCP1_inst)
  5352   001388  EE20 F001          	lfsr	2,1
  5353   00138C  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5354   00138E  26D9               	addwf	fsr2l,f,c
  5355   001390  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5356   001392  22DA               	addwfc	fsr2h,f,c
  5357   001394  50DF               	movf	indf2,w,c
  5358   001396  A4D8               	btfss	status,2,c
  5359   001398  EFD0  F009         	goto	u9941
  5360   00139C  EFD2  F009         	goto	u9940
  5361   0013A0                     u9941:
  5362   0013A0  EFD8  F009         	goto	l9254
  5363   0013A4                     u9940:
  5364   0013A4                     
  5365                           ; BSR set to: 0
  5366                           ;MCAL_layer/CCP/CCP1.c: 132:                 {;MCAL_layer/CCP/CCP1.c: 133:              
      +                                 (CCP1CONbits.CCP1M = (uint8)12);
  5367   0013A4  50BD               	movf	189,w,c	;volatile
  5368   0013A6  0BF0               	andlw	-16
  5369   0013A8  090C               	iorlw	12
  5370   0013AA  6EBD               	movwf	189,c	;volatile
  5371                           
  5372                           ;MCAL_layer/CCP/CCP1.c: 134:                 }
  5373   0013AC  EFEA  F009         	goto	l9258
  5374   0013B0                     l9254:
  5375                           
  5376                           ; BSR set to: 0
  5377   0013B0  EE20 F001          	lfsr	2,1
  5378   0013B4  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5379   0013B6  26D9               	addwf	fsr2l,f,c
  5380   0013B8  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5381   0013BA  22DA               	addwfc	fsr2h,f,c
  5382   0013BC  04DE               	decf	postinc2,w,c
  5383   0013BE  A4D8               	btfss	status,2,c
  5384   0013C0  EFE4  F009         	goto	u9951
  5385   0013C4  EFE6  F009         	goto	u9950
  5386   0013C8                     u9951:
  5387   0013C8  EFEA  F009         	goto	l9258
  5388   0013CC                     u9950:
  5389   0013CC                     
  5390                           ; BSR set to: 0
  5391                           ;MCAL_layer/CCP/CCP1.c: 136:                 {;MCAL_layer/CCP/CCP1.c: 137:              
      +                                 (CCP2CONbits.CCP2M = (uint8)12);
  5392   0013CC  50BA               	movf	186,w,c	;volatile
  5393   0013CE  0BF0               	andlw	-16
  5394   0013D0  090C               	iorlw	12
  5395   0013D2  6EBA               	movwf	186,c	;volatile
  5396   0013D4                     l9258:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;MCAL_layer/CCP/CCP1.c: 139:                 PR2 = (uint8)(((float)4000000UL / ((float)c
      +                          cp_obj->PWM_Freq * 4.0 * (float)ccp_obj->Timer2_Prescaler_value *
  5400   0013D4  0E00               	movlw	0
  5401   0013D6  6E1F               	movwf	___flmul@a^0,c
  5402   0013D8  0E00               	movlw	0
  5403   0013DA  6E20               	movwf	(___flmul@a+1)^0,c
  5404   0013DC  0E80               	movlw	128
  5405   0013DE  6E21               	movwf	(___flmul@a+2)^0,c
  5406   0013E0  0E40               	movlw	64
  5407   0013E2  6E22               	movwf	(___flmul@a+3)^0,c
  5408   0013E4  EE20 F00B          	lfsr	2,11
  5409   0013E8  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5410   0013EA  26D9               	addwf	fsr2l,f,c
  5411   0013EC  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5412   0013EE  22DA               	addwfc	fsr2h,f,c
  5413   0013F0  CFDE F00D          	movff	postinc2,___xxtofl@val
  5414   0013F4  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5415   0013F8  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5416   0013FC  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5417   001400  0E00               	movlw	0
  5418   001402  EC98  F015         	call	___xxtofl
  5419   001406  C00D  F01B         	movff	?___xxtofl,___flmul@b
  5420   00140A  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  5421   00140E  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  5422   001412  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  5423   001416  EC3F  F00D         	call	___flmul	;wreg free
  5424   00141A  C01B  F14D         	movff	?___flmul,_CCP_Init$4329
  5425   00141E  C01C  F14E         	movff	?___flmul+1,_CCP_Init$4329+1
  5426   001422  C01D  F14F         	movff	?___flmul+2,_CCP_Init$4329+2
  5427   001426  C01E  F150         	movff	?___flmul+3,_CCP_Init$4329+3
  5428   00142A                     
  5429                           ;MCAL_layer/CCP/CCP1.c: 139:                 PR2 = (uint8)(((float)4000000UL / ((float)c
      +                          cp_obj->PWM_Freq * 4.0 * (float)ccp_obj->Timer2_Prescaler_value *
  5430   00142A  0100               	movlb	0	; () banked
  5431   00142C  EE20 F00F          	lfsr	2,15
  5432   001430  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5433   001432  26D9               	addwf	fsr2l,f,c
  5434   001434  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5435   001436  22DA               	addwfc	fsr2h,f,c
  5436   001438  50DF               	movf	223,w,c
  5437   00143A  0B03               	andlw	3
  5438   00143C  6FF5               	movwf	??_CCP_Init& (0+255),b
  5439   00143E  51F5               	movf	??_CCP_Init& (0+255),w,b
  5440   001440  6E0D               	movwf	___xxtofl@val^0,c
  5441   001442  6A0E               	clrf	(___xxtofl@val+1)^0,c
  5442   001444  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5443   001446  6A10               	clrf	(___xxtofl@val+3)^0,c
  5444   001448  0E00               	movlw	0
  5445   00144A  EC98  F015         	call	___xxtofl
  5446   00144E  C00D  F01F         	movff	?___xxtofl,___flmul@a
  5447   001452  C00E  F020         	movff	?___xxtofl+1,___flmul@a+1
  5448   001456  C00F  F021         	movff	?___xxtofl+2,___flmul@a+2
  5449   00145A  C010  F022         	movff	?___xxtofl+3,___flmul@a+3
  5450   00145E  C14D  F01B         	movff	_CCP_Init$4329,___flmul@b
  5451   001462  C14E  F01C         	movff	_CCP_Init$4329+1,___flmul@b+1
  5452   001466  C14F  F01D         	movff	_CCP_Init$4329+2,___flmul@b+2
  5453   00146A  C150  F01E         	movff	_CCP_Init$4329+3,___flmul@b+3
  5454   00146E  EC3F  F00D         	call	___flmul	;wreg free
  5455   001472  C01B  F151         	movff	?___flmul,_CCP_Init$4330
  5456   001476  C01C  F152         	movff	?___flmul+1,_CCP_Init$4330+1
  5457   00147A  C01D  F153         	movff	?___flmul+2,_CCP_Init$4330+2
  5458   00147E  C01E  F154         	movff	?___flmul+3,_CCP_Init$4330+3
  5459   001482                     
  5460                           ;MCAL_layer/CCP/CCP1.c: 139:                 PR2 = (uint8)(((float)4000000UL / ((float)c
      +                          cp_obj->PWM_Freq * 4.0 * (float)ccp_obj->Timer2_Prescaler_value *
  5461   001482  0E00               	movlw	0
  5462   001484  6E51               	movwf	___fladd@a^0,c
  5463   001486  0E00               	movlw	0
  5464   001488  6E52               	movwf	(___fladd@a+1)^0,c
  5465   00148A  0E80               	movlw	128
  5466   00148C  6E53               	movwf	(___fladd@a+2)^0,c
  5467   00148E  0EBF               	movlw	191
  5468   001490  6E54               	movwf	(___fladd@a+3)^0,c
  5469   001492  0100               	movlb	0	; () banked
  5470   001494  EE20 F00F          	lfsr	2,15
  5471   001498  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5472   00149A  26D9               	addwf	fsr2l,f,c
  5473   00149C  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5474   00149E  22DA               	addwfc	fsr2h,f,c
  5475   0014A0  30DF               	rrcf	223,w,c
  5476   0014A2  32E8               	rrcf	wreg,f,c
  5477   0014A4  0B0F               	andlw	15
  5478   0014A6  6FF5               	movwf	??_CCP_Init& (0+255),b
  5479   0014A8  51F5               	movf	??_CCP_Init& (0+255),w,b
  5480   0014AA  6E0D               	movwf	___xxtofl@val^0,c
  5481   0014AC  6A0E               	clrf	(___xxtofl@val+1)^0,c
  5482   0014AE  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5483   0014B0  6A10               	clrf	(___xxtofl@val+3)^0,c
  5484   0014B2  0E00               	movlw	0
  5485   0014B4  EC98  F015         	call	___xxtofl
  5486   0014B8  C00D  F01F         	movff	?___xxtofl,___flmul@a
  5487   0014BC  C00E  F020         	movff	?___xxtofl+1,___flmul@a+1
  5488   0014C0  C00F  F021         	movff	?___xxtofl+2,___flmul@a+2
  5489   0014C4  C010  F022         	movff	?___xxtofl+3,___flmul@a+3
  5490   0014C8  C151  F01B         	movff	_CCP_Init$4330,___flmul@b
  5491   0014CC  C152  F01C         	movff	_CCP_Init$4330+1,___flmul@b+1
  5492   0014D0  C153  F01D         	movff	_CCP_Init$4330+2,___flmul@b+2
  5493   0014D4  C154  F01E         	movff	_CCP_Init$4330+3,___flmul@b+3
  5494   0014D8  EC3F  F00D         	call	___flmul	;wreg free
  5495   0014DC  C01B  F038         	movff	?___flmul,___fldiv@a
  5496   0014E0  C01C  F039         	movff	?___flmul+1,___fldiv@a+1
  5497   0014E4  C01D  F03A         	movff	?___flmul+2,___fldiv@a+2
  5498   0014E8  C01E  F03B         	movff	?___flmul+3,___fldiv@a+3
  5499   0014EC  0E00               	movlw	0
  5500   0014EE  6E34               	movwf	___fldiv@b^0,c
  5501   0014F0  0E24               	movlw	36
  5502   0014F2  6E35               	movwf	(___fldiv@b+1)^0,c
  5503   0014F4  0E74               	movlw	116
  5504   0014F6  6E36               	movwf	(___fldiv@b+2)^0,c
  5505   0014F8  0E4A               	movlw	74
  5506   0014FA  6E37               	movwf	(___fldiv@b+3)^0,c
  5507   0014FC  EC54  F00F         	call	___fldiv	;wreg free
  5508   001500  C034  F04D         	movff	?___fldiv,___fladd@b
  5509   001504  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  5510   001508  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  5511   00150C  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  5512   001510  ECDF  F00A         	call	___fladd	;wreg free
  5513   001514  C04D  F05D         	movff	?___fladd,___fltol@f1
  5514   001518  C04E  F05E         	movff	?___fladd+1,___fltol@f1+1
  5515   00151C  C04F  F05F         	movff	?___fladd+2,___fltol@f1+2
  5516   001520  C050  F060         	movff	?___fladd+3,___fltol@f1+3
  5517   001524  ECE2  F01A         	call	___fltol	;wreg free
  5518   001528  505D               	movf	?___fltol^0,w,c
  5519   00152A  6ECB               	movwf	203,c	;volatile
  5520   00152C                     l9266:
  5521                           
  5522                           ;MCAL_layer/CCP/CCP1.c: 149:         ret = gpio_pin_initialize(&(ccp_obj->pin));
  5523   00152C  0E03               	movlw	3
  5524   00152E  0100               	movlb	0	; () banked
  5525   001530  25F3               	addwf	CCP_Init@ccp_obj& (0+255),w,b
  5526   001532  6E17               	movwf	gpio_pin_initialize@pin^0,c
  5527   001534  0E00               	movlw	0
  5528   001536  21F4               	addwfc	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5529   001538  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  5530   00153A  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  5531   00153E  0101               	movlb	1	; () banked
  5532   001540  6F55               	movwf	CCP_Init@ret& (0+255),b
  5533   001542                     
  5534                           ; BSR set to: 1
  5535                           ;MCAL_layer/CCP/CCP1.c: 150:         if(ccp_obj->ccp_inst == CCP1_inst)
  5536   001542  0100               	movlb	0	; () banked
  5537   001544  EE20 F001          	lfsr	2,1
  5538   001548  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5539   00154A  26D9               	addwf	fsr2l,f,c
  5540   00154C  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5541   00154E  22DA               	addwfc	fsr2h,f,c
  5542   001550  50DF               	movf	indf2,w,c
  5543   001552  A4D8               	btfss	status,2,c
  5544   001554  EFAE  F00A         	goto	u9961
  5545   001558  EFB0  F00A         	goto	u9960
  5546   00155C                     u9961:
  5547   00155C  EFC0  F00A         	goto	l9274
  5548   001560                     u9960:
  5549   001560                     
  5550                           ; BSR set to: 0
  5551                           ;MCAL_layer/CCP/CCP1.c: 151:         {;MCAL_layer/CCP/CCP1.c: 153:         (PIE1bits.CCP
      +                          1IE = 1);
  5552   001560  849D               	bsf	157,2,c	;volatile
  5553                           
  5554                           ;MCAL_layer/CCP/CCP1.c: 154:         (PIR1bits.CCP1IF = 0);
  5555   001562  949E               	bcf	158,2,c	;volatile
  5556                           
  5557                           ;MCAL_layer/CCP/CCP1.c: 171:         (INTCONbits.GIE = 1);
  5558   001564  8EF2               	bsf	242,7,c	;volatile
  5559                           
  5560                           ;MCAL_layer/CCP/CCP1.c: 172:         (INTCONbits.PEIE = 1);
  5561   001566  8CF2               	bsf	242,6,c	;volatile
  5562   001568                     
  5563                           ; BSR set to: 0
  5564                           ;MCAL_layer/CCP/CCP1.c: 174:         CCP1_InterruptHandeler = ccp_obj->CCP1CallBack;
  5565   001568  EE20 F005          	lfsr	2,5
  5566   00156C  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5567   00156E  26D9               	addwf	fsr2l,f,c
  5568   001570  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5569   001572  22DA               	addwfc	fsr2h,f,c
  5570   001574  CFDE F0AC          	movff	postinc2,_CCP1_InterruptHandeler
  5571   001578  CFDD F0AD          	movff	postdec2,_CCP1_InterruptHandeler+1
  5572                           
  5573                           ;MCAL_layer/CCP/CCP1.c: 176:         }
  5574   00157C  EFDC  F00A         	goto	l9280
  5575   001580                     l9274:
  5576                           
  5577                           ; BSR set to: 0
  5578   001580  EE20 F001          	lfsr	2,1
  5579   001584  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5580   001586  26D9               	addwf	fsr2l,f,c
  5581   001588  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5582   00158A  22DA               	addwfc	fsr2h,f,c
  5583   00158C  04DE               	decf	postinc2,w,c
  5584   00158E  A4D8               	btfss	status,2,c
  5585   001590  EFCC  F00A         	goto	u9971
  5586   001594  EFCE  F00A         	goto	u9970
  5587   001598                     u9971:
  5588   001598  EFDC  F00A         	goto	l9280
  5589   00159C                     u9970:
  5590   00159C                     
  5591                           ; BSR set to: 0
  5592                           ;MCAL_layer/CCP/CCP1.c: 178:         {;MCAL_layer/CCP/CCP1.c: 180:         (PIE2bits.CCP
      +                          2IE = 1);
  5593   00159C  80A0               	bsf	160,0,c	;volatile
  5594                           
  5595                           ;MCAL_layer/CCP/CCP1.c: 181:         (PIR2bits.CCP2IF = 0);
  5596   00159E  90A1               	bcf	161,0,c	;volatile
  5597                           
  5598                           ;MCAL_layer/CCP/CCP1.c: 198:         (INTCONbits.GIE = 1);
  5599   0015A0  8EF2               	bsf	242,7,c	;volatile
  5600                           
  5601                           ;MCAL_layer/CCP/CCP1.c: 199:         (INTCONbits.PEIE = 1);
  5602   0015A2  8CF2               	bsf	242,6,c	;volatile
  5603   0015A4                     
  5604                           ; BSR set to: 0
  5605                           ;MCAL_layer/CCP/CCP1.c: 201:         CCP2_InterruptHandeler = ccp_obj->CCP2CallBack;
  5606   0015A4  EE20 F008          	lfsr	2,8
  5607   0015A8  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5608   0015AA  26D9               	addwf	fsr2l,f,c
  5609   0015AC  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5610   0015AE  22DA               	addwfc	fsr2h,f,c
  5611   0015B0  CFDE F0AA          	movff	postinc2,_CCP2_InterruptHandeler
  5612   0015B4  CFDD F0AB          	movff	postdec2,_CCP2_InterruptHandeler+1
  5613   0015B8                     l9280:
  5614                           
  5615                           ;MCAL_layer/CCP/CCP1.c: 206:     return ret;
  5616   0015B8  0101               	movlb	1	; () banked
  5617   0015BA  5155               	movf	CCP_Init@ret& (0+255),w,b
  5618   0015BC                     
  5619                           ; BSR set to: 1
  5620   0015BC  0012               	return		;funcret
  5621   0015BE                     __end_of_CCP_Init:
  5622                           	callstack 0
  5623                           
  5624 ;; *************** function _gpio_pin_initialize *****************
  5625 ;; Defined at:
  5626 ;;		line 146 in file "MCAL_layer/GPIO/hal_gpio.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  pin             2   22[COMRAM] PTR const struct .
  5629 ;;		 -> ccp_obj(16), motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), 
  5630 ;;		 -> lcd_1(10), led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  ret             1   25[COMRAM] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      unsigned char 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;Total ram usage:        4 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 5
  5649 ;; This function calls:
  5650 ;;		_gpio_pin_direction_initialize
  5651 ;;		_gpio_pin_write_logic
  5652 ;; This function is called by:
  5653 ;;		_lcd_8bit_initialize
  5654 ;;		_dc_motor_initialize
  5655 ;;		_CCP_Init
  5656 ;;		_lcd_4bit_initialize
  5657 ;;		_relay_initialize
  5658 ;;		_keypad_initialize
  5659 ;;		_led_initialize
  5660 ;;		_initialize_seven_segment
  5661 ;;		_Interrupt_RBx_Init
  5662 ;;		_Interrupt_INTx_Pin_init
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text28
  5667   004042                     __ptext28:
  5668                           	callstack 0
  5669   004042                     _gpio_pin_initialize:
  5670                           	callstack 22
  5671   004042                     
  5672                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     if((pin==((void*)0))||(pin->pin>=8))
  5673   004042  5017               	movf	gpio_pin_initialize@pin^0,w,c
  5674   004044  1018               	iorwf	(gpio_pin_initialize@pin+1)^0,w,c
  5675   004046  B4D8               	btfsc	status,2,c
  5676   004048  EF28  F020         	goto	u8731
  5677   00404C  EF2A  F020         	goto	u8730
  5678   004050                     u8731:
  5679   004050  EF3B  F020         	goto	l8446
  5680   004054                     u8730:
  5681   004054  C017  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  5682   004058  C018  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  5683   00405C  30DF               	rrcf	223,w,c
  5684   00405E  32E8               	rrcf	wreg,f,c
  5685   004060  32E8               	rrcf	wreg,f,c
  5686   004062  0B07               	andlw	7
  5687   004064  6E19               	movwf	??_gpio_pin_initialize^0,c
  5688   004066  0E07               	movlw	7
  5689   004068  6419               	cpfsgt	??_gpio_pin_initialize^0,c
  5690   00406A  EF39  F020         	goto	u8741
  5691   00406E  EF3B  F020         	goto	u8740
  5692   004072                     u8741:
  5693   004072  EF3F  F020         	goto	l8448
  5694   004076                     u8740:
  5695   004076                     l8446:
  5696                           
  5697                           ;MCAL_layer/GPIO/hal_gpio.c: 150:     {;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = (
      +                          Std_ReturnType)0x00;
  5698   004076  0E00               	movlw	0
  5699   004078  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  5700                           
  5701                           ;MCAL_layer/GPIO/hal_gpio.c: 152:     }
  5702   00407A  EF55  F020         	goto	l8450
  5703   00407E                     l8448:
  5704                           
  5705                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     {;MCAL_layer/GPIO/hal_gpio.c: 155:         ret = g
      +                          pio_pin_direction_initialize(pin);
  5706   00407E  C017  F00D         	movff	gpio_pin_initialize@pin,gpio_pin_direction_initialize@pin
  5707   004082  C018  F00E         	movff	gpio_pin_initialize@pin+1,gpio_pin_direction_initialize@pin+1
  5708   004086  ECF8  F017         	call	_gpio_pin_direction_initialize	;wreg free
  5709   00408A  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  5710                           
  5711                           ;MCAL_layer/GPIO/hal_gpio.c: 156:         ret = gpio_pin_write_logic(pin,pin->logic);
  5712   00408C  C017  F00D         	movff	gpio_pin_initialize@pin,gpio_pin_write_logic@pin
  5713   004090  C018  F00E         	movff	gpio_pin_initialize@pin+1,gpio_pin_write_logic@pin+1
  5714   004094  C017  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  5715   004098  C018  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  5716   00409C  0E00               	movlw	0
  5717   00409E  BEDF               	btfsc	indf2,7,c
  5718   0040A0  0E01               	movlw	1
  5719   0040A2  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  5720   0040A4  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  5721   0040A8  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  5722   0040AA                     l8450:
  5723                           
  5724                           ;MCAL_layer/GPIO/hal_gpio.c: 158:     return ret;
  5725   0040AA  501A               	movf	gpio_pin_initialize@ret^0,w,c
  5726   0040AC  0012               	return		;funcret
  5727   0040AE                     __end_of_gpio_pin_initialize:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _gpio_pin_write_logic *****************
  5731 ;; Defined at:
  5732 ;;		line 96 in file "MCAL_layer/GPIO/hal_gpio.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  pin             2   12[COMRAM] PTR const struct .
  5735 ;;		 -> ccp_obj(16), motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), 
  5736 ;;		 -> lcd_1(10), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  5737 ;;		 -> relay_turn_off@relay_pin(1), relay_turn_on@relay_pin(1), relay_initialize@relay_pin(1), 
  5738 ;;  log             1   14[COMRAM] enum E3137
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  ret             1   21[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      unsigned char 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5750 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;Total ram usage:       10 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 4
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_lcd_8bit_send_command
  5761 ;;		_lcd_8bit_send_char
  5762 ;;		_lcd_8bit_send_enable
  5763 ;;		_dc_motor_move_right
  5764 ;;		_gpio_pin_initialize
  5765 ;;		_lcd_4bit_send_command
  5766 ;;		_lcd_4bit_send_char
  5767 ;;		_lcd_send_4bit
  5768 ;;		_lcd_4bit_send_enable
  5769 ;;		_dc_motor_move_left
  5770 ;;		_dc_motor_stop
  5771 ;;		_relay_turn_on
  5772 ;;		_relay_turn_off
  5773 ;;		_keypad_get_value
  5774 ;;		_led_turn_on
  5775 ;;		_led_turn_off
  5776 ;;		_seven_segment_write_number
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text29
  5781   003392                     __ptext29:
  5782                           	callstack 0
  5783   003392                     _gpio_pin_write_logic:
  5784                           	callstack 22
  5785   003392                     
  5786                           ;MCAL_layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_write_logic(const pin_config *p
      +                          in,logic_t log);MCAL_layer/GPIO/hal_gpio.c: 97: {;MCAL_layer/GPIO/hal_gpio.c: 98:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
  5787   003392  0E01               	movlw	1
  5788   003394  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  5789   003396                     
  5790                           ;MCAL_layer/GPIO/hal_gpio.c: 99:     if((pin==((void*)0))||(pin->pin>=8))
  5791   003396  500D               	movf	gpio_pin_write_logic@pin^0,w,c
  5792   003398  100E               	iorwf	(gpio_pin_write_logic@pin+1)^0,w,c
  5793   00339A  B4D8               	btfsc	status,2,c
  5794   00339C  EFD2  F019         	goto	u8371
  5795   0033A0  EFD4  F019         	goto	u8370
  5796   0033A4                     u8371:
  5797   0033A4  EFE5  F019         	goto	l8236
  5798   0033A8                     u8370:
  5799   0033A8  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5800   0033AC  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5801   0033B0  30DF               	rrcf	223,w,c
  5802   0033B2  32E8               	rrcf	wreg,f,c
  5803   0033B4  32E8               	rrcf	wreg,f,c
  5804   0033B6  0B07               	andlw	7
  5805   0033B8  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5806   0033BA  0E07               	movlw	7
  5807   0033BC  6410               	cpfsgt	??_gpio_pin_write_logic^0,c
  5808   0033BE  EFE3  F019         	goto	u8381
  5809   0033C2  EFE5  F019         	goto	u8380
  5810   0033C6                     u8381:
  5811   0033C6  EF48  F01A         	goto	l8244
  5812   0033CA                     u8380:
  5813   0033CA                     l8236:
  5814                           
  5815                           ;MCAL_layer/GPIO/hal_gpio.c: 100:     {;MCAL_layer/GPIO/hal_gpio.c: 101:         ret = (
      +                          Std_ReturnType)0x00;
  5816   0033CA  0E00               	movlw	0
  5817   0033CC  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  5818                           
  5819                           ;MCAL_layer/GPIO/hal_gpio.c: 102:     }
  5820   0033CE  EF5D  F01A         	goto	l8246
  5821   0033D2                     l8238:
  5822                           
  5823                           ;MCAL_layer/GPIO/hal_gpio.c: 108:                 (*lat_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  5824   0033D2  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5825   0033D6  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5826   0033DA  30DF               	rrcf	223,w,c
  5827   0033DC  32E8               	rrcf	wreg,f,c
  5828   0033DE  32E8               	rrcf	wreg,f,c
  5829   0033E0  0B07               	andlw	7
  5830   0033E2  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5831   0033E4  0E01               	movlw	1
  5832   0033E6  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5833   0033E8  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  5834   0033EA  EFF9  F019         	goto	u8394
  5835   0033EE                     u8395:
  5836   0033EE  90D8               	bcf	status,0,c
  5837   0033F0  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5838   0033F2                     u8394:
  5839   0033F2  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  5840   0033F4  EFF7  F019         	goto	u8395
  5841   0033F8  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5842   0033FA  0AFF               	xorlw	255
  5843   0033FC  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5844   0033FE  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5845   003402  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5846   003406  50DF               	movf	223,w,c
  5847   003408  0B07               	andlw	7
  5848   00340A  6E13               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5849   00340C  5013               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5850   00340E  0D02               	mullw	2
  5851   003410  0EBC               	movlw	low _lat_registers
  5852   003412  24F3               	addwf	243,w,c
  5853   003414  6ED9               	movwf	fsr2l,c
  5854   003416  0E00               	movlw	high _lat_registers
  5855   003418  20F4               	addwfc	prodh,w,c
  5856   00341A  6EDA               	movwf	fsr2h,c
  5857   00341C  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+4
  5858   003420  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+5
  5859   003424  C014  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5860   003428  C015  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5861   00342C  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5862   00342E  16DF               	andwf	indf2,f,c
  5863                           
  5864                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                 break;
  5865   003430  EF5D  F01A         	goto	l8246
  5866   003434                     l8240:
  5867                           
  5868                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                 (*lat_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  5869   003434  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5870   003438  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5871   00343C  30DF               	rrcf	223,w,c
  5872   00343E  32E8               	rrcf	wreg,f,c
  5873   003440  32E8               	rrcf	wreg,f,c
  5874   003442  0B07               	andlw	7
  5875   003444  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5876   003446  0E01               	movlw	1
  5877   003448  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5878   00344A  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  5879   00344C  EF2A  F01A         	goto	u8404
  5880   003450                     u8405:
  5881   003450  90D8               	bcf	status,0,c
  5882   003452  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5883   003454                     u8404:
  5884   003454  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  5885   003456  EF28  F01A         	goto	u8405
  5886   00345A  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5887   00345E  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5888   003462  50DF               	movf	223,w,c
  5889   003464  0B07               	andlw	7
  5890   003466  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5891   003468  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5892   00346A  0D02               	mullw	2
  5893   00346C  0EBC               	movlw	low _lat_registers
  5894   00346E  24F3               	addwf	243,w,c
  5895   003470  6ED9               	movwf	fsr2l,c
  5896   003472  0E00               	movlw	high _lat_registers
  5897   003474  20F4               	addwfc	prodh,w,c
  5898   003476  6EDA               	movwf	fsr2h,c
  5899   003478  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+3
  5900   00347C  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+4
  5901   003480  C013  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5902   003484  C014  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5903   003488  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5904   00348A  12DF               	iorwf	indf2,f,c
  5905                           
  5906                           ;MCAL_layer/GPIO/hal_gpio.c: 112:                 break;
  5907   00348C  EF5D  F01A         	goto	l8246
  5908   003490                     l8244:
  5909   003490  500F               	movf	gpio_pin_write_logic@log^0,w,c
  5910   003492  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5911   003494  6A11               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5912                           
  5913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5914                           ; Switch size 1, requested type "simple"
  5915                           ; Number of cases is 1, Range of values is 0 to 0
  5916                           ; switch strategies available:
  5917                           ; Name         Instructions Cycles
  5918                           ; simple_byte            4     3 (average)
  5919                           ;	Chosen strategy is simple_byte
  5920   003496  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5921   003498  0A00               	xorlw	0	; case 0
  5922   00349A  B4D8               	btfsc	status,2,c
  5923   00349C  EF52  F01A         	goto	l10362
  5924   0034A0  EFE5  F019         	goto	l8236
  5925   0034A4                     l10362:
  5926                           
  5927                           ; Switch size 1, requested type "simple"
  5928                           ; Number of cases is 2, Range of values is 0 to 1
  5929                           ; switch strategies available:
  5930                           ; Name         Instructions Cycles
  5931                           ; simple_byte            7     4 (average)
  5932                           ;	Chosen strategy is simple_byte
  5933   0034A4  5010               	movf	??_gpio_pin_write_logic^0,w,c
  5934   0034A6  0A00               	xorlw	0	; case 0
  5935   0034A8  B4D8               	btfsc	status,2,c
  5936   0034AA  EFE9  F019         	goto	l8238
  5937   0034AE  0A01               	xorlw	1	; case 1
  5938   0034B0  B4D8               	btfsc	status,2,c
  5939   0034B2  EF1A  F01A         	goto	l8240
  5940   0034B6  EFE5  F019         	goto	l8236
  5941   0034BA                     l8246:
  5942                           
  5943                           ;MCAL_layer/GPIO/hal_gpio.c: 117:      return ret;
  5944   0034BA  5016               	movf	gpio_pin_write_logic@ret^0,w,c
  5945   0034BC  0012               	return		;funcret
  5946   0034BE                     __end_of_gpio_pin_write_logic:
  5947                           	callstack 0
  5948                           
  5949 ;; *************** function _gpio_pin_direction_initialize *****************
  5950 ;; Defined at:
  5951 ;;		line 22 in file "MCAL_layer/GPIO/hal_gpio.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  pin             2   12[COMRAM] PTR const struct .
  5954 ;;		 -> ccp_obj(16), motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), 
  5955 ;;		 -> lcd_1(10), led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  ret             1   20[COMRAM] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      unsigned char 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;Total ram usage:        9 bytes
  5972 ;; Hardware stack levels used: 1
  5973 ;; Hardware stack levels required when called: 4
  5974 ;; This function calls:
  5975 ;;		Nothing
  5976 ;; This function is called by:
  5977 ;;		_gpio_pin_initialize
  5978 ;;		_keypad_initialize
  5979 ;;		_push_button_initialize
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text30
  5984   002FF0                     __ptext30:
  5985                           	callstack 0
  5986   002FF0                     _gpio_pin_direction_initialize:
  5987                           	callstack 22
  5988   002FF0                     
  5989                           ;MCAL_layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config *pin);MCAL_layer/GPIO/hal_gpio.c: 23: {;MCAL_layer/GPIO/hal_gpio.c: 24:     Std_R
      +                          eturnType ret = (Std_ReturnType)0x01;
  5990   002FF0  0E01               	movlw	1
  5991   002FF2  6E15               	movwf	gpio_pin_direction_initialize@ret^0,c
  5992   002FF4                     
  5993                           ;MCAL_layer/GPIO/hal_gpio.c: 25:     if((pin==((void*)0))||(pin->pin>=8))
  5994   002FF4  500D               	movf	gpio_pin_direction_initialize@pin^0,w,c
  5995   002FF6  100E               	iorwf	(gpio_pin_direction_initialize@pin+1)^0,w,c
  5996   002FF8  B4D8               	btfsc	status,2,c
  5997   002FFA  EF01  F018         	goto	u8571
  5998   002FFE  EF03  F018         	goto	u8570
  5999   003002                     u8571:
  6000   003002  EF14  F018         	goto	l8372
  6001   003006                     u8570:
  6002   003006  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6003   00300A  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6004   00300E  30DF               	rrcf	223,w,c
  6005   003010  32E8               	rrcf	wreg,f,c
  6006   003012  32E8               	rrcf	wreg,f,c
  6007   003014  0B07               	andlw	7
  6008   003016  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6009   003018  0E07               	movlw	7
  6010   00301A  640F               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  6011   00301C  EF12  F018         	goto	u8581
  6012   003020  EF14  F018         	goto	u8580
  6013   003024                     u8581:
  6014   003024  EF77  F018         	goto	l8380
  6015   003028                     u8580:
  6016   003028                     l8372:
  6017                           
  6018                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     {;MCAL_layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  6019   003028  0E00               	movlw	0
  6020   00302A  6E15               	movwf	gpio_pin_direction_initialize@ret^0,c
  6021                           
  6022                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     }
  6023   00302C  EF98  F018         	goto	l8382
  6024   003030                     l8374:
  6025                           
  6026                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  6027   003030  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6028   003034  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6029   003038  30DF               	rrcf	223,w,c
  6030   00303A  32E8               	rrcf	wreg,f,c
  6031   00303C  32E8               	rrcf	wreg,f,c
  6032   00303E  0B07               	andlw	7
  6033   003040  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6034   003042  0E01               	movlw	1
  6035   003044  6E10               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  6036   003046  2A0F               	incf	??_gpio_pin_direction_initialize^0,f,c
  6037   003048  EF28  F018         	goto	u8594
  6038   00304C                     u8595:
  6039   00304C  90D8               	bcf	status,0,c
  6040   00304E  3610               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  6041   003050                     u8594:
  6042   003050  2E0F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  6043   003052  EF26  F018         	goto	u8595
  6044   003056  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6045   003058  0AFF               	xorlw	255
  6046   00305A  6E11               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  6047   00305C  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6048   003060  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6049   003064  50DF               	movf	223,w,c
  6050   003066  0B07               	andlw	7
  6051   003068  6E12               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  6052   00306A  5012               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  6053   00306C  0D02               	mullw	2
  6054   00306E  0EC6               	movlw	low _tris_registers
  6055   003070  24F3               	addwf	243,w,c
  6056   003072  6ED9               	movwf	fsr2l,c
  6057   003074  0E00               	movlw	high _tris_registers
  6058   003076  20F4               	addwfc	prodh,w,c
  6059   003078  6EDA               	movwf	fsr2h,c
  6060   00307A  CFDE F013          	movff	postinc2,??_gpio_pin_direction_initialize+4
  6061   00307E  CFDD F014          	movff	postdec2,??_gpio_pin_direction_initialize+5
  6062   003082  C013  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  6063   003086  C014  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  6064   00308A  5011               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  6065   00308C  16DF               	andwf	indf2,f,c
  6066                           
  6067                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
  6068   00308E  EF98  F018         	goto	l8382
  6069   003092                     l8376:
  6070                           
  6071                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 (*tris_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  6072   003092  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6073   003096  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6074   00309A  30DF               	rrcf	223,w,c
  6075   00309C  32E8               	rrcf	wreg,f,c
  6076   00309E  32E8               	rrcf	wreg,f,c
  6077   0030A0  0B07               	andlw	7
  6078   0030A2  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6079   0030A4  0E01               	movlw	1
  6080   0030A6  6E10               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  6081   0030A8  2A0F               	incf	??_gpio_pin_direction_initialize^0,f,c
  6082   0030AA  EF59  F018         	goto	u8604
  6083   0030AE                     u8605:
  6084   0030AE  90D8               	bcf	status,0,c
  6085   0030B0  3610               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  6086   0030B2                     u8604:
  6087   0030B2  2E0F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  6088   0030B4  EF57  F018         	goto	u8605
  6089   0030B8  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6090   0030BC  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6091   0030C0  50DF               	movf	223,w,c
  6092   0030C2  0B07               	andlw	7
  6093   0030C4  6E11               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  6094   0030C6  5011               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  6095   0030C8  0D02               	mullw	2
  6096   0030CA  0EC6               	movlw	low _tris_registers
  6097   0030CC  24F3               	addwf	243,w,c
  6098   0030CE  6ED9               	movwf	fsr2l,c
  6099   0030D0  0E00               	movlw	high _tris_registers
  6100   0030D2  20F4               	addwfc	prodh,w,c
  6101   0030D4  6EDA               	movwf	fsr2h,c
  6102   0030D6  CFDE F012          	movff	postinc2,??_gpio_pin_direction_initialize+3
  6103   0030DA  CFDD F013          	movff	postdec2,??_gpio_pin_direction_initialize+4
  6104   0030DE  C012  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  6105   0030E2  C013  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  6106   0030E6  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6107   0030E8  12DF               	iorwf	indf2,f,c
  6108                           
  6109                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                 break;
  6110   0030EA  EF98  F018         	goto	l8382
  6111   0030EE                     l8380:
  6112   0030EE  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6113   0030F2  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6114   0030F6  BCDF               	btfsc	indf2,6,c
  6115   0030F8  EF80  F018         	goto	u8611
  6116   0030FC  EF83  F018         	goto	u8610
  6117   003100                     u8611:
  6118   003100  0E01               	movlw	1
  6119   003102  EF84  F018         	goto	u8620
  6120   003106                     u8610:
  6121   003106  0E00               	movlw	0
  6122   003108                     u8620:
  6123   003108  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6124   00310A  6A10               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  6125                           
  6126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6127                           ; Switch size 1, requested type "simple"
  6128                           ; Number of cases is 1, Range of values is 0 to 0
  6129                           ; switch strategies available:
  6130                           ; Name         Instructions Cycles
  6131                           ; simple_byte            4     3 (average)
  6132                           ;	Chosen strategy is simple_byte
  6133   00310C  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6134   00310E  0A00               	xorlw	0	; case 0
  6135   003110  B4D8               	btfsc	status,2,c
  6136   003112  EF8D  F018         	goto	l10364
  6137   003116  EF14  F018         	goto	l8372
  6138   00311A                     l10364:
  6139                           
  6140                           ; Switch size 1, requested type "simple"
  6141                           ; Number of cases is 2, Range of values is 0 to 1
  6142                           ; switch strategies available:
  6143                           ; Name         Instructions Cycles
  6144                           ; simple_byte            7     4 (average)
  6145                           ;	Chosen strategy is simple_byte
  6146   00311A  500F               	movf	??_gpio_pin_direction_initialize^0,w,c
  6147   00311C  0A00               	xorlw	0	; case 0
  6148   00311E  B4D8               	btfsc	status,2,c
  6149   003120  EF18  F018         	goto	l8374
  6150   003124  0A01               	xorlw	1	; case 1
  6151   003126  B4D8               	btfsc	status,2,c
  6152   003128  EF49  F018         	goto	l8376
  6153   00312C  EF14  F018         	goto	l8372
  6154   003130                     l8382:
  6155                           
  6156                           ;MCAL_layer/GPIO/hal_gpio.c: 43:     return ret;
  6157   003130  5015               	movf	gpio_pin_direction_initialize@ret^0,w,c
  6158   003132  0012               	return		;funcret
  6159   003134                     __end_of_gpio_pin_direction_initialize:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _CCP_Timer_config *****************
  6163 ;; Defined at:
  6164 ;;		line 457 in file "MCAL_layer/CCP/CCP1.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  ccp_obj         2   12[COMRAM] PTR const struct .
  6167 ;;		 -> ccp_obj(16), 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;Total ram usage:        4 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 4
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_CCP_Init
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text31
  6194   004114                     __ptext31:
  6195                           	callstack 0
  6196   004114                     _CCP_Timer_config:
  6197                           	callstack 23
  6198   004114                     
  6199                           ;MCAL_layer/CCP/CCP1.c: 457: static void CCP_Timer_config(const CCP_t *ccp_obj);MCAL_lay
      +                          er/CCP/CCP1.c: 458: {;MCAL_layer/CCP/CCP1.c: 459:     switch(ccp_obj->ccp_capture_timer)
  6200   004114  EF98  F020         	goto	l8482
  6201   004118                     l648:
  6202                           
  6203                           ;MCAL_layer/CCP/CCP1.c: 462:             T3CONbits.T3CCP1 = 0;
  6204   004118  96B1               	bcf	177,3,c	;volatile
  6205                           
  6206                           ;MCAL_layer/CCP/CCP1.c: 463:             T3CONbits.T3CCP2 = 1;
  6207   00411A  8CB1               	bsf	177,6,c	;volatile
  6208                           
  6209                           ;MCAL_layer/CCP/CCP1.c: 464:             break;
  6210   00411C  EFB7  F020         	goto	l652
  6211   004120                     l650:
  6212                           
  6213                           ;MCAL_layer/CCP/CCP1.c: 466:             T3CONbits.T3CCP1 = 1;
  6214   004120  86B1               	bsf	177,3,c	;volatile
  6215                           
  6216                           ;MCAL_layer/CCP/CCP1.c: 467:             T3CONbits.T3CCP2 = 0;
  6217   004122  9CB1               	bcf	177,6,c	;volatile
  6218                           
  6219                           ;MCAL_layer/CCP/CCP1.c: 468:             break;
  6220   004124  EFB7  F020         	goto	l652
  6221   004128                     l651:
  6222                           
  6223                           ;MCAL_layer/CCP/CCP1.c: 470:             T3CONbits.T3CCP1 = 0;
  6224   004128  96B1               	bcf	177,3,c	;volatile
  6225                           
  6226                           ;MCAL_layer/CCP/CCP1.c: 471:             T3CONbits.T3CCP2 = 0;
  6227   00412A  9CB1               	bcf	177,6,c	;volatile
  6228                           
  6229                           ;MCAL_layer/CCP/CCP1.c: 472:     }
  6230   00412C  EFB7  F020         	goto	l652
  6231   004130                     l8482:
  6232   004130  EE20 F004          	lfsr	2,4
  6233   004134  500D               	movf	CCP_Timer_config@ccp_obj^0,w,c
  6234   004136  26D9               	addwf	fsr2l,f,c
  6235   004138  500E               	movf	(CCP_Timer_config@ccp_obj+1)^0,w,c
  6236   00413A  22DA               	addwfc	fsr2h,f,c
  6237   00413C  50DF               	movf	indf2,w,c
  6238   00413E  6E0F               	movwf	??_CCP_Timer_config^0,c
  6239   004140  6A10               	clrf	(??_CCP_Timer_config+1)^0,c
  6240                           
  6241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6242                           ; Switch size 1, requested type "simple"
  6243                           ; Number of cases is 1, Range of values is 0 to 0
  6244                           ; switch strategies available:
  6245                           ; Name         Instructions Cycles
  6246                           ; simple_byte            4     3 (average)
  6247                           ;	Chosen strategy is simple_byte
  6248   004142  5010               	movf	(??_CCP_Timer_config+1)^0,w,c
  6249   004144  0A00               	xorlw	0	; case 0
  6250   004146  B4D8               	btfsc	status,2,c
  6251   004148  EFA8  F020         	goto	l10366
  6252   00414C  EFB7  F020         	goto	l652
  6253   004150                     l10366:
  6254                           
  6255                           ; Switch size 1, requested type "simple"
  6256                           ; Number of cases is 3, Range of values is 0 to 2
  6257                           ; switch strategies available:
  6258                           ; Name         Instructions Cycles
  6259                           ; simple_byte           10     6 (average)
  6260                           ;	Chosen strategy is simple_byte
  6261   004150  500F               	movf	??_CCP_Timer_config^0,w,c
  6262   004152  0A00               	xorlw	0	; case 0
  6263   004154  B4D8               	btfsc	status,2,c
  6264   004156  EF8C  F020         	goto	l648
  6265   00415A  0A01               	xorlw	1	; case 1
  6266   00415C  B4D8               	btfsc	status,2,c
  6267   00415E  EF90  F020         	goto	l650
  6268   004162  0A03               	xorlw	3	; case 2
  6269   004164  B4D8               	btfsc	status,2,c
  6270   004166  EF94  F020         	goto	l651
  6271   00416A  EFB7  F020         	goto	l652
  6272   00416E                     l652:
  6273   00416E  0012               	return		;funcret
  6274   004170                     __end_of_CCP_Timer_config:
  6275                           	callstack 0
  6276                           
  6277 ;; *************** function _ADC_init *****************
  6278 ;; Defined at:
  6279 ;;		line 23 in file "MCAL_layer/ADC/hal_ADC.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  ADC_obj         2   15[COMRAM] PTR const struct .
  6282 ;;		 -> Lm35(7), 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  ret             1   18[COMRAM] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  1    wreg      unsigned char 
  6287 ;; Registers used:
  6288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used: 1
  6300 ;; Hardware stack levels required when called: 5
  6301 ;; This function calls:
  6302 ;;		_ADC_configure_Channel
  6303 ;; This function is called by:
  6304 ;;		_Macl_initialize
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text32
  6309   0034BE                     __ptext32:
  6310                           	callstack 0
  6311   0034BE                     _ADC_init:
  6312                           	callstack 23
  6313   0034BE                     
  6314                           ;MCAL_layer/ADC/hal_ADC.c: 23: Std_ReturnType ADC_init(const ADC_t* ADC_obj);MCAL_layer/
      +                          ADC/hal_ADC.c: 24: {;MCAL_layer/ADC/hal_ADC.c: 25:     Std_ReturnType ret = (Std_ReturnT
      +                          ype)0x01;
  6315   0034BE  0E01               	movlw	1
  6316   0034C0  6E13               	movwf	ADC_init@ret^0,c
  6317   0034C2                     
  6318                           ;MCAL_layer/ADC/hal_ADC.c: 26:     if(ADC_obj == ((void*)0))
  6319   0034C2  5010               	movf	ADC_init@ADC_obj^0,w,c
  6320   0034C4  1011               	iorwf	(ADC_init@ADC_obj+1)^0,w,c
  6321   0034C6  A4D8               	btfss	status,2,c
  6322   0034C8  EF68  F01A         	goto	u5901
  6323   0034CC  EF6A  F01A         	goto	u5900
  6324   0034D0                     u5901:
  6325   0034D0  EF6E  F01A         	goto	l409
  6326   0034D4                     u5900:
  6327   0034D4                     
  6328                           ;MCAL_layer/ADC/hal_ADC.c: 27:     {;MCAL_layer/ADC/hal_ADC.c: 28:         ret = (Std_Re
      +                          turnType)0x00;
  6329   0034D4  0E00               	movlw	0
  6330   0034D6  6E13               	movwf	ADC_init@ret^0,c
  6331                           
  6332                           ;MCAL_layer/ADC/hal_ADC.c: 29:     }
  6333   0034D8  EFE0  F01A         	goto	l6298
  6334   0034DC                     l409:
  6335                           
  6336                           ;MCAL_layer/ADC/hal_ADC.c: 31:     {;MCAL_layer/ADC/hal_ADC.c: 33:         (ADCON0bits.A
      +                          DON = 0);
  6337   0034DC  90C2               	bcf	194,0,c	;volatile
  6338   0034DE                     
  6339                           ;MCAL_layer/ADC/hal_ADC.c: 35:         (ADCON2bits.ACQT = ADC_obj->Acquisition_Time);
  6340   0034DE  EE20 F004          	lfsr	2,4
  6341   0034E2  5010               	movf	ADC_init@ADC_obj^0,w,c
  6342   0034E4  26D9               	addwf	fsr2l,f,c
  6343   0034E6  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6344   0034E8  22DA               	addwfc	fsr2h,f,c
  6345   0034EA  50DF               	movf	indf2,w,c
  6346   0034EC  6E12               	movwf	??_ADC_init^0,c
  6347   0034EE  4612               	rlncf	??_ADC_init^0,f,c
  6348   0034F0  4612               	rlncf	??_ADC_init^0,f,c
  6349   0034F2  4612               	rlncf	??_ADC_init^0,f,c
  6350   0034F4  50C0               	movf	192,w,c	;volatile
  6351   0034F6  1812               	xorwf	??_ADC_init^0,w,c
  6352   0034F8  0BC7               	andlw	-57
  6353   0034FA  1812               	xorwf	??_ADC_init^0,w,c
  6354   0034FC  6EC0               	movwf	192,c	;volatile
  6355                           
  6356                           ;MCAL_layer/ADC/hal_ADC.c: 37:         (ADCON2bits.ADCS = ADC_obj->Prescaler);
  6357   0034FE  EE20 F005          	lfsr	2,5
  6358   003502  5010               	movf	ADC_init@ADC_obj^0,w,c
  6359   003504  26D9               	addwf	fsr2l,f,c
  6360   003506  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6361   003508  22DA               	addwfc	fsr2h,f,c
  6362   00350A  50DF               	movf	indf2,w,c
  6363   00350C  6E12               	movwf	??_ADC_init^0,c
  6364   00350E  50C0               	movf	192,w,c	;volatile
  6365   003510  1812               	xorwf	??_ADC_init^0,w,c
  6366   003512  0BF8               	andlw	-8
  6367   003514  1812               	xorwf	??_ADC_init^0,w,c
  6368   003516  6EC0               	movwf	192,c	;volatile
  6369                           
  6370                           ;MCAL_layer/ADC/hal_ADC.c: 39:         (ADCON0bits.CHS = ADC_obj->ADC_Channel);
  6371   003518  EE20 F003          	lfsr	2,3
  6372   00351C  5010               	movf	ADC_init@ADC_obj^0,w,c
  6373   00351E  26D9               	addwf	fsr2l,f,c
  6374   003520  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6375   003522  22DA               	addwfc	fsr2h,f,c
  6376   003524  50DF               	movf	indf2,w,c
  6377   003526  6E12               	movwf	??_ADC_init^0,c
  6378   003528  4612               	rlncf	??_ADC_init^0,f,c
  6379   00352A  4612               	rlncf	??_ADC_init^0,f,c
  6380   00352C  50C2               	movf	194,w,c	;volatile
  6381   00352E  1812               	xorwf	??_ADC_init^0,w,c
  6382   003530  0BC3               	andlw	-61
  6383   003532  1812               	xorwf	??_ADC_init^0,w,c
  6384   003534  6EC2               	movwf	194,c	;volatile
  6385   003536                     
  6386                           ;MCAL_layer/ADC/hal_ADC.c: 40:         ADC_configure_Channel(ADC_obj->ADC_Channel);
  6387   003536  EE20 F003          	lfsr	2,3
  6388   00353A  5010               	movf	ADC_init@ADC_obj^0,w,c
  6389   00353C  26D9               	addwf	fsr2l,f,c
  6390   00353E  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6391   003540  22DA               	addwfc	fsr2h,f,c
  6392   003542  50DF               	movf	indf2,w,c
  6393   003544  EC65  F01B         	call	_ADC_configure_Channel
  6394   003548                     
  6395                           ;MCAL_layer/ADC/hal_ADC.c: 43:         (PIE1bits.ADIE = 1);
  6396   003548  8C9D               	bsf	157,6,c	;volatile
  6397   00354A                     
  6398                           ;MCAL_layer/ADC/hal_ADC.c: 44:         (PIR1bits.ADIF = 0);
  6399   00354A  9C9E               	bcf	158,6,c	;volatile
  6400   00354C                     
  6401                           ;MCAL_layer/ADC/hal_ADC.c: 61:         (INTCONbits.GIE = 1);
  6402   00354C  8EF2               	bsf	242,7,c	;volatile
  6403   00354E                     
  6404                           ;MCAL_layer/ADC/hal_ADC.c: 62:         (INTCONbits.PEIE = 1);
  6405   00354E  8CF2               	bsf	242,6,c	;volatile
  6406   003550                     
  6407                           ;MCAL_layer/ADC/hal_ADC.c: 64:         ADC_InterruptCallBack = ADC_obj->ADC_CallBack;
  6408   003550  C010  FFD9         	movff	ADC_init@ADC_obj,fsr2l
  6409   003554  C011  FFDA         	movff	ADC_init@ADC_obj+1,fsr2h
  6410   003558  CFDE F0AE          	movff	postinc2,_ADC_InterruptCallBack
  6411   00355C  CFDD F0AF          	movff	postdec2,_ADC_InterruptCallBack+1
  6412   003560                     
  6413                           ;MCAL_layer/ADC/hal_ADC.c: 67:         (ADCON2bits.ADFM = ADC_obj->Result_format);
  6414   003560  EE20 F006          	lfsr	2,6
  6415   003564  5010               	movf	ADC_init@ADC_obj^0,w,c
  6416   003566  26D9               	addwf	fsr2l,f,c
  6417   003568  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6418   00356A  22DA               	addwfc	fsr2h,f,c
  6419   00356C  A2DF               	btfss	indf2,1,c
  6420   00356E  D002               	bra	u5915
  6421   003570  8EC0               	bsf	192,7,c	;volatile
  6422   003572  D001               	bra	u5917
  6423   003574                     u5915:
  6424   003574  9EC0               	bcf	192,7,c	;volatile
  6425   003576                     u5917:
  6426   003576                     
  6427                           ;MCAL_layer/ADC/hal_ADC.c: 69:         if(ADC_obj->voltage_refrence == 1U)
  6428   003576  EE20 F006          	lfsr	2,6
  6429   00357A  5010               	movf	ADC_init@ADC_obj^0,w,c
  6430   00357C  26D9               	addwf	fsr2l,f,c
  6431   00357E  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6432   003580  22DA               	addwfc	fsr2h,f,c
  6433   003582  A0DF               	btfss	indf2,0,c
  6434   003584  EFC6  F01A         	goto	u5921
  6435   003588  EFC8  F01A         	goto	u5920
  6436   00358C                     u5921:
  6437   00358C  EFCC  F01A         	goto	l6296
  6438   003590                     u5920:
  6439   003590  98C1               	bcf	193,4,c	;volatile
  6440   003592  9AC1               	bcf	193,5,c	;volatile
  6441   003594  EFDF  F01A         	goto	l414
  6442   003598                     l6296:
  6443   003598  EE20 F006          	lfsr	2,6
  6444   00359C  5010               	movf	ADC_init@ADC_obj^0,w,c
  6445   00359E  26D9               	addwf	fsr2l,f,c
  6446   0035A0  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6447   0035A2  22DA               	addwfc	fsr2h,f,c
  6448   0035A4  B0DF               	btfsc	indf2,0,c
  6449   0035A6  EFD7  F01A         	goto	u5931
  6450   0035AA  EFD9  F01A         	goto	u5930
  6451   0035AE                     u5931:
  6452   0035AE  EFDD  F01A         	goto	l419
  6453   0035B2                     u5930:
  6454   0035B2  88C1               	bsf	193,4,c	;volatile
  6455   0035B4  8AC1               	bsf	193,5,c	;volatile
  6456   0035B6  EFDF  F01A         	goto	l414
  6457   0035BA                     l419:
  6458   0035BA  98C1               	bcf	193,4,c	;volatile
  6459   0035BC  9AC1               	bcf	193,5,c	;volatile
  6460   0035BE                     l414:
  6461                           
  6462                           ;MCAL_layer/ADC/hal_ADC.c: 82:         (ADCON0bits.ADON = 1);
  6463   0035BE  80C2               	bsf	194,0,c	;volatile
  6464   0035C0                     l6298:
  6465                           
  6466                           ;MCAL_layer/ADC/hal_ADC.c: 85:     return ret;
  6467   0035C0  5013               	movf	ADC_init@ret^0,w,c
  6468   0035C2  0012               	return		;funcret
  6469   0035C4                     __end_of_ADC_init:
  6470                           	callstack 0
  6471                           
  6472 ;; *************** function ___lwdiv *****************
  6473 ;; Defined at:
  6474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  dividend        2   12[COMRAM] unsigned int 
  6477 ;;  divisor         2   14[COMRAM] unsigned int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  quotient        2   16[COMRAM] unsigned int 
  6480 ;;  counter         1   18[COMRAM] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  2   12[COMRAM] unsigned int 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;Total ram usage:        7 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 4
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_main
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text33
  6505   003EF2                     __ptext33:
  6506                           	callstack 0
  6507   003EF2                     ___lwdiv:
  6508                           	callstack 26
  6509   003EF2  0E00               	movlw	0
  6510   003EF4  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  6511   003EF6  0E00               	movlw	0
  6512   003EF8  6E11               	movwf	___lwdiv@quotient^0,c
  6513   003EFA  500F               	movf	___lwdiv@divisor^0,w,c
  6514   003EFC  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6515   003EFE  B4D8               	btfsc	status,2,c
  6516   003F00  EF84  F01F         	goto	u6601
  6517   003F04  EF86  F01F         	goto	u6600
  6518   003F08                     u6601:
  6519   003F08  EFAE  F01F         	goto	l1855
  6520   003F0C                     u6600:
  6521   003F0C  0E01               	movlw	1
  6522   003F0E  6E13               	movwf	___lwdiv@counter^0,c
  6523   003F10  EF8E  F01F         	goto	l6956
  6524   003F14                     l6954:
  6525   003F14  90D8               	bcf	status,0,c
  6526   003F16  360F               	rlcf	___lwdiv@divisor^0,f,c
  6527   003F18  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6528   003F1A  2A13               	incf	___lwdiv@counter^0,f,c
  6529   003F1C                     l6956:
  6530   003F1C  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  6531   003F1E  EF93  F01F         	goto	u6611
  6532   003F22  EF95  F01F         	goto	u6610
  6533   003F26                     u6611:
  6534   003F26  EF8A  F01F         	goto	l6954
  6535   003F2A                     u6610:
  6536   003F2A                     l6958:
  6537   003F2A  90D8               	bcf	status,0,c
  6538   003F2C  3611               	rlcf	___lwdiv@quotient^0,f,c
  6539   003F2E  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6540   003F30  500F               	movf	___lwdiv@divisor^0,w,c
  6541   003F32  5C0D               	subwf	___lwdiv@dividend^0,w,c
  6542   003F34  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  6543   003F36  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6544   003F38  A0D8               	btfss	status,0,c
  6545   003F3A  EFA1  F01F         	goto	u6621
  6546   003F3E  EFA3  F01F         	goto	u6620
  6547   003F42                     u6621:
  6548   003F42  EFA8  F01F         	goto	l6966
  6549   003F46                     u6620:
  6550   003F46  500F               	movf	___lwdiv@divisor^0,w,c
  6551   003F48  5E0D               	subwf	___lwdiv@dividend^0,f,c
  6552   003F4A  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  6553   003F4C  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6554   003F4E  8011               	bsf	___lwdiv@quotient^0,0,c
  6555   003F50                     l6966:
  6556   003F50  90D8               	bcf	status,0,c
  6557   003F52  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6558   003F54  320F               	rrcf	___lwdiv@divisor^0,f,c
  6559   003F56  2E13               	decfsz	___lwdiv@counter^0,f,c
  6560   003F58  EF95  F01F         	goto	l6958
  6561   003F5C                     l1855:
  6562   003F5C  C011  F00D         	movff	___lwdiv@quotient,?___lwdiv
  6563   003F60  C012  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6564   003F64  0012               	return		;funcret
  6565   003F66                     __end_of___lwdiv:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function _CCP_PWM_set_DutyCycle *****************
  6569 ;; Defined at:
  6570 ;;		line 369 in file "MCAL_layer/CCP/CCP1.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  ccp_obj         2    0[BANK0 ] PTR const struct .
  6573 ;;		 -> ccp_obj(16), 
  6574 ;;  Duty_value      1    2[BANK0 ] unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  l_duty_temp     2   10[BANK0 ] unsigned short 
  6577 ;;  ret             1    5[BANK0 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      unsigned char 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6587 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;Total ram usage:       12 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 5
  6594 ;; This function calls:
  6595 ;;		___fladd
  6596 ;;		___fldiv
  6597 ;;		___flmul
  6598 ;;		___fltol
  6599 ;;		___xxtofl
  6600 ;; This function is called by:
  6601 ;;		_main
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text34
  6606   0028B8                     __ptext34:
  6607                           	callstack 0
  6608   0028B8                     _CCP_PWM_set_DutyCycle:
  6609                           	callstack 25
  6610   0028B8                     
  6611                           ;MCAL_layer/CCP/CCP1.c: 369: Std_ReturnType CCP_PWM_set_DutyCycle(const CCP_t *ccp_obj,u
      +                          int8 Duty_value);MCAL_layer/CCP/CCP1.c: 370: {;MCAL_layer/CCP/CCP1.c: 371:     Std_Retur
      +                          nType ret = (Std_ReturnType)0x01;
  6612   0028B8  0E01               	movlw	1
  6613   0028BA  0100               	movlb	0	; () banked
  6614   0028BC  6FF8               	movwf	CCP_PWM_set_DutyCycle@ret& (0+255),b
  6615   0028BE                     
  6616                           ; BSR set to: 0
  6617                           ;MCAL_layer/CCP/CCP1.c: 373:     if(ccp_obj == ((void*)0))
  6618   0028BE  51F3               	movf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),w,b
  6619   0028C0  11F4               	iorwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),w,b
  6620   0028C2  A4D8               	btfss	status,2,c
  6621   0028C4  EF66  F014         	goto	u10271
  6622   0028C8  EF68  F014         	goto	u10270
  6623   0028CC                     u10271:
  6624   0028CC  EF6C  F014         	goto	l9582
  6625   0028D0                     u10270:
  6626   0028D0                     
  6627                           ; BSR set to: 0
  6628                           ;MCAL_layer/CCP/CCP1.c: 374:     {;MCAL_layer/CCP/CCP1.c: 375:         ret = (Std_Return
      +                          Type)0x00;
  6629   0028D0  0E00               	movlw	0
  6630   0028D2  6FF8               	movwf	CCP_PWM_set_DutyCycle@ret& (0+255),b
  6631                           
  6632                           ;MCAL_layer/CCP/CCP1.c: 376:     }
  6633   0028D4  EF96  F015         	goto	l9598
  6634   0028D8                     l9582:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;MCAL_layer/CCP/CCP1.c: 378:     {;MCAL_layer/CCP/CCP1.c: 379:         if(ccp_obj->ccp_i
      +                          nst == CCP1_inst)
  6638   0028D8  EE20 F001          	lfsr	2,1
  6639   0028DC  51F3               	movf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),w,b
  6640   0028DE  26D9               	addwf	fsr2l,f,c
  6641   0028E0  51F4               	movf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),w,b
  6642   0028E2  22DA               	addwfc	fsr2h,f,c
  6643   0028E4  50DF               	movf	indf2,w,c
  6644   0028E6  A4D8               	btfss	status,2,c
  6645   0028E8  EF78  F014         	goto	u10281
  6646   0028EC  EF7A  F014         	goto	u10280
  6647   0028F0                     u10281:
  6648   0028F0  EF02  F015         	goto	l9590
  6649   0028F4                     u10280:
  6650   0028F4                     
  6651                           ; BSR set to: 0
  6652                           ;MCAL_layer/CCP/CCP1.c: 380:         {;MCAL_layer/CCP/CCP1.c: 381:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6653   0028F4  0E00               	movlw	0
  6654   0028F6  6E1F               	movwf	___flmul@a^0,c
  6655   0028F8  0E00               	movlw	0
  6656   0028FA  6E20               	movwf	(___flmul@a+1)^0,c
  6657   0028FC  0E80               	movlw	128
  6658   0028FE  6E21               	movwf	(___flmul@a+2)^0,c
  6659   002900  0E40               	movlw	64
  6660   002902  6E22               	movwf	(___flmul@a+3)^0,c
  6661   002904  0E00               	movlw	0
  6662   002906  6E51               	movwf	___fladd@a^0,c
  6663   002908  0E00               	movlw	0
  6664   00290A  6E52               	movwf	(___fladd@a+1)^0,c
  6665   00290C  0E80               	movlw	128
  6666   00290E  6E53               	movwf	(___fladd@a+2)^0,c
  6667   002910  0E3F               	movlw	63
  6668   002912  6E54               	movwf	(___fladd@a+3)^0,c
  6669   002914  50CB               	movf	203,w,c	;volatile
  6670   002916  6E0D               	movwf	___xxtofl@val^0,c
  6671   002918  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6672   00291A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6673   00291C  6A10               	clrf	(___xxtofl@val+3)^0,c
  6674   00291E  0E00               	movlw	0
  6675   002920  EC98  F015         	call	___xxtofl
  6676   002924  C00D  F04D         	movff	?___xxtofl,___fladd@b
  6677   002928  C00E  F04E         	movff	?___xxtofl+1,___fladd@b+1
  6678   00292C  C00F  F04F         	movff	?___xxtofl+2,___fladd@b+2
  6679   002930  C010  F050         	movff	?___xxtofl+3,___fladd@b+3
  6680   002934  ECDF  F00A         	call	___fladd	;wreg free
  6681   002938  C04D  F01B         	movff	?___fladd,___flmul@b
  6682   00293C  C04E  F01C         	movff	?___fladd+1,___flmul@b+1
  6683   002940  C04F  F01D         	movff	?___fladd+2,___flmul@b+2
  6684   002944  C050  F01E         	movff	?___fladd+3,___flmul@b+3
  6685   002948  EC3F  F00D         	call	___flmul	;wreg free
  6686   00294C  C01B  F0F9         	movff	?___flmul,_CCP_PWM_set_DutyCycle$4298
  6687   002950  C01C  F0FA         	movff	?___flmul+1,_CCP_PWM_set_DutyCycle$4298+1
  6688   002954  C01D  F0FB         	movff	?___flmul+2,_CCP_PWM_set_DutyCycle$4298+2
  6689   002958  C01E  F0FC         	movff	?___flmul+3,_CCP_PWM_set_DutyCycle$4298+3
  6690                           
  6691                           ;MCAL_layer/CCP/CCP1.c: 380:         {;MCAL_layer/CCP/CCP1.c: 381:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6692   00295C  0E00               	movlw	0
  6693   00295E  6E38               	movwf	___fldiv@a^0,c
  6694   002960  0E00               	movlw	0
  6695   002962  6E39               	movwf	(___fldiv@a+1)^0,c
  6696   002964  0EC8               	movlw	200
  6697   002966  6E3A               	movwf	(___fldiv@a+2)^0,c
  6698   002968  0E42               	movlw	66
  6699   00296A  6E3B               	movwf	(___fldiv@a+3)^0,c
  6700   00296C  0100               	movlb	0	; () banked
  6701   00296E  51F5               	movf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),w,b
  6702   002970  6E0D               	movwf	___xxtofl@val^0,c
  6703   002972  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6704   002974  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6705   002976  6A10               	clrf	(___xxtofl@val+3)^0,c
  6706   002978  0E00               	movlw	0
  6707   00297A  EC98  F015         	call	___xxtofl
  6708   00297E  C00D  F034         	movff	?___xxtofl,___fldiv@b
  6709   002982  C00E  F035         	movff	?___xxtofl+1,___fldiv@b+1
  6710   002986  C00F  F036         	movff	?___xxtofl+2,___fldiv@b+2
  6711   00298A  C010  F037         	movff	?___xxtofl+3,___fldiv@b+3
  6712   00298E  EC54  F00F         	call	___fldiv	;wreg free
  6713   002992  C034  F01F         	movff	?___fldiv,___flmul@a
  6714   002996  C035  F020         	movff	?___fldiv+1,___flmul@a+1
  6715   00299A  C036  F021         	movff	?___fldiv+2,___flmul@a+2
  6716   00299E  C037  F022         	movff	?___fldiv+3,___flmul@a+3
  6717   0029A2  C0F9  F01B         	movff	_CCP_PWM_set_DutyCycle$4298,___flmul@b
  6718   0029A6  C0FA  F01C         	movff	_CCP_PWM_set_DutyCycle$4298+1,___flmul@b+1
  6719   0029AA  C0FB  F01D         	movff	_CCP_PWM_set_DutyCycle$4298+2,___flmul@b+2
  6720   0029AE  C0FC  F01E         	movff	_CCP_PWM_set_DutyCycle$4298+3,___flmul@b+3
  6721   0029B2  EC3F  F00D         	call	___flmul	;wreg free
  6722   0029B6  C01B  F05D         	movff	?___flmul,___fltol@f1
  6723   0029BA  C01C  F05E         	movff	?___flmul+1,___fltol@f1+1
  6724   0029BE  C01D  F05F         	movff	?___flmul+2,___fltol@f1+2
  6725   0029C2  C01E  F060         	movff	?___flmul+3,___fltol@f1+3
  6726   0029C6  ECE2  F01A         	call	___fltol	;wreg free
  6727   0029CA  C05D  F0FD         	movff	?___fltol,CCP_PWM_set_DutyCycle@l_duty_temp
  6728   0029CE  C05E  F0FE         	movff	?___fltol+1,CCP_PWM_set_DutyCycle@l_duty_temp+1
  6729   0029D2                     
  6730                           ;MCAL_layer/CCP/CCP1.c: 382:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003
      +                          );
  6731   0029D2  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6732   0029D6  0E03               	movlw	3
  6733   0029D8  0100               	movlb	0	; () banked
  6734   0029DA  17F6               	andwf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6735   0029DC  3BF6               	swapf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6736   0029DE  50BD               	movf	189,w,c	;volatile
  6737   0029E0  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6738   0029E2  0BCF               	andlw	-49
  6739   0029E4  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6740   0029E6  6EBD               	movwf	189,c	;volatile
  6741   0029E8                     
  6742                           ; BSR set to: 0
  6743                           ;MCAL_layer/CCP/CCP1.c: 383:             CCPR1L = (uint8)(l_duty_temp >> 2);
  6744   0029E8  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6745   0029EC  C0FE  F0F7         	movff	CCP_PWM_set_DutyCycle@l_duty_temp+1,??_CCP_PWM_set_DutyCycle+1
  6746   0029F0  90D8               	bcf	status,0,c
  6747   0029F2  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6748   0029F4  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6749   0029F6  90D8               	bcf	status,0,c
  6750   0029F8  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6751   0029FA  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6752   0029FC  51F6               	movf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6753   0029FE  6EBE               	movwf	190,c	;volatile
  6754                           
  6755                           ;MCAL_layer/CCP/CCP1.c: 384:         }
  6756   002A00  EF96  F015         	goto	l9598
  6757   002A04                     l9590:
  6758                           
  6759                           ; BSR set to: 0
  6760   002A04  EE20 F001          	lfsr	2,1
  6761   002A08  51F3               	movf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),w,b
  6762   002A0A  26D9               	addwf	fsr2l,f,c
  6763   002A0C  51F4               	movf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),w,b
  6764   002A0E  22DA               	addwfc	fsr2h,f,c
  6765   002A10  04DE               	decf	postinc2,w,c
  6766   002A12  A4D8               	btfss	status,2,c
  6767   002A14  EF0E  F015         	goto	u10291
  6768   002A18  EF10  F015         	goto	u10290
  6769   002A1C                     u10291:
  6770   002A1C  EF96  F015         	goto	l9598
  6771   002A20                     u10290:
  6772   002A20                     
  6773                           ; BSR set to: 0
  6774                           ;MCAL_layer/CCP/CCP1.c: 386:         {;MCAL_layer/CCP/CCP1.c: 387:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6775   002A20  0E00               	movlw	0
  6776   002A22  6E1F               	movwf	___flmul@a^0,c
  6777   002A24  0E00               	movlw	0
  6778   002A26  6E20               	movwf	(___flmul@a+1)^0,c
  6779   002A28  0E80               	movlw	128
  6780   002A2A  6E21               	movwf	(___flmul@a+2)^0,c
  6781   002A2C  0E40               	movlw	64
  6782   002A2E  6E22               	movwf	(___flmul@a+3)^0,c
  6783   002A30  0E00               	movlw	0
  6784   002A32  6E51               	movwf	___fladd@a^0,c
  6785   002A34  0E00               	movlw	0
  6786   002A36  6E52               	movwf	(___fladd@a+1)^0,c
  6787   002A38  0E80               	movlw	128
  6788   002A3A  6E53               	movwf	(___fladd@a+2)^0,c
  6789   002A3C  0E3F               	movlw	63
  6790   002A3E  6E54               	movwf	(___fladd@a+3)^0,c
  6791   002A40  50CB               	movf	203,w,c	;volatile
  6792   002A42  6E0D               	movwf	___xxtofl@val^0,c
  6793   002A44  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6794   002A46  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6795   002A48  6A10               	clrf	(___xxtofl@val+3)^0,c
  6796   002A4A  0E00               	movlw	0
  6797   002A4C  EC98  F015         	call	___xxtofl
  6798   002A50  C00D  F04D         	movff	?___xxtofl,___fladd@b
  6799   002A54  C00E  F04E         	movff	?___xxtofl+1,___fladd@b+1
  6800   002A58  C00F  F04F         	movff	?___xxtofl+2,___fladd@b+2
  6801   002A5C  C010  F050         	movff	?___xxtofl+3,___fladd@b+3
  6802   002A60  ECDF  F00A         	call	___fladd	;wreg free
  6803   002A64  C04D  F01B         	movff	?___fladd,___flmul@b
  6804   002A68  C04E  F01C         	movff	?___fladd+1,___flmul@b+1
  6805   002A6C  C04F  F01D         	movff	?___fladd+2,___flmul@b+2
  6806   002A70  C050  F01E         	movff	?___fladd+3,___flmul@b+3
  6807   002A74  EC3F  F00D         	call	___flmul	;wreg free
  6808   002A78  C01B  F0F9         	movff	?___flmul,_CCP_PWM_set_DutyCycle$4298
  6809   002A7C  C01C  F0FA         	movff	?___flmul+1,_CCP_PWM_set_DutyCycle$4298+1
  6810   002A80  C01D  F0FB         	movff	?___flmul+2,_CCP_PWM_set_DutyCycle$4298+2
  6811   002A84  C01E  F0FC         	movff	?___flmul+3,_CCP_PWM_set_DutyCycle$4298+3
  6812                           
  6813                           ;MCAL_layer/CCP/CCP1.c: 386:         {;MCAL_layer/CCP/CCP1.c: 387:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6814   002A88  0E00               	movlw	0
  6815   002A8A  6E38               	movwf	___fldiv@a^0,c
  6816   002A8C  0E00               	movlw	0
  6817   002A8E  6E39               	movwf	(___fldiv@a+1)^0,c
  6818   002A90  0EC8               	movlw	200
  6819   002A92  6E3A               	movwf	(___fldiv@a+2)^0,c
  6820   002A94  0E42               	movlw	66
  6821   002A96  6E3B               	movwf	(___fldiv@a+3)^0,c
  6822   002A98  0100               	movlb	0	; () banked
  6823   002A9A  51F5               	movf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),w,b
  6824   002A9C  6E0D               	movwf	___xxtofl@val^0,c
  6825   002A9E  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6826   002AA0  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6827   002AA2  6A10               	clrf	(___xxtofl@val+3)^0,c
  6828   002AA4  0E00               	movlw	0
  6829   002AA6  EC98  F015         	call	___xxtofl
  6830   002AAA  C00D  F034         	movff	?___xxtofl,___fldiv@b
  6831   002AAE  C00E  F035         	movff	?___xxtofl+1,___fldiv@b+1
  6832   002AB2  C00F  F036         	movff	?___xxtofl+2,___fldiv@b+2
  6833   002AB6  C010  F037         	movff	?___xxtofl+3,___fldiv@b+3
  6834   002ABA  EC54  F00F         	call	___fldiv	;wreg free
  6835   002ABE  C034  F01F         	movff	?___fldiv,___flmul@a
  6836   002AC2  C035  F020         	movff	?___fldiv+1,___flmul@a+1
  6837   002AC6  C036  F021         	movff	?___fldiv+2,___flmul@a+2
  6838   002ACA  C037  F022         	movff	?___fldiv+3,___flmul@a+3
  6839   002ACE  C0F9  F01B         	movff	_CCP_PWM_set_DutyCycle$4298,___flmul@b
  6840   002AD2  C0FA  F01C         	movff	_CCP_PWM_set_DutyCycle$4298+1,___flmul@b+1
  6841   002AD6  C0FB  F01D         	movff	_CCP_PWM_set_DutyCycle$4298+2,___flmul@b+2
  6842   002ADA  C0FC  F01E         	movff	_CCP_PWM_set_DutyCycle$4298+3,___flmul@b+3
  6843   002ADE  EC3F  F00D         	call	___flmul	;wreg free
  6844   002AE2  C01B  F05D         	movff	?___flmul,___fltol@f1
  6845   002AE6  C01C  F05E         	movff	?___flmul+1,___fltol@f1+1
  6846   002AEA  C01D  F05F         	movff	?___flmul+2,___fltol@f1+2
  6847   002AEE  C01E  F060         	movff	?___flmul+3,___fltol@f1+3
  6848   002AF2  ECE2  F01A         	call	___fltol	;wreg free
  6849   002AF6  C05D  F0FD         	movff	?___fltol,CCP_PWM_set_DutyCycle@l_duty_temp
  6850   002AFA  C05E  F0FE         	movff	?___fltol+1,CCP_PWM_set_DutyCycle@l_duty_temp+1
  6851   002AFE                     
  6852                           ;MCAL_layer/CCP/CCP1.c: 388:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003
      +                          );
  6853   002AFE  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6854   002B02  0E03               	movlw	3
  6855   002B04  0100               	movlb	0	; () banked
  6856   002B06  17F6               	andwf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6857   002B08  3BF6               	swapf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6858   002B0A  50BA               	movf	186,w,c	;volatile
  6859   002B0C  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6860   002B0E  0BCF               	andlw	-49
  6861   002B10  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6862   002B12  6EBA               	movwf	186,c	;volatile
  6863   002B14                     
  6864                           ; BSR set to: 0
  6865                           ;MCAL_layer/CCP/CCP1.c: 389:             CCPR2L = (uint8)(l_duty_temp >> 2);
  6866   002B14  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6867   002B18  C0FE  F0F7         	movff	CCP_PWM_set_DutyCycle@l_duty_temp+1,??_CCP_PWM_set_DutyCycle+1
  6868   002B1C  90D8               	bcf	status,0,c
  6869   002B1E  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6870   002B20  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6871   002B22  90D8               	bcf	status,0,c
  6872   002B24  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6873   002B26  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6874   002B28  51F6               	movf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6875   002B2A  6EBB               	movwf	187,c	;volatile
  6876   002B2C                     l9598:
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;MCAL_layer/CCP/CCP1.c: 393:     return ret;
  6880   002B2C  51F8               	movf	CCP_PWM_set_DutyCycle@ret& (0+255),w,b
  6881   002B2E                     
  6882                           ; BSR set to: 0
  6883   002B2E  0012               	return		;funcret
  6884   002B30                     __end_of_CCP_PWM_set_DutyCycle:
  6885                           	callstack 0
  6886                           
  6887 ;; *************** function ___xxtofl *****************
  6888 ;; Defined at:
  6889 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  sign            1    wreg     unsigned char 
  6892 ;;  val             4   12[COMRAM] long 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  sign            1   20[COMRAM] unsigned char 
  6895 ;;  arg             4   22[COMRAM] unsigned long 
  6896 ;;  exp             1   21[COMRAM] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  4   12[COMRAM] unsigned char 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;Total ram usage:       14 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 4
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_CCP_Init
  6917 ;;		_CCP_PWM_set_DutyCycle
  6918 ;;		_main
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text35
  6923   002B30                     __ptext35:
  6924                           	callstack 0
  6925   002B30                     ___xxtofl:
  6926                           	callstack 23
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;incstack = 0
  6930                           ;___xxtofl@sign stored from wreg
  6931   002B30  6E15               	movwf	___xxtofl@sign^0,c
  6932   002B32  5015               	movf	___xxtofl@sign^0,w,c
  6933   002B34  B4D8               	btfsc	status,2,c
  6934   002B36  EF9F  F015         	goto	u9661
  6935   002B3A  EFA1  F015         	goto	u9660
  6936   002B3E                     u9661:
  6937   002B3E  EFC3  F015         	goto	l2019
  6938   002B42                     u9660:
  6939   002B42  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  6940   002B44  EFA8  F015         	goto	u9670
  6941   002B48  EFA6  F015         	goto	u9671
  6942   002B4C                     u9671:
  6943   002B4C  EFC3  F015         	goto	l2019
  6944   002B50                     u9670:
  6945   002B50  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  6946   002B54  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  6947   002B58  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  6948   002B5C  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  6949   002B60  1E11               	comf	??___xxtofl^0,f,c
  6950   002B62  1E12               	comf	(??___xxtofl+1)^0,f,c
  6951   002B64  1E13               	comf	(??___xxtofl+2)^0,f,c
  6952   002B66  1E14               	comf	(??___xxtofl+3)^0,f,c
  6953   002B68  2A11               	incf	??___xxtofl^0,f,c
  6954   002B6A  0E00               	movlw	0
  6955   002B6C  2212               	addwfc	(??___xxtofl+1)^0,f,c
  6956   002B6E  2213               	addwfc	(??___xxtofl+2)^0,f,c
  6957   002B70  2214               	addwfc	(??___xxtofl+3)^0,f,c
  6958   002B72  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  6959   002B76  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  6960   002B7A  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  6961   002B7E  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  6962   002B82  EFCB  F015         	goto	l9008
  6963   002B86                     l2019:
  6964   002B86  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  6965   002B8A  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6966   002B8E  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6967   002B92  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6968   002B96                     l9008:
  6969   002B96  500D               	movf	___xxtofl@val^0,w,c
  6970   002B98  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  6971   002B9A  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  6972   002B9C  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  6973   002B9E  A4D8               	btfss	status,2,c
  6974   002BA0  EFD4  F015         	goto	u9681
  6975   002BA4  EFD6  F015         	goto	u9680
  6976   002BA8                     u9681:
  6977   002BA8  EFE0  F015         	goto	l9014
  6978   002BAC                     u9680:
  6979   002BAC  0E00               	movlw	0
  6980   002BAE  6E0D               	movwf	?___xxtofl^0,c
  6981   002BB0  0E00               	movlw	0
  6982   002BB2  6E0E               	movwf	(?___xxtofl+1)^0,c
  6983   002BB4  0E00               	movlw	0
  6984   002BB6  6E0F               	movwf	(?___xxtofl+2)^0,c
  6985   002BB8  0E00               	movlw	0
  6986   002BBA  6E10               	movwf	(?___xxtofl+3)^0,c
  6987   002BBC  EF71  F016         	goto	l2022
  6988   002BC0                     l9014:
  6989   002BC0  0E96               	movlw	150
  6990   002BC2  6E16               	movwf	___xxtofl@exp^0,c
  6991   002BC4  EFEA  F015         	goto	l9018
  6992   002BC8                     l9016:
  6993   002BC8  2A16               	incf	___xxtofl@exp^0,f,c
  6994   002BCA  90D8               	bcf	status,0,c
  6995   002BCC  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  6996   002BCE  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  6997   002BD0  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  6998   002BD2  3217               	rrcf	___xxtofl@arg^0,f,c
  6999   002BD4                     l9018:
  7000   002BD4  0E00               	movlw	0
  7001   002BD6  1417               	andwf	___xxtofl@arg^0,w,c
  7002   002BD8  6E11               	movwf	??___xxtofl^0,c
  7003   002BDA  0E00               	movlw	0
  7004   002BDC  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7005   002BDE  6E12               	movwf	(??___xxtofl+1)^0,c
  7006   002BE0  0E00               	movlw	0
  7007   002BE2  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7008   002BE4  6E13               	movwf	(??___xxtofl+2)^0,c
  7009   002BE6  0EFE               	movlw	254
  7010   002BE8  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7011   002BEA  6E14               	movwf	(??___xxtofl+3)^0,c
  7012   002BEC  5011               	movf	??___xxtofl^0,w,c
  7013   002BEE  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7014   002BF0  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7015   002BF2  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7016   002BF4  A4D8               	btfss	status,2,c
  7017   002BF6  EFFF  F015         	goto	u9691
  7018   002BFA  EF01  F016         	goto	u9690
  7019   002BFE                     u9691:
  7020   002BFE  EFE4  F015         	goto	l9016
  7021   002C02                     u9690:
  7022   002C02  EF0F  F016         	goto	l2026
  7023   002C06                     l9020:
  7024   002C06  2A16               	incf	___xxtofl@exp^0,f,c
  7025   002C08  0E01               	movlw	1
  7026   002C0A  2617               	addwf	___xxtofl@arg^0,f,c
  7027   002C0C  0E00               	movlw	0
  7028   002C0E  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7029   002C10  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7030   002C12  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7031   002C14  90D8               	bcf	status,0,c
  7032   002C16  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7033   002C18  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7034   002C1A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7035   002C1C  3217               	rrcf	___xxtofl@arg^0,f,c
  7036   002C1E                     l2026:
  7037   002C1E  0E00               	movlw	0
  7038   002C20  1417               	andwf	___xxtofl@arg^0,w,c
  7039   002C22  6E11               	movwf	??___xxtofl^0,c
  7040   002C24  0E00               	movlw	0
  7041   002C26  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7042   002C28  6E12               	movwf	(??___xxtofl+1)^0,c
  7043   002C2A  0E00               	movlw	0
  7044   002C2C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7045   002C2E  6E13               	movwf	(??___xxtofl+2)^0,c
  7046   002C30  0EFF               	movlw	255
  7047   002C32  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7048   002C34  6E14               	movwf	(??___xxtofl+3)^0,c
  7049   002C36  5011               	movf	??___xxtofl^0,w,c
  7050   002C38  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7051   002C3A  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7052   002C3C  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7053   002C3E  A4D8               	btfss	status,2,c
  7054   002C40  EF24  F016         	goto	u9701
  7055   002C44  EF26  F016         	goto	u9700
  7056   002C48                     u9701:
  7057   002C48  EF03  F016         	goto	l9020
  7058   002C4C                     u9700:
  7059   002C4C  EF2E  F016         	goto	l9028
  7060   002C50                     l9026:
  7061   002C50  0616               	decf	___xxtofl@exp^0,f,c
  7062   002C52  90D8               	bcf	status,0,c
  7063   002C54  3617               	rlcf	___xxtofl@arg^0,f,c
  7064   002C56  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7065   002C58  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7066   002C5A  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7067   002C5C                     l9028:
  7068   002C5C  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7069   002C5E  EF33  F016         	goto	u9711
  7070   002C62  EF35  F016         	goto	u9710
  7071   002C66                     u9711:
  7072   002C66  EF3D  F016         	goto	l2033
  7073   002C6A                     u9710:
  7074   002C6A  0E02               	movlw	2
  7075   002C6C  6016               	cpfslt	___xxtofl@exp^0,c
  7076   002C6E  EF3B  F016         	goto	u9721
  7077   002C72  EF3D  F016         	goto	u9720
  7078   002C76                     u9721:
  7079   002C76  EF28  F016         	goto	l9026
  7080   002C7A                     u9720:
  7081   002C7A                     l2033:
  7082   002C7A  B016               	btfsc	___xxtofl@exp^0,0,c
  7083   002C7C  EF42  F016         	goto	u9731
  7084   002C80  EF44  F016         	goto	u9730
  7085   002C84                     u9731:
  7086   002C84  EF45  F016         	goto	l9034
  7087   002C88                     u9730:
  7088   002C88  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  7089   002C8A                     l9034:
  7090   002C8A  90D8               	bcf	status,0,c
  7091   002C8C  3216               	rrcf	___xxtofl@exp^0,f,c
  7092   002C8E  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  7093   002C92  6A12               	clrf	(??___xxtofl+1)^0,c
  7094   002C94  6A13               	clrf	(??___xxtofl+2)^0,c
  7095   002C96  6A14               	clrf	(??___xxtofl+3)^0,c
  7096   002C98  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  7097   002C9C  6A13               	clrf	(??___xxtofl+2)^0,c
  7098   002C9E  6A12               	clrf	(??___xxtofl+1)^0,c
  7099   002CA0  6A11               	clrf	??___xxtofl^0,c
  7100   002CA2  5011               	movf	??___xxtofl^0,w,c
  7101   002CA4  1217               	iorwf	___xxtofl@arg^0,f,c
  7102   002CA6  5012               	movf	(??___xxtofl+1)^0,w,c
  7103   002CA8  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  7104   002CAA  5013               	movf	(??___xxtofl+2)^0,w,c
  7105   002CAC  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  7106   002CAE  5014               	movf	(??___xxtofl+3)^0,w,c
  7107   002CB0  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  7108   002CB2  5015               	movf	___xxtofl@sign^0,w,c
  7109   002CB4  B4D8               	btfsc	status,2,c
  7110   002CB6  EF5F  F016         	goto	u9741
  7111   002CBA  EF61  F016         	goto	u9740
  7112   002CBE                     u9741:
  7113   002CBE  EF69  F016         	goto	l9044
  7114   002CC2                     u9740:
  7115   002CC2  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7116   002CC4  EF68  F016         	goto	u9750
  7117   002CC8  EF66  F016         	goto	u9751
  7118   002CCC                     u9751:
  7119   002CCC  EF69  F016         	goto	l9044
  7120   002CD0                     u9750:
  7121   002CD0  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  7122   002CD2                     l9044:
  7123   002CD2  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  7124   002CD6  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  7125   002CDA  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  7126   002CDE  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  7127   002CE2                     l2022:
  7128   002CE2  0012               	return		;funcret
  7129   002CE4                     __end_of___xxtofl:
  7130                           	callstack 0
  7131                           
  7132 ;; *************** function ___fltol *****************
  7133 ;; Defined at:
  7134 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  f1              4   92[COMRAM] unsigned char 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  exp1            1  101[COMRAM] unsigned char 
  7139 ;;  sign1           1  100[COMRAM] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  4   92[COMRAM] long 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;Total ram usage:       10 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 4
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_CCP_Init
  7160 ;;		_CCP_PWM_set_DutyCycle
  7161 ;;		_main
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text36
  7166   0035C4                     __ptext36:
  7167                           	callstack 0
  7168   0035C4                     ___fltol:
  7169                           	callstack 23
  7170   0035C4  345F               	rlcf	(___fltol@f1+2)^0,w,c
  7171   0035C6  3460               	rlcf	(___fltol@f1+3)^0,w,c
  7172   0035C8  6E66               	movwf	___fltol@exp1^0,c
  7173   0035CA  5066               	movf	___fltol@exp1^0,w,c
  7174   0035CC  A4D8               	btfss	status,2,c
  7175   0035CE  EFEB  F01A         	goto	u9591
  7176   0035D2  EFED  F01A         	goto	u9590
  7177   0035D6                     u9591:
  7178   0035D6  EFF7  F01A         	goto	l8964
  7179   0035DA                     u9590:
  7180   0035DA                     l8960:
  7181   0035DA  0E00               	movlw	0
  7182   0035DC  6E5D               	movwf	?___fltol^0,c
  7183   0035DE  0E00               	movlw	0
  7184   0035E0  6E5E               	movwf	(?___fltol+1)^0,c
  7185   0035E2  0E00               	movlw	0
  7186   0035E4  6E5F               	movwf	(?___fltol+2)^0,c
  7187   0035E6  0E00               	movlw	0
  7188   0035E8  6E60               	movwf	(?___fltol+3)^0,c
  7189   0035EA  EF64  F01B         	goto	l1661
  7190   0035EE                     l8964:
  7191   0035EE  C05D  F061         	movff	___fltol@f1,??___fltol
  7192   0035F2  C05E  F062         	movff	___fltol@f1+1,??___fltol+1
  7193   0035F6  C05F  F063         	movff	___fltol@f1+2,??___fltol+2
  7194   0035FA  C060  F064         	movff	___fltol@f1+3,??___fltol+3
  7195   0035FE  0E20               	movlw	32
  7196   003600  EF07  F01B         	goto	u9600
  7197   003604                     u9605:
  7198   003604  90D8               	bcf	status,0,c
  7199   003606  3264               	rrcf	(??___fltol+3)^0,f,c
  7200   003608  3263               	rrcf	(??___fltol+2)^0,f,c
  7201   00360A  3262               	rrcf	(??___fltol+1)^0,f,c
  7202   00360C  3261               	rrcf	??___fltol^0,f,c
  7203   00360E                     u9600:
  7204   00360E  2EE8               	decfsz	wreg,f,c
  7205   003610  EF02  F01B         	goto	u9605
  7206   003614  5061               	movf	??___fltol^0,w,c
  7207   003616  6E65               	movwf	___fltol@sign1^0,c
  7208   003618  8E5F               	bsf	(___fltol@f1+2)^0,7,c
  7209   00361A  0EFF               	movlw	255
  7210   00361C  165D               	andwf	___fltol@f1^0,f,c
  7211   00361E  0EFF               	movlw	255
  7212   003620  165E               	andwf	(___fltol@f1+1)^0,f,c
  7213   003622  0EFF               	movlw	255
  7214   003624  165F               	andwf	(___fltol@f1+2)^0,f,c
  7215   003626  0E00               	movlw	0
  7216   003628  1660               	andwf	(___fltol@f1+3)^0,f,c
  7217   00362A  0E96               	movlw	150
  7218   00362C  5E66               	subwf	___fltol@exp1^0,f,c
  7219   00362E  BE66               	btfsc	___fltol@exp1^0,7,c
  7220   003630  EF1E  F01B         	goto	u9610
  7221   003634  EF1C  F01B         	goto	u9611
  7222   003638                     u9611:
  7223   003638  EF34  F01B         	goto	l8984
  7224   00363C                     u9610:
  7225   00363C  5066               	movf	___fltol@exp1^0,w,c
  7226   00363E  0A80               	xorlw	128
  7227   003640  0F97               	addlw	151
  7228   003642  B0D8               	btfsc	status,0,c
  7229   003644  EF26  F01B         	goto	u9621
  7230   003648  EF28  F01B         	goto	u9620
  7231   00364C                     u9621:
  7232   00364C  EF2A  F01B         	goto	l8980
  7233   003650                     u9620:
  7234   003650  EFED  F01A         	goto	l8960
  7235   003654                     l8980:
  7236   003654  90D8               	bcf	status,0,c
  7237   003656  3260               	rrcf	(___fltol@f1+3)^0,f,c
  7238   003658  325F               	rrcf	(___fltol@f1+2)^0,f,c
  7239   00365A  325E               	rrcf	(___fltol@f1+1)^0,f,c
  7240   00365C  325D               	rrcf	___fltol@f1^0,f,c
  7241   00365E  3E66               	incfsz	___fltol@exp1^0,f,c
  7242   003660  EF2A  F01B         	goto	l8980
  7243   003664  EF4C  F01B         	goto	l8994
  7244   003668                     l8984:
  7245   003668  0E1F               	movlw	31
  7246   00366A  6466               	cpfsgt	___fltol@exp1^0,c
  7247   00366C  EF3A  F01B         	goto	u9631
  7248   003670  EF3C  F01B         	goto	u9630
  7249   003674                     u9631:
  7250   003674  EF44  F01B         	goto	l8992
  7251   003678                     u9630:
  7252   003678  EFED  F01A         	goto	l8960
  7253   00367C                     l8990:
  7254   00367C  90D8               	bcf	status,0,c
  7255   00367E  365D               	rlcf	___fltol@f1^0,f,c
  7256   003680  365E               	rlcf	(___fltol@f1+1)^0,f,c
  7257   003682  365F               	rlcf	(___fltol@f1+2)^0,f,c
  7258   003684  3660               	rlcf	(___fltol@f1+3)^0,f,c
  7259   003686  0666               	decf	___fltol@exp1^0,f,c
  7260   003688                     l8992:
  7261   003688  5066               	movf	___fltol@exp1^0,w,c
  7262   00368A  A4D8               	btfss	status,2,c
  7263   00368C  EF4A  F01B         	goto	u9641
  7264   003690  EF4C  F01B         	goto	u9640
  7265   003694                     u9641:
  7266   003694  EF3E  F01B         	goto	l8990
  7267   003698                     u9640:
  7268   003698                     l8994:
  7269   003698  5065               	movf	___fltol@sign1^0,w,c
  7270   00369A  B4D8               	btfsc	status,2,c
  7271   00369C  EF52  F01B         	goto	u9651
  7272   0036A0  EF54  F01B         	goto	u9650
  7273   0036A4                     u9651:
  7274   0036A4  EF5C  F01B         	goto	l8998
  7275   0036A8                     u9650:
  7276   0036A8  1E60               	comf	(___fltol@f1+3)^0,f,c
  7277   0036AA  1E5F               	comf	(___fltol@f1+2)^0,f,c
  7278   0036AC  1E5E               	comf	(___fltol@f1+1)^0,f,c
  7279   0036AE  6C5D               	negf	___fltol@f1^0,c
  7280   0036B0  0E00               	movlw	0
  7281   0036B2  225E               	addwfc	(___fltol@f1+1)^0,f,c
  7282   0036B4  225F               	addwfc	(___fltol@f1+2)^0,f,c
  7283   0036B6  2260               	addwfc	(___fltol@f1+3)^0,f,c
  7284   0036B8                     l8998:
  7285   0036B8  C05D  F05D         	movff	___fltol@f1,?___fltol
  7286   0036BC  C05E  F05E         	movff	___fltol@f1+1,?___fltol+1
  7287   0036C0  C05F  F05F         	movff	___fltol@f1+2,?___fltol+2
  7288   0036C4  C060  F060         	movff	___fltol@f1+3,?___fltol+3
  7289   0036C8                     l1661:
  7290   0036C8  0012               	return		;funcret
  7291   0036CA                     __end_of___fltol:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function ___flmul *****************
  7295 ;; Defined at:
  7296 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  b               4   26[COMRAM] long 
  7299 ;;  a               4   30[COMRAM] long 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  prod            4   45[COMRAM] struct .
  7302 ;;  grs             4   40[COMRAM] unsigned long 
  7303 ;;  temp            2   49[COMRAM] struct .
  7304 ;;  bexp            1   44[COMRAM] unsigned char 
  7305 ;;  aexp            1   39[COMRAM] unsigned char 
  7306 ;;  sign            1   38[COMRAM] unsigned char 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  4   26[COMRAM] unsigned char 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0, prodl, prodh
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;Total ram usage:       25 bytes
  7321 ;; Hardware stack levels used: 1
  7322 ;; Hardware stack levels required when called: 4
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_CCP_Init
  7327 ;;		_CCP_PWM_set_DutyCycle
  7328 ;;		_main
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text37
  7333   001A7E                     __ptext37:
  7334                           	callstack 0
  7335   001A7E                     ___flmul:
  7336                           	callstack 23
  7337   001A7E  501E               	movf	(___flmul@b+3)^0,w,c
  7338   001A80  0B80               	andlw	128
  7339   001A82  6E27               	movwf	___flmul@sign^0,c
  7340   001A84  501E               	movf	(___flmul@b+3)^0,w,c
  7341   001A86  241E               	addwf	(___flmul@b+3)^0,w,c
  7342   001A88  6E2D               	movwf	___flmul@bexp^0,c
  7343   001A8A  AE1D               	btfss	(___flmul@b+2)^0,7,c
  7344   001A8C  EF4A  F00D         	goto	u9401
  7345   001A90  EF4C  F00D         	goto	u9400
  7346   001A94                     u9401:
  7347   001A94  EF4D  F00D         	goto	l8834
  7348   001A98                     u9400:
  7349   001A98  802D               	bsf	___flmul@bexp^0,0,c
  7350   001A9A                     l8834:
  7351   001A9A  502D               	movf	___flmul@bexp^0,w,c
  7352   001A9C  B4D8               	btfsc	status,2,c
  7353   001A9E  EF53  F00D         	goto	u9411
  7354   001AA2  EF55  F00D         	goto	u9410
  7355   001AA6                     u9411:
  7356   001AA6  EF68  F00D         	goto	l8842
  7357   001AAA                     u9410:
  7358   001AAA  282D               	incf	___flmul@bexp^0,w,c
  7359   001AAC  A4D8               	btfss	status,2,c
  7360   001AAE  EF5B  F00D         	goto	u9421
  7361   001AB2  EF5D  F00D         	goto	u9420
  7362   001AB6                     u9421:
  7363   001AB6  EF65  F00D         	goto	l8840
  7364   001ABA                     u9420:
  7365   001ABA  0E00               	movlw	0
  7366   001ABC  6E1B               	movwf	___flmul@b^0,c
  7367   001ABE  0E00               	movlw	0
  7368   001AC0  6E1C               	movwf	(___flmul@b+1)^0,c
  7369   001AC2  0E00               	movlw	0
  7370   001AC4  6E1D               	movwf	(___flmul@b+2)^0,c
  7371   001AC6  0E00               	movlw	0
  7372   001AC8  6E1E               	movwf	(___flmul@b+3)^0,c
  7373   001ACA                     l8840:
  7374   001ACA  8E1D               	bsf	(___flmul@b+2)^0,7,c
  7375   001ACC  EF70  F00D         	goto	l8844
  7376   001AD0                     l8842:
  7377   001AD0  0E00               	movlw	0
  7378   001AD2  6E1B               	movwf	___flmul@b^0,c
  7379   001AD4  0E00               	movlw	0
  7380   001AD6  6E1C               	movwf	(___flmul@b+1)^0,c
  7381   001AD8  0E00               	movlw	0
  7382   001ADA  6E1D               	movwf	(___flmul@b+2)^0,c
  7383   001ADC  0E00               	movlw	0
  7384   001ADE  6E1E               	movwf	(___flmul@b+3)^0,c
  7385   001AE0                     l8844:
  7386   001AE0  5022               	movf	(___flmul@a+3)^0,w,c
  7387   001AE2  0B80               	andlw	128
  7388   001AE4  1A27               	xorwf	___flmul@sign^0,f,c
  7389   001AE6  5022               	movf	(___flmul@a+3)^0,w,c
  7390   001AE8  2422               	addwf	(___flmul@a+3)^0,w,c
  7391   001AEA  6E28               	movwf	___flmul@aexp^0,c
  7392   001AEC  AE21               	btfss	(___flmul@a+2)^0,7,c
  7393   001AEE  EF7B  F00D         	goto	u9431
  7394   001AF2  EF7D  F00D         	goto	u9430
  7395   001AF6                     u9431:
  7396   001AF6  EF7E  F00D         	goto	l8852
  7397   001AFA                     u9430:
  7398   001AFA  8028               	bsf	___flmul@aexp^0,0,c
  7399   001AFC                     l8852:
  7400   001AFC  5028               	movf	___flmul@aexp^0,w,c
  7401   001AFE  B4D8               	btfsc	status,2,c
  7402   001B00  EF84  F00D         	goto	u9441
  7403   001B04  EF86  F00D         	goto	u9440
  7404   001B08                     u9441:
  7405   001B08  EF99  F00D         	goto	l8860
  7406   001B0C                     u9440:
  7407   001B0C  2828               	incf	___flmul@aexp^0,w,c
  7408   001B0E  A4D8               	btfss	status,2,c
  7409   001B10  EF8C  F00D         	goto	u9451
  7410   001B14  EF8E  F00D         	goto	u9450
  7411   001B18                     u9451:
  7412   001B18  EF96  F00D         	goto	l8858
  7413   001B1C                     u9450:
  7414   001B1C  0E00               	movlw	0
  7415   001B1E  6E1F               	movwf	___flmul@a^0,c
  7416   001B20  0E00               	movlw	0
  7417   001B22  6E20               	movwf	(___flmul@a+1)^0,c
  7418   001B24  0E00               	movlw	0
  7419   001B26  6E21               	movwf	(___flmul@a+2)^0,c
  7420   001B28  0E00               	movlw	0
  7421   001B2A  6E22               	movwf	(___flmul@a+3)^0,c
  7422   001B2C                     l8858:
  7423   001B2C  8E21               	bsf	(___flmul@a+2)^0,7,c
  7424   001B2E  EFA1  F00D         	goto	l1978
  7425   001B32                     l8860:
  7426   001B32  0E00               	movlw	0
  7427   001B34  6E1F               	movwf	___flmul@a^0,c
  7428   001B36  0E00               	movlw	0
  7429   001B38  6E20               	movwf	(___flmul@a+1)^0,c
  7430   001B3A  0E00               	movlw	0
  7431   001B3C  6E21               	movwf	(___flmul@a+2)^0,c
  7432   001B3E  0E00               	movlw	0
  7433   001B40  6E22               	movwf	(___flmul@a+3)^0,c
  7434   001B42                     l1978:
  7435   001B42  5028               	movf	___flmul@aexp^0,w,c
  7436   001B44  B4D8               	btfsc	status,2,c
  7437   001B46  EFA7  F00D         	goto	u9461
  7438   001B4A  EFA9  F00D         	goto	u9460
  7439   001B4E                     u9461:
  7440   001B4E  EFB1  F00D         	goto	l8864
  7441   001B52                     u9460:
  7442   001B52  502D               	movf	___flmul@bexp^0,w,c
  7443   001B54  A4D8               	btfss	status,2,c
  7444   001B56  EFAF  F00D         	goto	u9471
  7445   001B5A  EFB1  F00D         	goto	u9470
  7446   001B5E                     u9471:
  7447   001B5E  EFBB  F00D         	goto	l8868
  7448   001B62                     u9470:
  7449   001B62                     l8864:
  7450   001B62  0E00               	movlw	0
  7451   001B64  6E1B               	movwf	?___flmul^0,c
  7452   001B66  0E00               	movlw	0
  7453   001B68  6E1C               	movwf	(?___flmul+1)^0,c
  7454   001B6A  0E00               	movlw	0
  7455   001B6C  6E1D               	movwf	(?___flmul+2)^0,c
  7456   001B6E  0E00               	movlw	0
  7457   001B70  6E1E               	movwf	(?___flmul+3)^0,c
  7458   001B72  EF53  F00F         	goto	l1982
  7459   001B76                     l8868:
  7460   001B76  5021               	movf	(___flmul@a+2)^0,w,c
  7461   001B78  021B               	mulwf	___flmul@b^0,c
  7462   001B7A  CFF3 F032          	movff	prodl,___flmul@temp
  7463   001B7E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7464   001B82  5032               	movf	___flmul@temp^0,w,c
  7465   001B84  6E29               	movwf	___flmul@grs^0,c
  7466   001B86  6A2A               	clrf	(___flmul@grs+1)^0,c
  7467   001B88  6A2B               	clrf	(___flmul@grs+2)^0,c
  7468   001B8A  6A2C               	clrf	(___flmul@grs+3)^0,c
  7469   001B8C  5033               	movf	(___flmul@temp+1)^0,w,c
  7470   001B8E  6E2E               	movwf	___flmul@prod^0,c
  7471   001B90  6A2F               	clrf	(___flmul@prod+1)^0,c
  7472   001B92  6A30               	clrf	(___flmul@prod+2)^0,c
  7473   001B94  6A31               	clrf	(___flmul@prod+3)^0,c
  7474   001B96  5020               	movf	(___flmul@a+1)^0,w,c
  7475   001B98  021C               	mulwf	(___flmul@b+1)^0,c
  7476   001B9A  CFF3 F032          	movff	prodl,___flmul@temp
  7477   001B9E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7478   001BA2  5032               	movf	___flmul@temp^0,w,c
  7479   001BA4  2629               	addwf	___flmul@grs^0,f,c
  7480   001BA6  0E00               	movlw	0
  7481   001BA8  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7482   001BAA  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7483   001BAC  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7484   001BAE  5033               	movf	(___flmul@temp+1)^0,w,c
  7485   001BB0  262E               	addwf	___flmul@prod^0,f,c
  7486   001BB2  0E00               	movlw	0
  7487   001BB4  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7488   001BB6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7489   001BB8  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7490   001BBA  501F               	movf	___flmul@a^0,w,c
  7491   001BBC  021D               	mulwf	(___flmul@b+2)^0,c
  7492   001BBE  CFF3 F032          	movff	prodl,___flmul@temp
  7493   001BC2  CFF4 F033          	movff	prodh,___flmul@temp+1
  7494   001BC6  5032               	movf	___flmul@temp^0,w,c
  7495   001BC8  2629               	addwf	___flmul@grs^0,f,c
  7496   001BCA  0E00               	movlw	0
  7497   001BCC  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7498   001BCE  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7499   001BD0  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7500   001BD2  5033               	movf	(___flmul@temp+1)^0,w,c
  7501   001BD4  262E               	addwf	___flmul@prod^0,f,c
  7502   001BD6  0E00               	movlw	0
  7503   001BD8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7504   001BDA  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7505   001BDC  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7506   001BDE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  7507   001BE2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  7508   001BE6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  7509   001BEA  6A29               	clrf	___flmul@grs^0,c
  7510   001BEC  501F               	movf	___flmul@a^0,w,c
  7511   001BEE  021C               	mulwf	(___flmul@b+1)^0,c
  7512   001BF0  CFF3 F032          	movff	prodl,___flmul@temp
  7513   001BF4  CFF4 F033          	movff	prodh,___flmul@temp+1
  7514   001BF8  5032               	movf	___flmul@temp^0,w,c
  7515   001BFA  2629               	addwf	___flmul@grs^0,f,c
  7516   001BFC  5033               	movf	(___flmul@temp+1)^0,w,c
  7517   001BFE  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7518   001C00  0E00               	movlw	0
  7519   001C02  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7520   001C04  0E00               	movlw	0
  7521   001C06  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7522   001C08  5020               	movf	(___flmul@a+1)^0,w,c
  7523   001C0A  021B               	mulwf	___flmul@b^0,c
  7524   001C0C  CFF3 F032          	movff	prodl,___flmul@temp
  7525   001C10  CFF4 F033          	movff	prodh,___flmul@temp+1
  7526   001C14  5032               	movf	___flmul@temp^0,w,c
  7527   001C16  2629               	addwf	___flmul@grs^0,f,c
  7528   001C18  5033               	movf	(___flmul@temp+1)^0,w,c
  7529   001C1A  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7530   001C1C  0E00               	movlw	0
  7531   001C1E  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7532   001C20  0E00               	movlw	0
  7533   001C22  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7534   001C24  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  7535   001C28  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  7536   001C2C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  7537   001C30  6A29               	clrf	___flmul@grs^0,c
  7538   001C32  501F               	movf	___flmul@a^0,w,c
  7539   001C34  021B               	mulwf	___flmul@b^0,c
  7540   001C36  CFF3 F032          	movff	prodl,___flmul@temp
  7541   001C3A  CFF4 F033          	movff	prodh,___flmul@temp+1
  7542   001C3E  5032               	movf	___flmul@temp^0,w,c
  7543   001C40  2629               	addwf	___flmul@grs^0,f,c
  7544   001C42  5033               	movf	(___flmul@temp+1)^0,w,c
  7545   001C44  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7546   001C46  0E00               	movlw	0
  7547   001C48  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7548   001C4A  0E00               	movlw	0
  7549   001C4C  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7550   001C4E  5021               	movf	(___flmul@a+2)^0,w,c
  7551   001C50  021C               	mulwf	(___flmul@b+1)^0,c
  7552   001C52  CFF3 F032          	movff	prodl,___flmul@temp
  7553   001C56  CFF4 F033          	movff	prodh,___flmul@temp+1
  7554   001C5A  5032               	movf	___flmul@temp^0,w,c
  7555   001C5C  262E               	addwf	___flmul@prod^0,f,c
  7556   001C5E  5033               	movf	(___flmul@temp+1)^0,w,c
  7557   001C60  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7558   001C62  0E00               	movlw	0
  7559   001C64  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7560   001C66  0E00               	movlw	0
  7561   001C68  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7562   001C6A  5020               	movf	(___flmul@a+1)^0,w,c
  7563   001C6C  021D               	mulwf	(___flmul@b+2)^0,c
  7564   001C6E  CFF3 F032          	movff	prodl,___flmul@temp
  7565   001C72  CFF4 F033          	movff	prodh,___flmul@temp+1
  7566   001C76  5032               	movf	___flmul@temp^0,w,c
  7567   001C78  262E               	addwf	___flmul@prod^0,f,c
  7568   001C7A  5033               	movf	(___flmul@temp+1)^0,w,c
  7569   001C7C  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7570   001C7E  0E00               	movlw	0
  7571   001C80  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7572   001C82  0E00               	movlw	0
  7573   001C84  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7574   001C86  5021               	movf	(___flmul@a+2)^0,w,c
  7575   001C88  021D               	mulwf	(___flmul@b+2)^0,c
  7576   001C8A  CFF3 F032          	movff	prodl,___flmul@temp
  7577   001C8E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7578   001C92  5032               	movf	___flmul@temp^0,w,c
  7579   001C94  6E23               	movwf	??___flmul^0,c
  7580   001C96  5033               	movf	(___flmul@temp+1)^0,w,c
  7581   001C98  6E24               	movwf	(??___flmul+1)^0,c
  7582   001C9A  6A25               	clrf	(??___flmul+2)^0,c
  7583   001C9C  6A26               	clrf	(??___flmul+3)^0,c
  7584   001C9E  C025  F026         	movff	??___flmul+2,??___flmul+3
  7585   001CA2  C024  F025         	movff	??___flmul+1,??___flmul+2
  7586   001CA6  C023  F024         	movff	??___flmul,??___flmul+1
  7587   001CAA  6A23               	clrf	??___flmul^0,c
  7588   001CAC  5023               	movf	??___flmul^0,w,c
  7589   001CAE  262E               	addwf	___flmul@prod^0,f,c
  7590   001CB0  5024               	movf	(??___flmul+1)^0,w,c
  7591   001CB2  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7592   001CB4  5025               	movf	(??___flmul+2)^0,w,c
  7593   001CB6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7594   001CB8  5026               	movf	(??___flmul+3)^0,w,c
  7595   001CBA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7596   001CBC  C029  F023         	movff	___flmul@grs,??___flmul
  7597   001CC0  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
  7598   001CC4  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
  7599   001CC8  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
  7600   001CCC  0E19               	movlw	25
  7601   001CCE  EF6E  F00E         	goto	u9480
  7602   001CD2                     u9485:
  7603   001CD2  90D8               	bcf	status,0,c
  7604   001CD4  3226               	rrcf	(??___flmul+3)^0,f,c
  7605   001CD6  3225               	rrcf	(??___flmul+2)^0,f,c
  7606   001CD8  3224               	rrcf	(??___flmul+1)^0,f,c
  7607   001CDA  3223               	rrcf	??___flmul^0,f,c
  7608   001CDC                     u9480:
  7609   001CDC  2EE8               	decfsz	wreg,f,c
  7610   001CDE  EF69  F00E         	goto	u9485
  7611   001CE2  5023               	movf	??___flmul^0,w,c
  7612   001CE4  262E               	addwf	___flmul@prod^0,f,c
  7613   001CE6  5024               	movf	(??___flmul+1)^0,w,c
  7614   001CE8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7615   001CEA  5025               	movf	(??___flmul+2)^0,w,c
  7616   001CEC  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7617   001CEE  5026               	movf	(??___flmul+3)^0,w,c
  7618   001CF0  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7619   001CF2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  7620   001CF6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  7621   001CFA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  7622   001CFE  6A29               	clrf	___flmul@grs^0,c
  7623   001D00  5028               	movf	___flmul@aexp^0,w,c
  7624   001D02  C02D  F023         	movff	___flmul@bexp,??___flmul
  7625   001D06  6A24               	clrf	(??___flmul+1)^0,c
  7626   001D08  2623               	addwf	??___flmul^0,f,c
  7627   001D0A  0E00               	movlw	0
  7628   001D0C  2224               	addwfc	(??___flmul+1)^0,f,c
  7629   001D0E  0E82               	movlw	130
  7630   001D10  2423               	addwf	??___flmul^0,w,c
  7631   001D12  6E32               	movwf	___flmul@temp^0,c
  7632   001D14  0EFF               	movlw	255
  7633   001D16  2024               	addwfc	(??___flmul+1)^0,w,c
  7634   001D18  6E33               	movwf	(___flmul@temp+1)^0,c
  7635   001D1A  EFA4  F00E         	goto	l8916
  7636   001D1E                     l8910:
  7637   001D1E  90D8               	bcf	status,0,c
  7638   001D20  362E               	rlcf	___flmul@prod^0,f,c
  7639   001D22  362F               	rlcf	(___flmul@prod+1)^0,f,c
  7640   001D24  3630               	rlcf	(___flmul@prod+2)^0,f,c
  7641   001D26  3631               	rlcf	(___flmul@prod+3)^0,f,c
  7642   001D28  AE2C               	btfss	(___flmul@grs+3)^0,7,c
  7643   001D2A  EF99  F00E         	goto	u9491
  7644   001D2E  EF9B  F00E         	goto	u9490
  7645   001D32                     u9491:
  7646   001D32  EF9C  F00E         	goto	l1985
  7647   001D36                     u9490:
  7648   001D36  802E               	bsf	___flmul@prod^0,0,c
  7649   001D38                     l1985:
  7650   001D38  90D8               	bcf	status,0,c
  7651   001D3A  3629               	rlcf	___flmul@grs^0,f,c
  7652   001D3C  362A               	rlcf	(___flmul@grs+1)^0,f,c
  7653   001D3E  362B               	rlcf	(___flmul@grs+2)^0,f,c
  7654   001D40  362C               	rlcf	(___flmul@grs+3)^0,f,c
  7655   001D42  0632               	decf	___flmul@temp^0,f,c
  7656   001D44  A0D8               	btfss	status,0,c
  7657   001D46  0633               	decf	(___flmul@temp+1)^0,f,c
  7658   001D48                     l8916:
  7659   001D48  AE30               	btfss	(___flmul@prod+2)^0,7,c
  7660   001D4A  EFA9  F00E         	goto	u9501
  7661   001D4E  EFAB  F00E         	goto	u9500
  7662   001D52                     u9501:
  7663   001D52  EF8F  F00E         	goto	l8910
  7664   001D56                     u9500:
  7665   001D56  0E00               	movlw	0
  7666   001D58  6E28               	movwf	___flmul@aexp^0,c
  7667   001D5A  AE2C               	btfss	(___flmul@grs+3)^0,7,c
  7668   001D5C  EFB2  F00E         	goto	u9511
  7669   001D60  EFB4  F00E         	goto	u9510
  7670   001D64                     u9511:
  7671   001D64  EFD8  F00E         	goto	l1987
  7672   001D68                     u9510:
  7673   001D68  0EFF               	movlw	255
  7674   001D6A  1429               	andwf	___flmul@grs^0,w,c
  7675   001D6C  6E23               	movwf	??___flmul^0,c
  7676   001D6E  0EFF               	movlw	255
  7677   001D70  142A               	andwf	(___flmul@grs+1)^0,w,c
  7678   001D72  6E24               	movwf	(??___flmul+1)^0,c
  7679   001D74  0EFF               	movlw	255
  7680   001D76  142B               	andwf	(___flmul@grs+2)^0,w,c
  7681   001D78  6E25               	movwf	(??___flmul+2)^0,c
  7682   001D7A  0E7F               	movlw	127
  7683   001D7C  142C               	andwf	(___flmul@grs+3)^0,w,c
  7684   001D7E  6E26               	movwf	(??___flmul+3)^0,c
  7685   001D80  5023               	movf	??___flmul^0,w,c
  7686   001D82  1024               	iorwf	(??___flmul+1)^0,w,c
  7687   001D84  1025               	iorwf	(??___flmul+2)^0,w,c
  7688   001D86  1026               	iorwf	(??___flmul+3)^0,w,c
  7689   001D88  B4D8               	btfsc	status,2,c
  7690   001D8A  EFC9  F00E         	goto	u9521
  7691   001D8E  EFCB  F00E         	goto	u9520
  7692   001D92                     u9521:
  7693   001D92  EFCF  F00E         	goto	l1988
  7694   001D96                     u9520:
  7695   001D96                     l8924:
  7696   001D96  0E01               	movlw	1
  7697   001D98  6E28               	movwf	___flmul@aexp^0,c
  7698   001D9A  EFD8  F00E         	goto	l1987
  7699   001D9E                     l1988:
  7700   001D9E  A02E               	btfss	___flmul@prod^0,0,c
  7701   001DA0  EFD4  F00E         	goto	u9531
  7702   001DA4  EFD6  F00E         	goto	u9530
  7703   001DA8                     u9531:
  7704   001DA8  EFD8  F00E         	goto	l1987
  7705   001DAC                     u9530:
  7706   001DAC  EFCB  F00E         	goto	l8924
  7707   001DB0                     l1987:
  7708   001DB0  5028               	movf	___flmul@aexp^0,w,c
  7709   001DB2  B4D8               	btfsc	status,2,c
  7710   001DB4  EFDE  F00E         	goto	u9541
  7711   001DB8  EFE0  F00E         	goto	u9540
  7712   001DBC                     u9541:
  7713   001DBC  EF04  F00F         	goto	l8936
  7714   001DC0                     u9540:
  7715   001DC0  0E01               	movlw	1
  7716   001DC2  262E               	addwf	___flmul@prod^0,f,c
  7717   001DC4  0E00               	movlw	0
  7718   001DC6  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7719   001DC8  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7720   001DCA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7721   001DCC  A031               	btfss	(___flmul@prod+3)^0,0,c
  7722   001DCE  EFEB  F00E         	goto	u9551
  7723   001DD2  EFED  F00E         	goto	u9550
  7724   001DD6                     u9551:
  7725   001DD6  EF04  F00F         	goto	l8936
  7726   001DDA                     u9550:
  7727   001DDA  C02E  F023         	movff	___flmul@prod,??___flmul
  7728   001DDE  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  7729   001DE2  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  7730   001DE6  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  7731   001DEA  3426               	rlcf	(??___flmul+3)^0,w,c
  7732   001DEC  3226               	rrcf	(??___flmul+3)^0,f,c
  7733   001DEE  3225               	rrcf	(??___flmul+2)^0,f,c
  7734   001DF0  3224               	rrcf	(??___flmul+1)^0,f,c
  7735   001DF2  3223               	rrcf	??___flmul^0,f,c
  7736   001DF4  C023  F02E         	movff	??___flmul,___flmul@prod
  7737   001DF8  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  7738   001DFC  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  7739   001E00  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  7740   001E04  4A32               	infsnz	___flmul@temp^0,f,c
  7741   001E06  2A33               	incf	(___flmul@temp+1)^0,f,c
  7742   001E08                     l8936:
  7743   001E08  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7744   001E0A  EF0F  F00F         	goto	u9561
  7745   001E0E  5033               	movf	(___flmul@temp+1)^0,w,c
  7746   001E10  E108               	bnz	u9560
  7747   001E12  2832               	incf	___flmul@temp^0,w,c
  7748   001E14  A0D8               	btfss	status,0,c
  7749   001E16  EF0F  F00F         	goto	u9561
  7750   001E1A  EF11  F00F         	goto	u9560
  7751   001E1E                     u9561:
  7752   001E1E  EF1B  F00F         	goto	l8940
  7753   001E22                     u9560:
  7754   001E22  0E00               	movlw	0
  7755   001E24  6E2E               	movwf	___flmul@prod^0,c
  7756   001E26  0E00               	movlw	0
  7757   001E28  6E2F               	movwf	(___flmul@prod+1)^0,c
  7758   001E2A  0E80               	movlw	128
  7759   001E2C  6E30               	movwf	(___flmul@prod+2)^0,c
  7760   001E2E  0E7F               	movlw	127
  7761   001E30  6E31               	movwf	(___flmul@prod+3)^0,c
  7762   001E32  EF49  F00F         	goto	l8952
  7763   001E36                     l8940:
  7764   001E36  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7765   001E38  EF28  F00F         	goto	u9570
  7766   001E3C  5033               	movf	(___flmul@temp+1)^0,w,c
  7767   001E3E  E106               	bnz	u9571
  7768   001E40  0432               	decf	___flmul@temp^0,w,c
  7769   001E42  B0D8               	btfsc	status,0,c
  7770   001E44  EF26  F00F         	goto	u9571
  7771   001E48  EF28  F00F         	goto	u9570
  7772   001E4C                     u9571:
  7773   001E4C  EF34  F00F         	goto	l1995
  7774   001E50                     u9570:
  7775   001E50  0E00               	movlw	0
  7776   001E52  6E2E               	movwf	___flmul@prod^0,c
  7777   001E54  0E00               	movlw	0
  7778   001E56  6E2F               	movwf	(___flmul@prod+1)^0,c
  7779   001E58  0E00               	movlw	0
  7780   001E5A  6E30               	movwf	(___flmul@prod+2)^0,c
  7781   001E5C  0E00               	movlw	0
  7782   001E5E  6E31               	movwf	(___flmul@prod+3)^0,c
  7783   001E60  0E00               	movlw	0
  7784   001E62  6E27               	movwf	___flmul@sign^0,c
  7785   001E64  EF49  F00F         	goto	l8952
  7786   001E68                     l1995:
  7787   001E68  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  7788   001E6C  0EFF               	movlw	255
  7789   001E6E  162E               	andwf	___flmul@prod^0,f,c
  7790   001E70  0EFF               	movlw	255
  7791   001E72  162F               	andwf	(___flmul@prod+1)^0,f,c
  7792   001E74  0E7F               	movlw	127
  7793   001E76  1630               	andwf	(___flmul@prod+2)^0,f,c
  7794   001E78  0E00               	movlw	0
  7795   001E7A  1631               	andwf	(___flmul@prod+3)^0,f,c
  7796   001E7C  A02D               	btfss	___flmul@bexp^0,0,c
  7797   001E7E  EF43  F00F         	goto	u9581
  7798   001E82  EF45  F00F         	goto	u9580
  7799   001E86                     u9581:
  7800   001E86  EF46  F00F         	goto	l8950
  7801   001E8A                     u9580:
  7802   001E8A  8E30               	bsf	(___flmul@prod+2)^0,7,c
  7803   001E8C                     l8950:
  7804   001E8C  90D8               	bcf	status,0,c
  7805   001E8E  302D               	rrcf	___flmul@bexp^0,w,c
  7806   001E90  6E31               	movwf	(___flmul@prod+3)^0,c
  7807   001E92                     l8952:
  7808   001E92  5027               	movf	___flmul@sign^0,w,c
  7809   001E94  1231               	iorwf	(___flmul@prod+3)^0,f,c
  7810   001E96  C02E  F01B         	movff	___flmul@prod,?___flmul
  7811   001E9A  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  7812   001E9E  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  7813   001EA2  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  7814   001EA6                     l1982:
  7815   001EA6  0012               	return		;funcret
  7816   001EA8                     __end_of___flmul:
  7817                           	callstack 0
  7818                           
  7819 ;; *************** function ___fldiv *****************
  7820 ;; Defined at:
  7821 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;  b               4   51[COMRAM] unsigned char 
  7824 ;;  a               4   55[COMRAM] unsigned char 
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;  grs             4   70[COMRAM] unsigned long 
  7827 ;;  rem             4   63[COMRAM] unsigned long 
  7828 ;;  new_exp         2   68[COMRAM] short 
  7829 ;;  aexp            1   75[COMRAM] unsigned char 
  7830 ;;  bexp            1   74[COMRAM] unsigned char 
  7831 ;;  sign            1   67[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4   51[COMRAM] unsigned char 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7841 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7842 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;Total ram usage:       25 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 4
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_CCP_Init
  7852 ;;		_CCP_PWM_set_DutyCycle
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text38
  7857   001EA8                     __ptext38:
  7858                           	callstack 0
  7859   001EA8                     ___fldiv:
  7860                           	callstack 23
  7861   001EA8  5037               	movf	(___fldiv@b+3)^0,w,c
  7862   001EAA  0B80               	andlw	128
  7863   001EAC  6E44               	movwf	___fldiv@sign^0,c
  7864   001EAE  5037               	movf	(___fldiv@b+3)^0,w,c
  7865   001EB0  2437               	addwf	(___fldiv@b+3)^0,w,c
  7866   001EB2  6E4B               	movwf	___fldiv@bexp^0,c
  7867   001EB4  AE36               	btfss	(___fldiv@b+2)^0,7,c
  7868   001EB6  EF5F  F00F         	goto	u9171
  7869   001EBA  EF61  F00F         	goto	u9170
  7870   001EBE                     u9171:
  7871   001EBE  EF62  F00F         	goto	l8696
  7872   001EC2                     u9170:
  7873   001EC2  804B               	bsf	___fldiv@bexp^0,0,c
  7874   001EC4                     l8696:
  7875   001EC4  504B               	movf	___fldiv@bexp^0,w,c
  7876   001EC6  B4D8               	btfsc	status,2,c
  7877   001EC8  EF68  F00F         	goto	u9181
  7878   001ECC  EF6A  F00F         	goto	u9180
  7879   001ED0                     u9181:
  7880   001ED0  EF7F  F00F         	goto	l8706
  7881   001ED4                     u9180:
  7882   001ED4  284B               	incf	___fldiv@bexp^0,w,c
  7883   001ED6  A4D8               	btfss	status,2,c
  7884   001ED8  EF70  F00F         	goto	u9191
  7885   001EDC  EF72  F00F         	goto	u9190
  7886   001EE0                     u9191:
  7887   001EE0  EF7A  F00F         	goto	l8702
  7888   001EE4                     u9190:
  7889   001EE4  0E00               	movlw	0
  7890   001EE6  6E34               	movwf	___fldiv@b^0,c
  7891   001EE8  0E00               	movlw	0
  7892   001EEA  6E35               	movwf	(___fldiv@b+1)^0,c
  7893   001EEC  0E00               	movlw	0
  7894   001EEE  6E36               	movwf	(___fldiv@b+2)^0,c
  7895   001EF0  0E00               	movlw	0
  7896   001EF2  6E37               	movwf	(___fldiv@b+3)^0,c
  7897   001EF4                     l8702:
  7898   001EF4  8E36               	bsf	(___fldiv@b+2)^0,7,c
  7899   001EF6  0E00               	movlw	0
  7900   001EF8  6E37               	movwf	(___fldiv@b+3)^0,c
  7901   001EFA  EF87  F00F         	goto	l8708
  7902   001EFE                     l8706:
  7903   001EFE  0E00               	movlw	0
  7904   001F00  6E34               	movwf	___fldiv@b^0,c
  7905   001F02  0E00               	movlw	0
  7906   001F04  6E35               	movwf	(___fldiv@b+1)^0,c
  7907   001F06  0E00               	movlw	0
  7908   001F08  6E36               	movwf	(___fldiv@b+2)^0,c
  7909   001F0A  0E00               	movlw	0
  7910   001F0C  6E37               	movwf	(___fldiv@b+3)^0,c
  7911   001F0E                     l8708:
  7912   001F0E  503B               	movf	(___fldiv@a+3)^0,w,c
  7913   001F10  0B80               	andlw	128
  7914   001F12  1A44               	xorwf	___fldiv@sign^0,f,c
  7915   001F14  503B               	movf	(___fldiv@a+3)^0,w,c
  7916   001F16  243B               	addwf	(___fldiv@a+3)^0,w,c
  7917   001F18  6E4C               	movwf	___fldiv@aexp^0,c
  7918   001F1A  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  7919   001F1C  EF92  F00F         	goto	u9201
  7920   001F20  EF94  F00F         	goto	u9200
  7921   001F24                     u9201:
  7922   001F24  EF95  F00F         	goto	l8716
  7923   001F28                     u9200:
  7924   001F28  804C               	bsf	___fldiv@aexp^0,0,c
  7925   001F2A                     l8716:
  7926   001F2A  504C               	movf	___fldiv@aexp^0,w,c
  7927   001F2C  B4D8               	btfsc	status,2,c
  7928   001F2E  EF9B  F00F         	goto	u9211
  7929   001F32  EF9D  F00F         	goto	u9210
  7930   001F36                     u9211:
  7931   001F36  EFB2  F00F         	goto	l8726
  7932   001F3A                     u9210:
  7933   001F3A  284C               	incf	___fldiv@aexp^0,w,c
  7934   001F3C  A4D8               	btfss	status,2,c
  7935   001F3E  EFA3  F00F         	goto	u9221
  7936   001F42  EFA5  F00F         	goto	u9220
  7937   001F46                     u9221:
  7938   001F46  EFAD  F00F         	goto	l8722
  7939   001F4A                     u9220:
  7940   001F4A  0E00               	movlw	0
  7941   001F4C  6E38               	movwf	___fldiv@a^0,c
  7942   001F4E  0E00               	movlw	0
  7943   001F50  6E39               	movwf	(___fldiv@a+1)^0,c
  7944   001F52  0E00               	movlw	0
  7945   001F54  6E3A               	movwf	(___fldiv@a+2)^0,c
  7946   001F56  0E00               	movlw	0
  7947   001F58  6E3B               	movwf	(___fldiv@a+3)^0,c
  7948   001F5A                     l8722:
  7949   001F5A  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  7950   001F5C  0E00               	movlw	0
  7951   001F5E  6E3B               	movwf	(___fldiv@a+3)^0,c
  7952   001F60  EFBA  F00F         	goto	l8728
  7953   001F64                     l8726:
  7954   001F64  0E00               	movlw	0
  7955   001F66  6E38               	movwf	___fldiv@a^0,c
  7956   001F68  0E00               	movlw	0
  7957   001F6A  6E39               	movwf	(___fldiv@a+1)^0,c
  7958   001F6C  0E00               	movlw	0
  7959   001F6E  6E3A               	movwf	(___fldiv@a+2)^0,c
  7960   001F70  0E00               	movlw	0
  7961   001F72  6E3B               	movwf	(___fldiv@a+3)^0,c
  7962   001F74                     l8728:
  7963   001F74  5038               	movf	___fldiv@a^0,w,c
  7964   001F76  1039               	iorwf	(___fldiv@a+1)^0,w,c
  7965   001F78  103A               	iorwf	(___fldiv@a+2)^0,w,c
  7966   001F7A  103B               	iorwf	(___fldiv@a+3)^0,w,c
  7967   001F7C  A4D8               	btfss	status,2,c
  7968   001F7E  EFC3  F00F         	goto	u9231
  7969   001F82  EFC5  F00F         	goto	u9230
  7970   001F86                     u9231:
  7971   001F86  EFDD  F00F         	goto	l8740
  7972   001F8A                     u9230:
  7973   001F8A  0E00               	movlw	0
  7974   001F8C  6E34               	movwf	___fldiv@b^0,c
  7975   001F8E  0E00               	movlw	0
  7976   001F90  6E35               	movwf	(___fldiv@b+1)^0,c
  7977   001F92  0E00               	movlw	0
  7978   001F94  6E36               	movwf	(___fldiv@b+2)^0,c
  7979   001F96  0E00               	movlw	0
  7980   001F98  6E37               	movwf	(___fldiv@b+3)^0,c
  7981   001F9A  0E80               	movlw	128
  7982   001F9C  1236               	iorwf	(___fldiv@b+2)^0,f,c
  7983   001F9E  0E7F               	movlw	127
  7984   001FA0  1237               	iorwf	(___fldiv@b+3)^0,f,c
  7985   001FA2                     l8734:
  7986   001FA2  5044               	movf	___fldiv@sign^0,w,c
  7987   001FA4  1237               	iorwf	(___fldiv@b+3)^0,f,c
  7988   001FA6  C034  F034         	movff	___fldiv@b,?___fldiv
  7989   001FAA  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  7990   001FAE  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  7991   001FB2  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  7992   001FB6  EF20  F011         	goto	l1946
  7993   001FBA                     l8740:
  7994   001FBA  504B               	movf	___fldiv@bexp^0,w,c
  7995   001FBC  A4D8               	btfss	status,2,c
  7996   001FBE  EFE3  F00F         	goto	u9241
  7997   001FC2  EFE5  F00F         	goto	u9240
  7998   001FC6                     u9241:
  7999   001FC6  EFEF  F00F         	goto	l8748
  8000   001FCA                     u9240:
  8001   001FCA  0E00               	movlw	0
  8002   001FCC  6E34               	movwf	?___fldiv^0,c
  8003   001FCE  0E00               	movlw	0
  8004   001FD0  6E35               	movwf	(?___fldiv+1)^0,c
  8005   001FD2  0E00               	movlw	0
  8006   001FD4  6E36               	movwf	(?___fldiv+2)^0,c
  8007   001FD6  0E00               	movlw	0
  8008   001FD8  6E37               	movwf	(?___fldiv+3)^0,c
  8009   001FDA  EF20  F011         	goto	l1946
  8010   001FDE                     l8748:
  8011   001FDE  504C               	movf	___fldiv@aexp^0,w,c
  8012   001FE0  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  8013   001FE4  6A3D               	clrf	(??___fldiv+1)^0,c
  8014   001FE6  5E3C               	subwf	??___fldiv^0,f,c
  8015   001FE8  0E00               	movlw	0
  8016   001FEA  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  8017   001FEC  0E7F               	movlw	127
  8018   001FEE  243C               	addwf	??___fldiv^0,w,c
  8019   001FF0  6E45               	movwf	___fldiv@new_exp^0,c
  8020   001FF2  0E00               	movlw	0
  8021   001FF4  203D               	addwfc	(??___fldiv+1)^0,w,c
  8022   001FF6  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8023   001FF8  C034  F040         	movff	___fldiv@b,___fldiv@rem
  8024   001FFC  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  8025   002000  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  8026   002004  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  8027   002008  0E00               	movlw	0
  8028   00200A  6E34               	movwf	___fldiv@b^0,c
  8029   00200C  0E00               	movlw	0
  8030   00200E  6E35               	movwf	(___fldiv@b+1)^0,c
  8031   002010  0E00               	movlw	0
  8032   002012  6E36               	movwf	(___fldiv@b+2)^0,c
  8033   002014  0E00               	movlw	0
  8034   002016  6E37               	movwf	(___fldiv@b+3)^0,c
  8035   002018  0E00               	movlw	0
  8036   00201A  6E47               	movwf	___fldiv@grs^0,c
  8037   00201C  0E00               	movlw	0
  8038   00201E  6E48               	movwf	(___fldiv@grs+1)^0,c
  8039   002020  0E00               	movlw	0
  8040   002022  6E49               	movwf	(___fldiv@grs+2)^0,c
  8041   002024  0E00               	movlw	0
  8042   002026  6E4A               	movwf	(___fldiv@grs+3)^0,c
  8043   002028  0E00               	movlw	0
  8044   00202A  6E4C               	movwf	___fldiv@aexp^0,c
  8045   00202C  EF50  F010         	goto	l1948
  8046   002030                     l8758:
  8047   002030  504C               	movf	___fldiv@aexp^0,w,c
  8048   002032  B4D8               	btfsc	status,2,c
  8049   002034  EF1E  F010         	goto	u9251
  8050   002038  EF20  F010         	goto	u9250
  8051   00203C                     u9251:
  8052   00203C  EF37  F010         	goto	l8766
  8053   002040                     u9250:
  8054   002040  90D8               	bcf	status,0,c
  8055   002042  3640               	rlcf	___fldiv@rem^0,f,c
  8056   002044  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  8057   002046  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  8058   002048  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  8059   00204A  90D8               	bcf	status,0,c
  8060   00204C  3634               	rlcf	___fldiv@b^0,f,c
  8061   00204E  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8062   002050  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8063   002052  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8064   002054  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8065   002056  EF2F  F010         	goto	u9261
  8066   00205A  EF31  F010         	goto	u9260
  8067   00205E                     u9261:
  8068   00205E  EF32  F010         	goto	l1951
  8069   002062                     u9260:
  8070   002062  8034               	bsf	___fldiv@b^0,0,c
  8071   002064                     l1951:
  8072   002064  90D8               	bcf	status,0,c
  8073   002066  3647               	rlcf	___fldiv@grs^0,f,c
  8074   002068  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8075   00206A  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8076   00206C  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8077   00206E                     l8766:
  8078   00206E  5038               	movf	___fldiv@a^0,w,c
  8079   002070  5C40               	subwf	___fldiv@rem^0,w,c
  8080   002072  5039               	movf	(___fldiv@a+1)^0,w,c
  8081   002074  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  8082   002076  503A               	movf	(___fldiv@a+2)^0,w,c
  8083   002078  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  8084   00207A  503B               	movf	(___fldiv@a+3)^0,w,c
  8085   00207C  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  8086   00207E  A0D8               	btfss	status,0,c
  8087   002080  EF44  F010         	goto	u9271
  8088   002084  EF46  F010         	goto	u9270
  8089   002088                     u9271:
  8090   002088  EF4F  F010         	goto	l8772
  8091   00208C                     u9270:
  8092   00208C  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  8093   00208E  5038               	movf	___fldiv@a^0,w,c
  8094   002090  5E40               	subwf	___fldiv@rem^0,f,c
  8095   002092  5039               	movf	(___fldiv@a+1)^0,w,c
  8096   002094  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  8097   002096  503A               	movf	(___fldiv@a+2)^0,w,c
  8098   002098  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  8099   00209A  503B               	movf	(___fldiv@a+3)^0,w,c
  8100   00209C  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  8101   00209E                     l8772:
  8102   00209E  2A4C               	incf	___fldiv@aexp^0,f,c
  8103   0020A0                     l1948:
  8104   0020A0  0E19               	movlw	25
  8105   0020A2  644C               	cpfsgt	___fldiv@aexp^0,c
  8106   0020A4  EF56  F010         	goto	u9281
  8107   0020A8  EF58  F010         	goto	u9280
  8108   0020AC                     u9281:
  8109   0020AC  EF18  F010         	goto	l8758
  8110   0020B0                     u9280:
  8111   0020B0  5040               	movf	___fldiv@rem^0,w,c
  8112   0020B2  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  8113   0020B4  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  8114   0020B6  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  8115   0020B8  B4D8               	btfsc	status,2,c
  8116   0020BA  EF61  F010         	goto	u9291
  8117   0020BE  EF63  F010         	goto	u9290
  8118   0020C2                     u9291:
  8119   0020C2  EF7B  F010         	goto	l8784
  8120   0020C6                     u9290:
  8121   0020C6  8047               	bsf	___fldiv@grs^0,0,c
  8122   0020C8  EF7B  F010         	goto	l8784
  8123   0020CC                     l8778:
  8124   0020CC  90D8               	bcf	status,0,c
  8125   0020CE  3634               	rlcf	___fldiv@b^0,f,c
  8126   0020D0  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8127   0020D2  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8128   0020D4  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8129   0020D6  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8130   0020D8  EF70  F010         	goto	u9301
  8131   0020DC  EF72  F010         	goto	u9300
  8132   0020E0                     u9301:
  8133   0020E0  EF73  F010         	goto	l1957
  8134   0020E4                     u9300:
  8135   0020E4  8034               	bsf	___fldiv@b^0,0,c
  8136   0020E6                     l1957:
  8137   0020E6  90D8               	bcf	status,0,c
  8138   0020E8  3647               	rlcf	___fldiv@grs^0,f,c
  8139   0020EA  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8140   0020EC  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8141   0020EE  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8142   0020F0  0645               	decf	___fldiv@new_exp^0,f,c
  8143   0020F2  A0D8               	btfss	status,0,c
  8144   0020F4  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  8145   0020F6                     l8784:
  8146   0020F6  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8147   0020F8  EF80  F010         	goto	u9311
  8148   0020FC  EF82  F010         	goto	u9310
  8149   002100                     u9311:
  8150   002100  EF66  F010         	goto	l8778
  8151   002104                     u9310:
  8152   002104  0E00               	movlw	0
  8153   002106  6E4C               	movwf	___fldiv@aexp^0,c
  8154   002108  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8155   00210A  EF89  F010         	goto	u9321
  8156   00210E  EF8B  F010         	goto	u9320
  8157   002112                     u9321:
  8158   002112  EFAF  F010         	goto	l1959
  8159   002116                     u9320:
  8160   002116  0EFF               	movlw	255
  8161   002118  1447               	andwf	___fldiv@grs^0,w,c
  8162   00211A  6E3C               	movwf	??___fldiv^0,c
  8163   00211C  0EFF               	movlw	255
  8164   00211E  1448               	andwf	(___fldiv@grs+1)^0,w,c
  8165   002120  6E3D               	movwf	(??___fldiv+1)^0,c
  8166   002122  0EFF               	movlw	255
  8167   002124  1449               	andwf	(___fldiv@grs+2)^0,w,c
  8168   002126  6E3E               	movwf	(??___fldiv+2)^0,c
  8169   002128  0E7F               	movlw	127
  8170   00212A  144A               	andwf	(___fldiv@grs+3)^0,w,c
  8171   00212C  6E3F               	movwf	(??___fldiv+3)^0,c
  8172   00212E  503C               	movf	??___fldiv^0,w,c
  8173   002130  103D               	iorwf	(??___fldiv+1)^0,w,c
  8174   002132  103E               	iorwf	(??___fldiv+2)^0,w,c
  8175   002134  103F               	iorwf	(??___fldiv+3)^0,w,c
  8176   002136  B4D8               	btfsc	status,2,c
  8177   002138  EFA0  F010         	goto	u9331
  8178   00213C  EFA2  F010         	goto	u9330
  8179   002140                     u9331:
  8180   002140  EFA6  F010         	goto	l1960
  8181   002144                     u9330:
  8182   002144                     l8792:
  8183   002144  0E01               	movlw	1
  8184   002146  6E4C               	movwf	___fldiv@aexp^0,c
  8185   002148  EFAF  F010         	goto	l1959
  8186   00214C                     l1960:
  8187   00214C  A034               	btfss	___fldiv@b^0,0,c
  8188   00214E  EFAB  F010         	goto	u9341
  8189   002152  EFAD  F010         	goto	u9340
  8190   002156                     u9341:
  8191   002156  EFAF  F010         	goto	l1959
  8192   00215A                     u9340:
  8193   00215A  EFA2  F010         	goto	l8792
  8194   00215E                     l1959:
  8195   00215E  504C               	movf	___fldiv@aexp^0,w,c
  8196   002160  B4D8               	btfsc	status,2,c
  8197   002162  EFB5  F010         	goto	u9351
  8198   002166  EFB7  F010         	goto	u9350
  8199   00216A                     u9351:
  8200   00216A  EFDB  F010         	goto	l8804
  8201   00216E                     u9350:
  8202   00216E  0E01               	movlw	1
  8203   002170  2634               	addwf	___fldiv@b^0,f,c
  8204   002172  0E00               	movlw	0
  8205   002174  2235               	addwfc	(___fldiv@b+1)^0,f,c
  8206   002176  2236               	addwfc	(___fldiv@b+2)^0,f,c
  8207   002178  2237               	addwfc	(___fldiv@b+3)^0,f,c
  8208   00217A  A037               	btfss	(___fldiv@b+3)^0,0,c
  8209   00217C  EFC2  F010         	goto	u9361
  8210   002180  EFC4  F010         	goto	u9360
  8211   002184                     u9361:
  8212   002184  EFDB  F010         	goto	l8804
  8213   002188                     u9360:
  8214   002188  C034  F03C         	movff	___fldiv@b,??___fldiv
  8215   00218C  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  8216   002190  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  8217   002194  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  8218   002198  343F               	rlcf	(??___fldiv+3)^0,w,c
  8219   00219A  323F               	rrcf	(??___fldiv+3)^0,f,c
  8220   00219C  323E               	rrcf	(??___fldiv+2)^0,f,c
  8221   00219E  323D               	rrcf	(??___fldiv+1)^0,f,c
  8222   0021A0  323C               	rrcf	??___fldiv^0,f,c
  8223   0021A2  C03C  F034         	movff	??___fldiv,___fldiv@b
  8224   0021A6  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  8225   0021AA  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  8226   0021AE  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  8227   0021B2  4A45               	infsnz	___fldiv@new_exp^0,f,c
  8228   0021B4  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  8229   0021B6                     l8804:
  8230   0021B6  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8231   0021B8  EFE6  F010         	goto	u9371
  8232   0021BC  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8233   0021BE  E108               	bnz	u9370
  8234   0021C0  2845               	incf	___fldiv@new_exp^0,w,c
  8235   0021C2  A0D8               	btfss	status,0,c
  8236   0021C4  EFE6  F010         	goto	u9371
  8237   0021C8  EFE8  F010         	goto	u9370
  8238   0021CC                     u9371:
  8239   0021CC  EFF3  F010         	goto	l8808
  8240   0021D0                     u9370:
  8241   0021D0  0E00               	movlw	0
  8242   0021D2  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8243   0021D4  6845               	setf	___fldiv@new_exp^0,c
  8244   0021D6  0E00               	movlw	0
  8245   0021D8  6E34               	movwf	___fldiv@b^0,c
  8246   0021DA  0E00               	movlw	0
  8247   0021DC  6E35               	movwf	(___fldiv@b+1)^0,c
  8248   0021DE  0E00               	movlw	0
  8249   0021E0  6E36               	movwf	(___fldiv@b+2)^0,c
  8250   0021E2  0E00               	movlw	0
  8251   0021E4  6E37               	movwf	(___fldiv@b+3)^0,c
  8252   0021E6                     l8808:
  8253   0021E6  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8254   0021E8  EF00  F011         	goto	u9380
  8255   0021EC  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8256   0021EE  E106               	bnz	u9381
  8257   0021F0  0445               	decf	___fldiv@new_exp^0,w,c
  8258   0021F2  B0D8               	btfsc	status,0,c
  8259   0021F4  EFFE  F010         	goto	u9381
  8260   0021F8  EF00  F011         	goto	u9380
  8261   0021FC                     u9381:
  8262   0021FC  EF0E  F011         	goto	l8812
  8263   002200                     u9380:
  8264   002200  0E00               	movlw	0
  8265   002202  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8266   002204  0E00               	movlw	0
  8267   002206  6E45               	movwf	___fldiv@new_exp^0,c
  8268   002208  0E00               	movlw	0
  8269   00220A  6E34               	movwf	___fldiv@b^0,c
  8270   00220C  0E00               	movlw	0
  8271   00220E  6E35               	movwf	(___fldiv@b+1)^0,c
  8272   002210  0E00               	movlw	0
  8273   002212  6E36               	movwf	(___fldiv@b+2)^0,c
  8274   002214  0E00               	movlw	0
  8275   002216  6E37               	movwf	(___fldiv@b+3)^0,c
  8276   002218  0E00               	movlw	0
  8277   00221A  6E44               	movwf	___fldiv@sign^0,c
  8278   00221C                     l8812:
  8279   00221C  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  8280   002220  A04B               	btfss	___fldiv@bexp^0,0,c
  8281   002222  EF15  F011         	goto	u9391
  8282   002226  EF17  F011         	goto	u9390
  8283   00222A                     u9391:
  8284   00222A  EF1A  F011         	goto	l8818
  8285   00222E                     u9390:
  8286   00222E  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8287   002230  EF1B  F011         	goto	l8820
  8288   002234                     l8818:
  8289   002234  9E36               	bcf	(___fldiv@b+2)^0,7,c
  8290   002236                     l8820:
  8291   002236  90D8               	bcf	status,0,c
  8292   002238  304B               	rrcf	___fldiv@bexp^0,w,c
  8293   00223A  6E37               	movwf	(___fldiv@b+3)^0,c
  8294   00223C  EFD1  F00F         	goto	l8734
  8295   002240                     l1946:
  8296   002240  0012               	return		;funcret
  8297   002242                     __end_of___fldiv:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function ___fladd *****************
  8301 ;; Defined at:
  8302 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  b               4   76[COMRAM] unsigned char 
  8305 ;;  a               4   80[COMRAM] unsigned char 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  grs             1   91[COMRAM] unsigned char 
  8308 ;;  bexp            1   90[COMRAM] unsigned char 
  8309 ;;  aexp            1   89[COMRAM] unsigned char 
  8310 ;;  signs           1   88[COMRAM] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  4   76[COMRAM] unsigned char 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8320 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;Total ram usage:       16 bytes
  8325 ;; Hardware stack levels used: 1
  8326 ;; Hardware stack levels required when called: 4
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_CCP_Init
  8331 ;;		_CCP_PWM_set_DutyCycle
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text39
  8336   0015BE                     __ptext39:
  8337                           	callstack 0
  8338   0015BE                     ___fladd:
  8339                           	callstack 23
  8340   0015BE  5050               	movf	(___fladd@b+3)^0,w,c
  8341   0015C0  0B80               	andlw	128
  8342   0015C2  6E59               	movwf	___fladd@signs^0,c
  8343   0015C4  5050               	movf	(___fladd@b+3)^0,w,c
  8344   0015C6  2450               	addwf	(___fladd@b+3)^0,w,c
  8345   0015C8  6E5B               	movwf	___fladd@bexp^0,c
  8346   0015CA  AE4F               	btfss	(___fladd@b+2)^0,7,c
  8347   0015CC  EFEA  F00A         	goto	u8781
  8348   0015D0  EFEC  F00A         	goto	u8780
  8349   0015D4                     u8781:
  8350   0015D4  EFED  F00A         	goto	l8494
  8351   0015D8                     u8780:
  8352   0015D8  805B               	bsf	___fladd@bexp^0,0,c
  8353   0015DA                     l8494:
  8354   0015DA  505B               	movf	___fladd@bexp^0,w,c
  8355   0015DC  B4D8               	btfsc	status,2,c
  8356   0015DE  EFF3  F00A         	goto	u8791
  8357   0015E2  EFF5  F00A         	goto	u8790
  8358   0015E6                     u8791:
  8359   0015E6  EF0A  F00B         	goto	l8504
  8360   0015EA                     u8790:
  8361   0015EA  285B               	incf	___fladd@bexp^0,w,c
  8362   0015EC  A4D8               	btfss	status,2,c
  8363   0015EE  EFFB  F00A         	goto	u8801
  8364   0015F2  EFFD  F00A         	goto	u8800
  8365   0015F6                     u8801:
  8366   0015F6  EF05  F00B         	goto	l8500
  8367   0015FA                     u8800:
  8368   0015FA  0E00               	movlw	0
  8369   0015FC  6E4D               	movwf	___fladd@b^0,c
  8370   0015FE  0E00               	movlw	0
  8371   001600  6E4E               	movwf	(___fladd@b+1)^0,c
  8372   001602  0E00               	movlw	0
  8373   001604  6E4F               	movwf	(___fladd@b+2)^0,c
  8374   001606  0E00               	movlw	0
  8375   001608  6E50               	movwf	(___fladd@b+3)^0,c
  8376   00160A                     l8500:
  8377   00160A  8E4F               	bsf	(___fladd@b+2)^0,7,c
  8378   00160C  0E00               	movlw	0
  8379   00160E  6E50               	movwf	(___fladd@b+3)^0,c
  8380   001610  EF12  F00B         	goto	l8506
  8381   001614                     l8504:
  8382   001614  0E00               	movlw	0
  8383   001616  6E4D               	movwf	___fladd@b^0,c
  8384   001618  0E00               	movlw	0
  8385   00161A  6E4E               	movwf	(___fladd@b+1)^0,c
  8386   00161C  0E00               	movlw	0
  8387   00161E  6E4F               	movwf	(___fladd@b+2)^0,c
  8388   001620  0E00               	movlw	0
  8389   001622  6E50               	movwf	(___fladd@b+3)^0,c
  8390   001624                     l8506:
  8391   001624  5054               	movf	(___fladd@a+3)^0,w,c
  8392   001626  0B80               	andlw	128
  8393   001628  6E5A               	movwf	___fladd@aexp^0,c
  8394   00162A  5059               	movf	___fladd@signs^0,w,c
  8395   00162C  185A               	xorwf	___fladd@aexp^0,w,c
  8396   00162E  B4D8               	btfsc	status,2,c
  8397   001630  EF1C  F00B         	goto	u8811
  8398   001634  EF1E  F00B         	goto	u8810
  8399   001638                     u8811:
  8400   001638  EF1F  F00B         	goto	l8512
  8401   00163C                     u8810:
  8402   00163C  8C59               	bsf	___fladd@signs^0,6,c
  8403   00163E                     l8512:
  8404   00163E  5054               	movf	(___fladd@a+3)^0,w,c
  8405   001640  2454               	addwf	(___fladd@a+3)^0,w,c
  8406   001642  6E5A               	movwf	___fladd@aexp^0,c
  8407   001644  AE53               	btfss	(___fladd@a+2)^0,7,c
  8408   001646  EF27  F00B         	goto	u8821
  8409   00164A  EF29  F00B         	goto	u8820
  8410   00164E                     u8821:
  8411   00164E  EF2A  F00B         	goto	l8518
  8412   001652                     u8820:
  8413   001652  805A               	bsf	___fladd@aexp^0,0,c
  8414   001654                     l8518:
  8415   001654  505A               	movf	___fladd@aexp^0,w,c
  8416   001656  B4D8               	btfsc	status,2,c
  8417   001658  EF30  F00B         	goto	u8831
  8418   00165C  EF32  F00B         	goto	u8830
  8419   001660                     u8831:
  8420   001660  EF47  F00B         	goto	l8528
  8421   001664                     u8830:
  8422   001664  285A               	incf	___fladd@aexp^0,w,c
  8423   001666  A4D8               	btfss	status,2,c
  8424   001668  EF38  F00B         	goto	u8841
  8425   00166C  EF3A  F00B         	goto	u8840
  8426   001670                     u8841:
  8427   001670  EF42  F00B         	goto	l8524
  8428   001674                     u8840:
  8429   001674  0E00               	movlw	0
  8430   001676  6E51               	movwf	___fladd@a^0,c
  8431   001678  0E00               	movlw	0
  8432   00167A  6E52               	movwf	(___fladd@a+1)^0,c
  8433   00167C  0E00               	movlw	0
  8434   00167E  6E53               	movwf	(___fladd@a+2)^0,c
  8435   001680  0E00               	movlw	0
  8436   001682  6E54               	movwf	(___fladd@a+3)^0,c
  8437   001684                     l8524:
  8438   001684  8E53               	bsf	(___fladd@a+2)^0,7,c
  8439   001686  0E00               	movlw	0
  8440   001688  6E54               	movwf	(___fladd@a+3)^0,c
  8441   00168A  EF4F  F00B         	goto	l8530
  8442   00168E                     l8528:
  8443   00168E  0E00               	movlw	0
  8444   001690  6E51               	movwf	___fladd@a^0,c
  8445   001692  0E00               	movlw	0
  8446   001694  6E52               	movwf	(___fladd@a+1)^0,c
  8447   001696  0E00               	movlw	0
  8448   001698  6E53               	movwf	(___fladd@a+2)^0,c
  8449   00169A  0E00               	movlw	0
  8450   00169C  6E54               	movwf	(___fladd@a+3)^0,c
  8451   00169E                     l8530:
  8452   00169E  505B               	movf	___fladd@bexp^0,w,c
  8453   0016A0  5C5A               	subwf	___fladd@aexp^0,w,c
  8454   0016A2  B0D8               	btfsc	status,0,c
  8455   0016A4  EF56  F00B         	goto	u8851
  8456   0016A8  EF58  F00B         	goto	u8850
  8457   0016AC                     u8851:
  8458   0016AC  EF7F  F00B         	goto	l8566
  8459   0016B0                     u8850:
  8460   0016B0  AC59               	btfss	___fladd@signs^0,6,c
  8461   0016B2  EF5D  F00B         	goto	u8861
  8462   0016B6  EF5F  F00B         	goto	u8860
  8463   0016BA                     u8861:
  8464   0016BA  EF61  F00B         	goto	l8536
  8465   0016BE                     u8860:
  8466   0016BE  0E80               	movlw	128
  8467   0016C0  1A59               	xorwf	___fladd@signs^0,f,c
  8468   0016C2                     l8536:
  8469   0016C2  C05B  F05C         	movff	___fladd@bexp,___fladd@grs
  8470   0016C6  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  8471   0016CA  C05C  F05A         	movff	___fladd@grs,___fladd@aexp
  8472   0016CE  C04D  F05C         	movff	___fladd@b,___fladd@grs
  8473   0016D2  C051  F04D         	movff	___fladd@a,___fladd@b
  8474   0016D6  C05C  F051         	movff	___fladd@grs,___fladd@a
  8475   0016DA  C04E  F05C         	movff	___fladd@b+1,___fladd@grs
  8476   0016DE  C052  F04E         	movff	___fladd@a+1,___fladd@b+1
  8477   0016E2  C05C  F052         	movff	___fladd@grs,___fladd@a+1
  8478   0016E6  C04F  F05C         	movff	___fladd@b+2,___fladd@grs
  8479   0016EA  C053  F04F         	movff	___fladd@a+2,___fladd@b+2
  8480   0016EE  C05C  F053         	movff	___fladd@grs,___fladd@a+2
  8481   0016F2  C050  F05C         	movff	___fladd@b+3,___fladd@grs
  8482   0016F6  C054  F050         	movff	___fladd@a+3,___fladd@b+3
  8483   0016FA  C05C  F054         	movff	___fladd@grs,___fladd@a+3
  8484   0016FE                     l8566:
  8485   0016FE  0E00               	movlw	0
  8486   001700  6E5C               	movwf	___fladd@grs^0,c
  8487   001702  505B               	movf	___fladd@bexp^0,w,c
  8488   001704  C05A  F055         	movff	___fladd@aexp,??___fladd
  8489   001708  6A56               	clrf	(??___fladd+1)^0,c
  8490   00170A  5E55               	subwf	??___fladd^0,f,c
  8491   00170C  0E00               	movlw	0
  8492   00170E  5A56               	subwfb	(??___fladd+1)^0,f,c
  8493   001710  BE56               	btfsc	(??___fladd+1)^0,7,c
  8494   001712  EF94  F00B         	goto	u8871
  8495   001716  5056               	movf	(??___fladd+1)^0,w,c
  8496   001718  E109               	bnz	u8870
  8497   00171A  0E1A               	movlw	26
  8498   00171C  5C55               	subwf	??___fladd^0,w,c
  8499   00171E  A0D8               	btfss	status,0,c
  8500   001720  EF94  F00B         	goto	u8871
  8501   001724  EF96  F00B         	goto	u8870
  8502   001728                     u8871:
  8503   001728  EFCD  F00B         	goto	l1893
  8504   00172C                     u8870:
  8505   00172C  504D               	movf	___fladd@b^0,w,c
  8506   00172E  104E               	iorwf	(___fladd@b+1)^0,w,c
  8507   001730  104F               	iorwf	(___fladd@b+2)^0,w,c
  8508   001732  1050               	iorwf	(___fladd@b+3)^0,w,c
  8509   001734  A4D8               	btfss	status,2,c
  8510   001736  EF9F  F00B         	goto	u8881
  8511   00173A  EFA2  F00B         	goto	u8880
  8512   00173E                     u8881:
  8513   00173E  0E01               	movlw	1
  8514   001740  EFA3  F00B         	goto	u8890
  8515   001744                     u8880:
  8516   001744  0E00               	movlw	0
  8517   001746                     u8890:
  8518   001746  6E5C               	movwf	___fladd@grs^0,c
  8519   001748  0E00               	movlw	0
  8520   00174A  6E4D               	movwf	___fladd@b^0,c
  8521   00174C  0E00               	movlw	0
  8522   00174E  6E4E               	movwf	(___fladd@b+1)^0,c
  8523   001750  0E00               	movlw	0
  8524   001752  6E4F               	movwf	(___fladd@b+2)^0,c
  8525   001754  0E00               	movlw	0
  8526   001756  6E50               	movwf	(___fladd@b+3)^0,c
  8527   001758  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  8528   00175C  EFD6  F00B         	goto	l1892
  8529   001760                     l1894:
  8530   001760  A05C               	btfss	___fladd@grs^0,0,c
  8531   001762  EFB5  F00B         	goto	u8901
  8532   001766  EFB7  F00B         	goto	u8900
  8533   00176A                     u8901:
  8534   00176A  EFBD  F00B         	goto	l8578
  8535   00176E                     u8900:
  8536   00176E  90D8               	bcf	status,0,c
  8537   001770  305C               	rrcf	___fladd@grs^0,w,c
  8538   001772  0901               	iorlw	1
  8539   001774  6E5C               	movwf	___fladd@grs^0,c
  8540   001776  EFBF  F00B         	goto	l8580
  8541   00177A                     l8578:
  8542   00177A  90D8               	bcf	status,0,c
  8543   00177C  325C               	rrcf	___fladd@grs^0,f,c
  8544   00177E                     l8580:
  8545   00177E  A04D               	btfss	___fladd@b^0,0,c
  8546   001780  EFC4  F00B         	goto	u8911
  8547   001784  EFC6  F00B         	goto	u8910
  8548   001788                     u8911:
  8549   001788  EFC7  F00B         	goto	l8584
  8550   00178C                     u8910:
  8551   00178C  8E5C               	bsf	___fladd@grs^0,7,c
  8552   00178E                     l8584:
  8553   00178E  3450               	rlcf	(___fladd@b+3)^0,w,c
  8554   001790  3250               	rrcf	(___fladd@b+3)^0,f,c
  8555   001792  324F               	rrcf	(___fladd@b+2)^0,f,c
  8556   001794  324E               	rrcf	(___fladd@b+1)^0,f,c
  8557   001796  324D               	rrcf	___fladd@b^0,f,c
  8558   001798  2A5B               	incf	___fladd@bexp^0,f,c
  8559   00179A                     l1893:
  8560   00179A  505A               	movf	___fladd@aexp^0,w,c
  8561   00179C  5C5B               	subwf	___fladd@bexp^0,w,c
  8562   00179E  A0D8               	btfss	status,0,c
  8563   0017A0  EFD4  F00B         	goto	u8921
  8564   0017A4  EFD6  F00B         	goto	u8920
  8565   0017A8                     u8921:
  8566   0017A8  EFB0  F00B         	goto	l1894
  8567   0017AC                     u8920:
  8568   0017AC                     l1892:
  8569   0017AC  BC59               	btfsc	___fladd@signs^0,6,c
  8570   0017AE  EFDB  F00B         	goto	u8931
  8571   0017B2  EFDD  F00B         	goto	u8930
  8572   0017B6                     u8931:
  8573   0017B6  EF1D  F00C         	goto	l8612
  8574   0017BA                     u8930:
  8575   0017BA  505B               	movf	___fladd@bexp^0,w,c
  8576   0017BC  A4D8               	btfss	status,2,c
  8577   0017BE  EFE3  F00B         	goto	u8941
  8578   0017C2  EFE5  F00B         	goto	u8940
  8579   0017C6                     u8941:
  8580   0017C6  EFEF  F00B         	goto	l8594
  8581   0017CA                     u8940:
  8582   0017CA  0E00               	movlw	0
  8583   0017CC  6E4D               	movwf	?___fladd^0,c
  8584   0017CE  0E00               	movlw	0
  8585   0017D0  6E4E               	movwf	(?___fladd+1)^0,c
  8586   0017D2  0E00               	movlw	0
  8587   0017D4  6E4F               	movwf	(?___fladd+2)^0,c
  8588   0017D6  0E00               	movlw	0
  8589   0017D8  6E50               	movwf	(?___fladd+3)^0,c
  8590   0017DA  EF3E  F00D         	goto	l1901
  8591   0017DE                     l8594:
  8592   0017DE  5051               	movf	___fladd@a^0,w,c
  8593   0017E0  264D               	addwf	___fladd@b^0,f,c
  8594   0017E2  5052               	movf	(___fladd@a+1)^0,w,c
  8595   0017E4  224E               	addwfc	(___fladd@b+1)^0,f,c
  8596   0017E6  5053               	movf	(___fladd@a+2)^0,w,c
  8597   0017E8  224F               	addwfc	(___fladd@b+2)^0,f,c
  8598   0017EA  5054               	movf	(___fladd@a+3)^0,w,c
  8599   0017EC  2250               	addwfc	(___fladd@b+3)^0,f,c
  8600   0017EE  A050               	btfss	(___fladd@b+3)^0,0,c
  8601   0017F0  EFFC  F00B         	goto	u8951
  8602   0017F4  EFFE  F00B         	goto	u8950
  8603   0017F8                     u8951:
  8604   0017F8  EFAA  F00C         	goto	l8648
  8605   0017FC                     u8950:
  8606   0017FC  A05C               	btfss	___fladd@grs^0,0,c
  8607   0017FE  EF03  F00C         	goto	u8961
  8608   001802  EF05  F00C         	goto	u8960
  8609   001806                     u8961:
  8610   001806  EF0B  F00C         	goto	l8602
  8611   00180A                     u8960:
  8612   00180A  90D8               	bcf	status,0,c
  8613   00180C  305C               	rrcf	___fladd@grs^0,w,c
  8614   00180E  0901               	iorlw	1
  8615   001810  6E5C               	movwf	___fladd@grs^0,c
  8616   001812  EF0D  F00C         	goto	l8604
  8617   001816                     l8602:
  8618   001816  90D8               	bcf	status,0,c
  8619   001818  325C               	rrcf	___fladd@grs^0,f,c
  8620   00181A                     l8604:
  8621   00181A  A04D               	btfss	___fladd@b^0,0,c
  8622   00181C  EF12  F00C         	goto	u8971
  8623   001820  EF14  F00C         	goto	u8970
  8624   001824                     u8971:
  8625   001824  EF15  F00C         	goto	l8608
  8626   001828                     u8970:
  8627   001828  8E5C               	bsf	___fladd@grs^0,7,c
  8628   00182A                     l8608:
  8629   00182A  3450               	rlcf	(___fladd@b+3)^0,w,c
  8630   00182C  3250               	rrcf	(___fladd@b+3)^0,f,c
  8631   00182E  324F               	rrcf	(___fladd@b+2)^0,f,c
  8632   001830  324E               	rrcf	(___fladd@b+1)^0,f,c
  8633   001832  324D               	rrcf	___fladd@b^0,f,c
  8634   001834  2A5B               	incf	___fladd@bexp^0,f,c
  8635   001836  EFAA  F00C         	goto	l8648
  8636   00183A                     l8612:
  8637   00183A  5051               	movf	___fladd@a^0,w,c
  8638   00183C  5C4D               	subwf	___fladd@b^0,w,c
  8639   00183E  5052               	movf	(___fladd@a+1)^0,w,c
  8640   001840  584E               	subwfb	(___fladd@b+1)^0,w,c
  8641   001842  5053               	movf	(___fladd@a+2)^0,w,c
  8642   001844  584F               	subwfb	(___fladd@b+2)^0,w,c
  8643   001846  5050               	movf	(___fladd@b+3)^0,w,c
  8644   001848  0A80               	xorlw	128
  8645   00184A  6E55               	movwf	??___fladd^0,c
  8646   00184C  5054               	movf	(___fladd@a+3)^0,w,c
  8647   00184E  0A80               	xorlw	128
  8648   001850  5855               	subwfb	??___fladd^0,w,c
  8649   001852  B0D8               	btfsc	status,0,c
  8650   001854  EF2E  F00C         	goto	u8981
  8651   001858  EF30  F00C         	goto	u8980
  8652   00185C                     u8981:
  8653   00185C  EF5B  F00C         	goto	l8622
  8654   001860                     u8980:
  8655   001860  504D               	movf	___fladd@b^0,w,c
  8656   001862  5C51               	subwf	___fladd@a^0,w,c
  8657   001864  6E55               	movwf	??___fladd^0,c
  8658   001866  504E               	movf	(___fladd@b+1)^0,w,c
  8659   001868  5852               	subwfb	(___fladd@a+1)^0,w,c
  8660   00186A  6E56               	movwf	(??___fladd+1)^0,c
  8661   00186C  504F               	movf	(___fladd@b+2)^0,w,c
  8662   00186E  5853               	subwfb	(___fladd@a+2)^0,w,c
  8663   001870  6E57               	movwf	(??___fladd+2)^0,c
  8664   001872  5050               	movf	(___fladd@b+3)^0,w,c
  8665   001874  5854               	subwfb	(___fladd@a+3)^0,w,c
  8666   001876  6E58               	movwf	(??___fladd+3)^0,c
  8667   001878  0EFF               	movlw	255
  8668   00187A  2455               	addwf	??___fladd^0,w,c
  8669   00187C  6E4D               	movwf	___fladd@b^0,c
  8670   00187E  0EFF               	movlw	255
  8671   001880  2056               	addwfc	(??___fladd+1)^0,w,c
  8672   001882  6E4E               	movwf	(___fladd@b+1)^0,c
  8673   001884  0EFF               	movlw	255
  8674   001886  2057               	addwfc	(??___fladd+2)^0,w,c
  8675   001888  6E4F               	movwf	(___fladd@b+2)^0,c
  8676   00188A  0EFF               	movlw	255
  8677   00188C  2058               	addwfc	(??___fladd+3)^0,w,c
  8678   00188E  6E50               	movwf	(___fladd@b+3)^0,c
  8679   001890  0E80               	movlw	128
  8680   001892  1A59               	xorwf	___fladd@signs^0,f,c
  8681   001894  6C5C               	negf	___fladd@grs^0,c
  8682   001896  505C               	movf	___fladd@grs^0,w,c
  8683   001898  A4D8               	btfss	status,2,c
  8684   00189A  EF51  F00C         	goto	u8991
  8685   00189E  EF53  F00C         	goto	u8990
  8686   0018A2                     u8991:
  8687   0018A2  EF63  F00C         	goto	l1909
  8688   0018A6                     u8990:
  8689   0018A6  0E01               	movlw	1
  8690   0018A8  264D               	addwf	___fladd@b^0,f,c
  8691   0018AA  0E00               	movlw	0
  8692   0018AC  224E               	addwfc	(___fladd@b+1)^0,f,c
  8693   0018AE  224F               	addwfc	(___fladd@b+2)^0,f,c
  8694   0018B0  2250               	addwfc	(___fladd@b+3)^0,f,c
  8695   0018B2  EF63  F00C         	goto	l1909
  8696   0018B6                     l8622:
  8697   0018B6  5051               	movf	___fladd@a^0,w,c
  8698   0018B8  5E4D               	subwf	___fladd@b^0,f,c
  8699   0018BA  5052               	movf	(___fladd@a+1)^0,w,c
  8700   0018BC  5A4E               	subwfb	(___fladd@b+1)^0,f,c
  8701   0018BE  5053               	movf	(___fladd@a+2)^0,w,c
  8702   0018C0  5A4F               	subwfb	(___fladd@b+2)^0,f,c
  8703   0018C2  5054               	movf	(___fladd@a+3)^0,w,c
  8704   0018C4  5A50               	subwfb	(___fladd@b+3)^0,f,c
  8705   0018C6                     l1909:
  8706   0018C6  504D               	movf	___fladd@b^0,w,c
  8707   0018C8  104E               	iorwf	(___fladd@b+1)^0,w,c
  8708   0018CA  104F               	iorwf	(___fladd@b+2)^0,w,c
  8709   0018CC  1050               	iorwf	(___fladd@b+3)^0,w,c
  8710   0018CE  A4D8               	btfss	status,2,c
  8711   0018D0  EF6C  F00C         	goto	u9001
  8712   0018D4  EF6E  F00C         	goto	u9000
  8713   0018D8                     u9001:
  8714   0018D8  EFA3  F00C         	goto	l8646
  8715   0018DC                     u9000:
  8716   0018DC  505C               	movf	___fladd@grs^0,w,c
  8717   0018DE  A4D8               	btfss	status,2,c
  8718   0018E0  EF74  F00C         	goto	u9011
  8719   0018E4  EF76  F00C         	goto	u9010
  8720   0018E8                     u9011:
  8721   0018E8  EFA3  F00C         	goto	l8646
  8722   0018EC                     u9010:
  8723   0018EC  0E00               	movlw	0
  8724   0018EE  6E4D               	movwf	?___fladd^0,c
  8725   0018F0  0E00               	movlw	0
  8726   0018F2  6E4E               	movwf	(?___fladd+1)^0,c
  8727   0018F4  0E00               	movlw	0
  8728   0018F6  6E4F               	movwf	(?___fladd+2)^0,c
  8729   0018F8  0E00               	movlw	0
  8730   0018FA  6E50               	movwf	(?___fladd+3)^0,c
  8731   0018FC  EF3E  F00D         	goto	l1901
  8732   001900                     l8630:
  8733   001900  90D8               	bcf	status,0,c
  8734   001902  364D               	rlcf	___fladd@b^0,f,c
  8735   001904  364E               	rlcf	(___fladd@b+1)^0,f,c
  8736   001906  364F               	rlcf	(___fladd@b+2)^0,f,c
  8737   001908  3650               	rlcf	(___fladd@b+3)^0,f,c
  8738   00190A  AE5C               	btfss	___fladd@grs^0,7,c
  8739   00190C  EF8A  F00C         	goto	u9021
  8740   001910  EF8C  F00C         	goto	u9020
  8741   001914                     u9021:
  8742   001914  EF8D  F00C         	goto	l8636
  8743   001918                     u9020:
  8744   001918  804D               	bsf	___fladd@b^0,0,c
  8745   00191A                     l8636:
  8746   00191A  A05C               	btfss	___fladd@grs^0,0,c
  8747   00191C  EF92  F00C         	goto	u9031
  8748   001920  EF94  F00C         	goto	u9030
  8749   001924                     u9031:
  8750   001924  EF98  F00C         	goto	l8640
  8751   001928                     u9030:
  8752   001928  80D8               	bsf	status,0,c
  8753   00192A  365C               	rlcf	___fladd@grs^0,f,c
  8754   00192C  EF9A  F00C         	goto	l8642
  8755   001930                     l8640:
  8756   001930  90D8               	bcf	status,0,c
  8757   001932  365C               	rlcf	___fladd@grs^0,f,c
  8758   001934                     l8642:
  8759   001934  505B               	movf	___fladd@bexp^0,w,c
  8760   001936  B4D8               	btfsc	status,2,c
  8761   001938  EFA0  F00C         	goto	u9041
  8762   00193C  EFA2  F00C         	goto	u9040
  8763   001940                     u9041:
  8764   001940  EFA3  F00C         	goto	l8646
  8765   001944                     u9040:
  8766   001944  065B               	decf	___fladd@bexp^0,f,c
  8767   001946                     l8646:
  8768   001946  AE4F               	btfss	(___fladd@b+2)^0,7,c
  8769   001948  EFA8  F00C         	goto	u9051
  8770   00194C  EFAA  F00C         	goto	u9050
  8771   001950                     u9051:
  8772   001950  EF80  F00C         	goto	l8630
  8773   001954                     u9050:
  8774   001954                     l8648:
  8775   001954  0E00               	movlw	0
  8776   001956  6E5A               	movwf	___fladd@aexp^0,c
  8777   001958  AE5C               	btfss	___fladd@grs^0,7,c
  8778   00195A  EFB1  F00C         	goto	u9061
  8779   00195E  EFB3  F00C         	goto	u9060
  8780   001962                     u9061:
  8781   001962  EFCB  F00C         	goto	l1918
  8782   001966                     u9060:
  8783   001966  C05C  F055         	movff	___fladd@grs,??___fladd
  8784   00196A  0E7F               	movlw	127
  8785   00196C  1655               	andwf	??___fladd^0,f,c
  8786   00196E  B4D8               	btfsc	status,2,c
  8787   001970  EFBC  F00C         	goto	u9071
  8788   001974  EFBE  F00C         	goto	u9070
  8789   001978                     u9071:
  8790   001978  EFC2  F00C         	goto	l1919
  8791   00197C                     u9070:
  8792   00197C                     l8654:
  8793   00197C  0E01               	movlw	1
  8794   00197E  6E5A               	movwf	___fladd@aexp^0,c
  8795   001980  EFCB  F00C         	goto	l1918
  8796   001984                     l1919:
  8797   001984  A04D               	btfss	___fladd@b^0,0,c
  8798   001986  EFC7  F00C         	goto	u9081
  8799   00198A  EFC9  F00C         	goto	u9080
  8800   00198E                     u9081:
  8801   00198E  EFCB  F00C         	goto	l1918
  8802   001992                     u9080:
  8803   001992  EFBE  F00C         	goto	l8654
  8804   001996                     l1918:
  8805   001996  505A               	movf	___fladd@aexp^0,w,c
  8806   001998  B4D8               	btfsc	status,2,c
  8807   00199A  EFD1  F00C         	goto	u9091
  8808   00199E  EFD3  F00C         	goto	u9090
  8809   0019A2                     u9091:
  8810   0019A2  EFFE  F00C         	goto	l8666
  8811   0019A6                     u9090:
  8812   0019A6  0E01               	movlw	1
  8813   0019A8  264D               	addwf	___fladd@b^0,f,c
  8814   0019AA  0E00               	movlw	0
  8815   0019AC  224E               	addwfc	(___fladd@b+1)^0,f,c
  8816   0019AE  224F               	addwfc	(___fladd@b+2)^0,f,c
  8817   0019B0  2250               	addwfc	(___fladd@b+3)^0,f,c
  8818   0019B2  A050               	btfss	(___fladd@b+3)^0,0,c
  8819   0019B4  EFDE  F00C         	goto	u9101
  8820   0019B8  EFE0  F00C         	goto	u9100
  8821   0019BC                     u9101:
  8822   0019BC  EFFE  F00C         	goto	l8666
  8823   0019C0                     u9100:
  8824   0019C0  C04D  F055         	movff	___fladd@b,??___fladd
  8825   0019C4  C04E  F056         	movff	___fladd@b+1,??___fladd+1
  8826   0019C8  C04F  F057         	movff	___fladd@b+2,??___fladd+2
  8827   0019CC  C050  F058         	movff	___fladd@b+3,??___fladd+3
  8828   0019D0  3458               	rlcf	(??___fladd+3)^0,w,c
  8829   0019D2  3258               	rrcf	(??___fladd+3)^0,f,c
  8830   0019D4  3257               	rrcf	(??___fladd+2)^0,f,c
  8831   0019D6  3256               	rrcf	(??___fladd+1)^0,f,c
  8832   0019D8  3255               	rrcf	??___fladd^0,f,c
  8833   0019DA  C055  F04D         	movff	??___fladd,___fladd@b
  8834   0019DE  C056  F04E         	movff	??___fladd+1,___fladd@b+1
  8835   0019E2  C057  F04F         	movff	??___fladd+2,___fladd@b+2
  8836   0019E6  C058  F050         	movff	??___fladd+3,___fladd@b+3
  8837   0019EA  285B               	incf	___fladd@bexp^0,w,c
  8838   0019EC  B4D8               	btfsc	status,2,c
  8839   0019EE  EFFB  F00C         	goto	u9111
  8840   0019F2  EFFD  F00C         	goto	u9110
  8841   0019F6                     u9111:
  8842   0019F6  EFFE  F00C         	goto	l8666
  8843   0019FA                     u9110:
  8844   0019FA  2A5B               	incf	___fladd@bexp^0,f,c
  8845   0019FC                     l8666:
  8846   0019FC  285B               	incf	___fladd@bexp^0,w,c
  8847   0019FE  B4D8               	btfsc	status,2,c
  8848   001A00  EF04  F00D         	goto	u9121
  8849   001A04  EF06  F00D         	goto	u9120
  8850   001A08                     u9121:
  8851   001A08  EF0E  F00D         	goto	l8670
  8852   001A0C                     u9120:
  8853   001A0C  505B               	movf	___fladd@bexp^0,w,c
  8854   001A0E  A4D8               	btfss	status,2,c
  8855   001A10  EF0C  F00D         	goto	u9131
  8856   001A14  EF0E  F00D         	goto	u9130
  8857   001A18                     u9131:
  8858   001A18  EF20  F00D         	goto	l8674
  8859   001A1C                     u9130:
  8860   001A1C                     l8670:
  8861   001A1C  0E00               	movlw	0
  8862   001A1E  6E4D               	movwf	___fladd@b^0,c
  8863   001A20  0E00               	movlw	0
  8864   001A22  6E4E               	movwf	(___fladd@b+1)^0,c
  8865   001A24  0E00               	movlw	0
  8866   001A26  6E4F               	movwf	(___fladd@b+2)^0,c
  8867   001A28  0E00               	movlw	0
  8868   001A2A  6E50               	movwf	(___fladd@b+3)^0,c
  8869   001A2C  505B               	movf	___fladd@bexp^0,w,c
  8870   001A2E  A4D8               	btfss	status,2,c
  8871   001A30  EF1C  F00D         	goto	u9141
  8872   001A34  EF1E  F00D         	goto	u9140
  8873   001A38                     u9141:
  8874   001A38  EF20  F00D         	goto	l8674
  8875   001A3C                     u9140:
  8876   001A3C  0E00               	movlw	0
  8877   001A3E  6E59               	movwf	___fladd@signs^0,c
  8878   001A40                     l8674:
  8879   001A40  A05B               	btfss	___fladd@bexp^0,0,c
  8880   001A42  EF25  F00D         	goto	u9151
  8881   001A46  EF27  F00D         	goto	u9150
  8882   001A4A                     u9151:
  8883   001A4A  EF2A  F00D         	goto	l8678
  8884   001A4E                     u9150:
  8885   001A4E  8E4F               	bsf	(___fladd@b+2)^0,7,c
  8886   001A50  EF2B  F00D         	goto	l8680
  8887   001A54                     l8678:
  8888   001A54  9E4F               	bcf	(___fladd@b+2)^0,7,c
  8889   001A56                     l8680:
  8890   001A56  90D8               	bcf	status,0,c
  8891   001A58  305B               	rrcf	___fladd@bexp^0,w,c
  8892   001A5A  6E50               	movwf	(___fladd@b+3)^0,c
  8893   001A5C  AE59               	btfss	___fladd@signs^0,7,c
  8894   001A5E  EF33  F00D         	goto	u9161
  8895   001A62  EF35  F00D         	goto	u9160
  8896   001A66                     u9161:
  8897   001A66  EF36  F00D         	goto	l8686
  8898   001A6A                     u9160:
  8899   001A6A  8E50               	bsf	(___fladd@b+3)^0,7,c
  8900   001A6C                     l8686:
  8901   001A6C  C04D  F04D         	movff	___fladd@b,?___fladd
  8902   001A70  C04E  F04E         	movff	___fladd@b+1,?___fladd+1
  8903   001A74  C04F  F04F         	movff	___fladd@b+2,?___fladd+2
  8904   001A78  C050  F050         	movff	___fladd@b+3,?___fladd+3
  8905   001A7C                     l1901:
  8906   001A7C  0012               	return		;funcret
  8907   001A7E                     __end_of___fladd:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function _CCP_PWM_Stop *****************
  8911 ;; Defined at:
  8912 ;;		line 416 in file "MCAL_layer/CCP/CCP1.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  ccp_obj         2   12[COMRAM] PTR const struct .
  8915 ;;		 -> ccp_obj(16), 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  ret             1   15[COMRAM] unsigned char 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      unsigned char 
  8920 ;; Registers used:
  8921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;Total ram usage:        4 bytes
  8932 ;; Hardware stack levels used: 1
  8933 ;; Hardware stack levels required when called: 4
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		_main
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text40
  8942   0040AE                     __ptext40:
  8943                           	callstack 0
  8944   0040AE                     _CCP_PWM_Stop:
  8945                           	callstack 26
  8946   0040AE                     
  8947                           ;MCAL_layer/CCP/CCP1.c: 416: Std_ReturnType CCP_PWM_Stop(const CCP_t *ccp_obj);MCAL_laye
      +                          r/CCP/CCP1.c: 417: {;MCAL_layer/CCP/CCP1.c: 418:     Std_ReturnType ret = (Std_ReturnTyp
      +                          e)0x01;
  8948   0040AE  0E01               	movlw	1
  8949   0040B0  6E10               	movwf	CCP_PWM_Stop@ret^0,c
  8950   0040B2                     
  8951                           ;MCAL_layer/CCP/CCP1.c: 419:     if(ccp_obj == ((void*)0))
  8952   0040B2  500D               	movf	CCP_PWM_Stop@ccp_obj^0,w,c
  8953   0040B4  100E               	iorwf	(CCP_PWM_Stop@ccp_obj+1)^0,w,c
  8954   0040B6  A4D8               	btfss	status,2,c
  8955   0040B8  EF60  F020         	goto	u6531
  8956   0040BC  EF62  F020         	goto	u6530
  8957   0040C0                     u6531:
  8958   0040C0  EF66  F020         	goto	l6848
  8959   0040C4                     u6530:
  8960   0040C4                     
  8961                           ;MCAL_layer/CCP/CCP1.c: 420:     {;MCAL_layer/CCP/CCP1.c: 421:         ret = (Std_Return
      +                          Type)0x00;
  8962   0040C4  0E00               	movlw	0
  8963   0040C6  6E10               	movwf	CCP_PWM_Stop@ret^0,c
  8964                           
  8965                           ;MCAL_layer/CCP/CCP1.c: 422:     }
  8966   0040C8  EF88  F020         	goto	l632
  8967   0040CC                     l6848:
  8968                           
  8969                           ;MCAL_layer/CCP/CCP1.c: 424:     {;MCAL_layer/CCP/CCP1.c: 425:         if(ccp_obj->ccp_i
      +                          nst == CCP1_inst)
  8970   0040CC  EE20 F001          	lfsr	2,1
  8971   0040D0  500D               	movf	CCP_PWM_Stop@ccp_obj^0,w,c
  8972   0040D2  26D9               	addwf	fsr2l,f,c
  8973   0040D4  500E               	movf	(CCP_PWM_Stop@ccp_obj+1)^0,w,c
  8974   0040D6  22DA               	addwfc	fsr2h,f,c
  8975   0040D8  50DF               	movf	indf2,w,c
  8976   0040DA  A4D8               	btfss	status,2,c
  8977   0040DC  EF72  F020         	goto	u6541
  8978   0040E0  EF74  F020         	goto	u6540
  8979   0040E4                     u6541:
  8980   0040E4  EF78  F020         	goto	l6852
  8981   0040E8                     u6540:
  8982   0040E8                     
  8983                           ;MCAL_layer/CCP/CCP1.c: 426:         {;MCAL_layer/CCP/CCP1.c: 427:             (CCP1CONb
      +                          its.CCP1M = (uint8)0);
  8984   0040E8  0EF0               	movlw	-16
  8985   0040EA  16BD               	andwf	189,f,c	;volatile
  8986                           
  8987                           ;MCAL_layer/CCP/CCP1.c: 428:         }
  8988   0040EC  EF88  F020         	goto	l632
  8989   0040F0                     l6852:
  8990   0040F0  EE20 F001          	lfsr	2,1
  8991   0040F4  500D               	movf	CCP_PWM_Stop@ccp_obj^0,w,c
  8992   0040F6  26D9               	addwf	fsr2l,f,c
  8993   0040F8  500E               	movf	(CCP_PWM_Stop@ccp_obj+1)^0,w,c
  8994   0040FA  22DA               	addwfc	fsr2h,f,c
  8995   0040FC  04DE               	decf	postinc2,w,c
  8996   0040FE  A4D8               	btfss	status,2,c
  8997   004100  EF84  F020         	goto	u6551
  8998   004104  EF86  F020         	goto	u6550
  8999   004108                     u6551:
  9000   004108  EF88  F020         	goto	l632
  9001   00410C                     u6550:
  9002   00410C                     
  9003                           ;MCAL_layer/CCP/CCP1.c: 430:         {;MCAL_layer/CCP/CCP1.c: 431:             (CCP2CONb
      +                          its.CCP2M = (uint8)0);
  9004   00410C  0EF0               	movlw	-16
  9005   00410E  16BA               	andwf	186,f,c	;volatile
  9006   004110                     l632:
  9007                           
  9008                           ;MCAL_layer/CCP/CCP1.c: 434:     return ret;
  9009   004110  5010               	movf	CCP_PWM_Stop@ret^0,w,c
  9010   004112  0012               	return		;funcret
  9011   004114                     __end_of_CCP_PWM_Stop:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _CCP_PWM_Start *****************
  9015 ;; Defined at:
  9016 ;;		line 395 in file "MCAL_layer/CCP/CCP1.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  ccp_obj         2   12[COMRAM] PTR const struct .
  9019 ;;		 -> ccp_obj(16), 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  ret             1   15[COMRAM] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      unsigned char 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;Total ram usage:        4 bytes
  9036 ;; Hardware stack levels used: 1
  9037 ;; Hardware stack levels required when called: 4
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_main
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text41
  9046   003FD4                     __ptext41:
  9047                           	callstack 0
  9048   003FD4                     _CCP_PWM_Start:
  9049                           	callstack 26
  9050   003FD4                     
  9051                           ;MCAL_layer/CCP/CCP1.c: 395: Std_ReturnType CCP_PWM_Start(const CCP_t *ccp_obj);MCAL_lay
      +                          er/CCP/CCP1.c: 396: {;MCAL_layer/CCP/CCP1.c: 397:     Std_ReturnType ret = (Std_ReturnTy
      +                          pe)0x01;
  9052   003FD4  0E01               	movlw	1
  9053   003FD6  6E10               	movwf	CCP_PWM_Start@ret^0,c
  9054   003FD8                     
  9055                           ;MCAL_layer/CCP/CCP1.c: 398:     if(ccp_obj == ((void*)0))
  9056   003FD8  500D               	movf	CCP_PWM_Start@ccp_obj^0,w,c
  9057   003FDA  100E               	iorwf	(CCP_PWM_Start@ccp_obj+1)^0,w,c
  9058   003FDC  A4D8               	btfss	status,2,c
  9059   003FDE  EFF3  F01F         	goto	u6501
  9060   003FE2  EFF5  F01F         	goto	u6500
  9061   003FE6                     u6501:
  9062   003FE6  EFF9  F01F         	goto	l6832
  9063   003FEA                     u6500:
  9064   003FEA                     
  9065                           ;MCAL_layer/CCP/CCP1.c: 399:     {;MCAL_layer/CCP/CCP1.c: 400:         ret = (Std_Return
      +                          Type)0x00;
  9066   003FEA  0E00               	movlw	0
  9067   003FEC  6E10               	movwf	CCP_PWM_Start@ret^0,c
  9068                           
  9069                           ;MCAL_layer/CCP/CCP1.c: 401:     }
  9070   003FEE  EF1F  F020         	goto	l624
  9071   003FF2                     l6832:
  9072                           
  9073                           ;MCAL_layer/CCP/CCP1.c: 403:     {;MCAL_layer/CCP/CCP1.c: 404:         if(ccp_obj->ccp_i
      +                          nst == CCP1_inst)
  9074   003FF2  EE20 F001          	lfsr	2,1
  9075   003FF6  500D               	movf	CCP_PWM_Start@ccp_obj^0,w,c
  9076   003FF8  26D9               	addwf	fsr2l,f,c
  9077   003FFA  500E               	movf	(CCP_PWM_Start@ccp_obj+1)^0,w,c
  9078   003FFC  22DA               	addwfc	fsr2h,f,c
  9079   003FFE  50DF               	movf	indf2,w,c
  9080   004000  A4D8               	btfss	status,2,c
  9081   004002  EF05  F020         	goto	u6511
  9082   004006  EF07  F020         	goto	u6510
  9083   00400A                     u6511:
  9084   00400A  EF0D  F020         	goto	l6836
  9085   00400E                     u6510:
  9086   00400E                     
  9087                           ;MCAL_layer/CCP/CCP1.c: 405:         {;MCAL_layer/CCP/CCP1.c: 406:             (CCP1CONb
      +                          its.CCP1M = (uint8)12);
  9088   00400E  50BD               	movf	189,w,c	;volatile
  9089   004010  0BF0               	andlw	-16
  9090   004012  090C               	iorlw	12
  9091   004014  6EBD               	movwf	189,c	;volatile
  9092                           
  9093                           ;MCAL_layer/CCP/CCP1.c: 407:         }
  9094   004016  EF1F  F020         	goto	l624
  9095   00401A                     l6836:
  9096   00401A  EE20 F001          	lfsr	2,1
  9097   00401E  500D               	movf	CCP_PWM_Start@ccp_obj^0,w,c
  9098   004020  26D9               	addwf	fsr2l,f,c
  9099   004022  500E               	movf	(CCP_PWM_Start@ccp_obj+1)^0,w,c
  9100   004024  22DA               	addwfc	fsr2h,f,c
  9101   004026  04DE               	decf	postinc2,w,c
  9102   004028  A4D8               	btfss	status,2,c
  9103   00402A  EF19  F020         	goto	u6521
  9104   00402E  EF1B  F020         	goto	u6520
  9105   004032                     u6521:
  9106   004032  EF1F  F020         	goto	l624
  9107   004036                     u6520:
  9108   004036                     
  9109                           ;MCAL_layer/CCP/CCP1.c: 409:         {;MCAL_layer/CCP/CCP1.c: 410:             (CCP2CONb
      +                          its.CCP2M = (uint8)12);
  9110   004036  50BA               	movf	186,w,c	;volatile
  9111   004038  0BF0               	andlw	-16
  9112   00403A  090C               	iorlw	12
  9113   00403C  6EBA               	movwf	186,c	;volatile
  9114   00403E                     l624:
  9115                           
  9116                           ;MCAL_layer/CCP/CCP1.c: 414:     return ret;
  9117   00403E  5010               	movf	CCP_PWM_Start@ret^0,w,c
  9118   004040  0012               	return		;funcret
  9119   004042                     __end_of_CCP_PWM_Start:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _ADC_StartConversion_INT *****************
  9123 ;; Defined at:
  9124 ;;		line 234 in file "MCAL_layer/ADC/hal_ADC.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  ADC_obj         2   20[COMRAM] PTR const struct .
  9127 ;;		 -> Lm35(7), 
  9128 ;;  channel         1   22[COMRAM] enum E3217
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  ret             1   24[COMRAM] unsigned char 
  9131 ;;  l_conversion    1   23[COMRAM] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  1    wreg      unsigned char 
  9134 ;; Registers used:
  9135 ;;		wreg, status,2, status,0, cstack
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9141 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9145 ;;Total ram usage:        5 bytes
  9146 ;; Hardware stack levels used: 1
  9147 ;; Hardware stack levels required when called: 6
  9148 ;; This function calls:
  9149 ;;		_ADC_Select_Channel
  9150 ;;		_ADC_Start_Conversion
  9151 ;; This function is called by:
  9152 ;;		_main
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text42
  9157   00433E                     __ptext42:
  9158                           	callstack 0
  9159   00433E                     _ADC_StartConversion_INT:
  9160                           	callstack 24
  9161   00433E                     
  9162                           ;MCAL_layer/ADC/hal_ADC.c: 237:     uint8 l_conversion_status = 0;
  9163   00433E  0E00               	movlw	0
  9164   004340  6E18               	movwf	ADC_StartConversion_INT@l_conversion_status^0,c
  9165   004342                     
  9166                           ;MCAL_layer/ADC/hal_ADC.c: 238:     if(ADC_obj == ((void*)0))
  9167   004342  5015               	movf	ADC_StartConversion_INT@ADC_obj^0,w,c
  9168   004344  1016               	iorwf	(ADC_StartConversion_INT@ADC_obj+1)^0,w,c
  9169   004346  A4D8               	btfss	status,2,c
  9170   004348  EFA8  F021         	goto	u6441
  9171   00434C  EFAA  F021         	goto	u6440
  9172   004350                     u6441:
  9173   004350  EFAE  F021         	goto	l6788
  9174   004354                     u6440:
  9175   004354                     
  9176                           ;MCAL_layer/ADC/hal_ADC.c: 239:     {;MCAL_layer/ADC/hal_ADC.c: 240:         ret = (Std_
      +                          ReturnType)0x00;
  9177   004354  0E00               	movlw	0
  9178   004356  6E19               	movwf	ADC_StartConversion_INT@ret^0,c
  9179                           
  9180                           ;MCAL_layer/ADC/hal_ADC.c: 241:     }
  9181   004358  EFBE  F021         	goto	l6790
  9182   00435C                     l6788:
  9183                           
  9184                           ;MCAL_layer/ADC/hal_ADC.c: 243:     {;MCAL_layer/ADC/hal_ADC.c: 244:         ret = ADC_S
      +                          elect_Channel(ADC_obj,channel);
  9185   00435C  C015  F010         	movff	ADC_StartConversion_INT@ADC_obj,ADC_Select_Channel@ADC_obj
  9186   004360  C016  F011         	movff	ADC_StartConversion_INT@ADC_obj+1,ADC_Select_Channel@ADC_obj+1
  9187   004364  C017  F012         	movff	ADC_StartConversion_INT@channel,ADC_Select_Channel@channel
  9188   004368  ECFF  F021         	call	_ADC_Select_Channel	;wreg free
  9189   00436C  6E19               	movwf	ADC_StartConversion_INT@ret^0,c
  9190                           
  9191                           ;MCAL_layer/ADC/hal_ADC.c: 246:         ret = ADC_Start_Conversion(ADC_obj);
  9192   00436E  C015  F00D         	movff	ADC_StartConversion_INT@ADC_obj,ADC_Start_Conversion@ADC_obj
  9193   004372  C016  F00E         	movff	ADC_StartConversion_INT@ADC_obj+1,ADC_Start_Conversion@ADC_obj+1
  9194   004376  EC64  F022         	call	_ADC_Start_Conversion	;wreg free
  9195   00437A  6E19               	movwf	ADC_StartConversion_INT@ret^0,c
  9196   00437C                     l6790:
  9197                           
  9198                           ;MCAL_layer/ADC/hal_ADC.c: 249:     return ret;
  9199   00437C  5019               	movf	ADC_StartConversion_INT@ret^0,w,c
  9200   00437E  0012               	return		;funcret
  9201   004380                     __end_of_ADC_StartConversion_INT:
  9202                           	callstack 0
  9203                           
  9204 ;; *************** function _ADC_Start_Conversion *****************
  9205 ;; Defined at:
  9206 ;;		line 138 in file "MCAL_layer/ADC/hal_ADC.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  ADC_obj         2   12[COMRAM] PTR const struct .
  9209 ;;		 -> Lm35(7), 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  ret             1   14[COMRAM] unsigned char 
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      unsigned char 
  9214 ;; Registers used:
  9215 ;;		wreg, status,2, status,0
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;Total ram usage:        3 bytes
  9226 ;; Hardware stack levels used: 1
  9227 ;; Hardware stack levels required when called: 4
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_ADC_StartConversion_INT
  9232 ;;		_ADC_GetConversion_Blocking
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text43
  9237   0044C8                     __ptext43:
  9238                           	callstack 0
  9239   0044C8                     _ADC_Start_Conversion:
  9240                           	callstack 25
  9241   0044C8                     
  9242                           ;MCAL_layer/ADC/hal_ADC.c: 138: Std_ReturnType ADC_Start_Conversion(const ADC_t* ADC_obj
      +                          );MCAL_layer/ADC/hal_ADC.c: 139: {;MCAL_layer/ADC/hal_ADC.c: 140:     Std_ReturnType ret
      +                           = (Std_ReturnType)0x01;
  9243   0044C8  0E01               	movlw	1
  9244   0044CA  6E0F               	movwf	ADC_Start_Conversion@ret^0,c
  9245   0044CC                     
  9246                           ;MCAL_layer/ADC/hal_ADC.c: 141:     if(ADC_obj == ((void*)0))
  9247   0044CC  500D               	movf	ADC_Start_Conversion@ADC_obj^0,w,c
  9248   0044CE  100E               	iorwf	(ADC_Start_Conversion@ADC_obj+1)^0,w,c
  9249   0044D0  A4D8               	btfss	status,2,c
  9250   0044D2  EF6D  F022         	goto	u6311
  9251   0044D6  EF6F  F022         	goto	u6310
  9252   0044DA                     u6311:
  9253   0044DA  EF73  F022         	goto	l434
  9254   0044DE                     u6310:
  9255   0044DE                     
  9256                           ;MCAL_layer/ADC/hal_ADC.c: 142:     {;MCAL_layer/ADC/hal_ADC.c: 143:         ret = (Std_
      +                          ReturnType)0x00;
  9257   0044DE  0E00               	movlw	0
  9258   0044E0  6E0F               	movwf	ADC_Start_Conversion@ret^0,c
  9259                           
  9260                           ;MCAL_layer/ADC/hal_ADC.c: 144:     }
  9261   0044E2  EF74  F022         	goto	l6658
  9262   0044E6                     l434:
  9263                           
  9264                           ;MCAL_layer/ADC/hal_ADC.c: 146:     {;MCAL_layer/ADC/hal_ADC.c: 147:         (ADCON0bits
      +                          .GODONE = 1);
  9265   0044E6  82C2               	bsf	194,1,c	;volatile
  9266   0044E8                     l6658:
  9267                           
  9268                           ;MCAL_layer/ADC/hal_ADC.c: 149:     return ret;
  9269   0044E8  500F               	movf	ADC_Start_Conversion@ret^0,w,c
  9270   0044EA  0012               	return		;funcret
  9271   0044EC                     __end_of_ADC_Start_Conversion:
  9272                           	callstack 0
  9273                           
  9274 ;; *************** function _ADC_Select_Channel *****************
  9275 ;; Defined at:
  9276 ;;		line 118 in file "MCAL_layer/ADC/hal_ADC.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;  ADC_obj         2   15[COMRAM] PTR const struct .
  9279 ;;		 -> Lm35(7), 
  9280 ;;  channel         1   17[COMRAM] enum E3217
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  ret             1   19[COMRAM] unsigned char 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      unsigned char 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9292 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9296 ;;Total ram usage:        5 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; Hardware stack levels required when called: 5
  9299 ;; This function calls:
  9300 ;;		_ADC_configure_Channel
  9301 ;; This function is called by:
  9302 ;;		_ADC_StartConversion_INT
  9303 ;;		_ADC_GetConversion_Blocking
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text44
  9308   0043FE                     __ptext44:
  9309                           	callstack 0
  9310   0043FE                     _ADC_Select_Channel:
  9311                           	callstack 24
  9312   0043FE                     
  9313                           ;MCAL_layer/ADC/hal_ADC.c: 118: Std_ReturnType ADC_Select_Channel(const ADC_t* ADC_obj,A
      +                          DC_Channel_t channel);MCAL_layer/ADC/hal_ADC.c: 119: {;MCAL_layer/ADC/hal_ADC.c: 120:   
      +                            Std_ReturnType ret = (Std_ReturnType)0x01;
  9314   0043FE  0E01               	movlw	1
  9315   004400  6E14               	movwf	ADC_Select_Channel@ret^0,c
  9316   004402                     
  9317                           ;MCAL_layer/ADC/hal_ADC.c: 121:     if(ADC_obj == ((void*)0))
  9318   004402  5010               	movf	ADC_Select_Channel@ADC_obj^0,w,c
  9319   004404  1011               	iorwf	(ADC_Select_Channel@ADC_obj+1)^0,w,c
  9320   004406  A4D8               	btfss	status,2,c
  9321   004408  EF08  F022         	goto	u6301
  9322   00440C  EF0A  F022         	goto	u6300
  9323   004410                     u6301:
  9324   004410  EF0E  F022         	goto	l6644
  9325   004414                     u6300:
  9326   004414                     
  9327                           ;MCAL_layer/ADC/hal_ADC.c: 122:     {;MCAL_layer/ADC/hal_ADC.c: 123:         ret = (Std_
      +                          ReturnType)0x00;
  9328   004414  0E00               	movlw	0
  9329   004416  6E14               	movwf	ADC_Select_Channel@ret^0,c
  9330                           
  9331                           ;MCAL_layer/ADC/hal_ADC.c: 124:     }
  9332   004418  EF1A  F022         	goto	l6648
  9333   00441C                     l6644:
  9334                           
  9335                           ;MCAL_layer/ADC/hal_ADC.c: 126:     {;MCAL_layer/ADC/hal_ADC.c: 127:         (ADCON0bits
      +                          .CHS = channel);
  9336   00441C  C012  F013         	movff	ADC_Select_Channel@channel,??_ADC_Select_Channel
  9337   004420  4613               	rlncf	??_ADC_Select_Channel^0,f,c
  9338   004422  4613               	rlncf	??_ADC_Select_Channel^0,f,c
  9339   004424  50C2               	movf	194,w,c	;volatile
  9340   004426  1813               	xorwf	??_ADC_Select_Channel^0,w,c
  9341   004428  0BC3               	andlw	-61
  9342   00442A  1813               	xorwf	??_ADC_Select_Channel^0,w,c
  9343   00442C  6EC2               	movwf	194,c	;volatile
  9344   00442E                     
  9345                           ;MCAL_layer/ADC/hal_ADC.c: 128:         ADC_configure_Channel(channel);
  9346   00442E  5012               	movf	ADC_Select_Channel@channel^0,w,c
  9347   004430  EC65  F01B         	call	_ADC_configure_Channel
  9348   004434                     l6648:
  9349                           
  9350                           ;MCAL_layer/ADC/hal_ADC.c: 130:     return ret;
  9351   004434  5014               	movf	ADC_Select_Channel@ret^0,w,c
  9352   004436  0012               	return		;funcret
  9353   004438                     __end_of_ADC_Select_Channel:
  9354                           	callstack 0
  9355                           
  9356 ;; *************** function _ADC_configure_Channel *****************
  9357 ;; Defined at:
  9358 ;;		line 252 in file "MCAL_layer/ADC/hal_ADC.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  channel         1    wreg     enum E3217
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  channel         1   14[COMRAM] enum E3217
  9363 ;;  ret             1    0        unsigned char 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1    wreg      unsigned char 
  9366 ;; Registers used:
  9367 ;;		wreg, status,2, status,0
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;Total ram usage:        3 bytes
  9378 ;; Hardware stack levels used: 1
  9379 ;; Hardware stack levels required when called: 4
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_ADC_init
  9384 ;;		_ADC_Select_Channel
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text45
  9389   0036CA                     __ptext45:
  9390                           	callstack 0
  9391   0036CA                     _ADC_configure_Channel:
  9392                           	callstack 23
  9393                           
  9394                           ;incstack = 0
  9395                           ;ADC_configure_Channel@channel stored from wreg
  9396   0036CA  6E0F               	movwf	ADC_configure_Channel@channel^0,c
  9397   0036CC                     
  9398                           ;MCAL_layer/ADC/hal_ADC.c: 256:         switch(channel)
  9399   0036CC  EF91  F01B         	goto	l5584
  9400   0036D0                     l5556:
  9401                           
  9402                           ;MCAL_layer/ADC/hal_ADC.c: 259:                 (TRISA |= ((uint8)1 << 0x0));
  9403   0036D0  8092               	bsf	146,0,c	;volatile
  9404                           
  9405                           ;MCAL_layer/ADC/hal_ADC.c: 260:                 break;
  9406   0036D2  EFD2  F01B         	goto	l488
  9407   0036D6                     l5558:
  9408                           
  9409                           ;MCAL_layer/ADC/hal_ADC.c: 262:                 (TRISA |= ((uint8)1 << 0x1));
  9410   0036D6  8292               	bsf	146,1,c	;volatile
  9411                           
  9412                           ;MCAL_layer/ADC/hal_ADC.c: 263:                 break;
  9413   0036D8  EFD2  F01B         	goto	l488
  9414   0036DC                     l5560:
  9415                           
  9416                           ;MCAL_layer/ADC/hal_ADC.c: 265:                 (TRISA |= ((uint8)1 << 0x2));
  9417   0036DC  8492               	bsf	146,2,c	;volatile
  9418                           
  9419                           ;MCAL_layer/ADC/hal_ADC.c: 266:                 break;
  9420   0036DE  EFD2  F01B         	goto	l488
  9421   0036E2                     l5562:
  9422                           
  9423                           ;MCAL_layer/ADC/hal_ADC.c: 268:                 (TRISA |= ((uint8)1 << 0x3));
  9424   0036E2  8692               	bsf	146,3,c	;volatile
  9425                           
  9426                           ;MCAL_layer/ADC/hal_ADC.c: 269:                 break;
  9427   0036E4  EFD2  F01B         	goto	l488
  9428   0036E8                     l5564:
  9429                           
  9430                           ;MCAL_layer/ADC/hal_ADC.c: 271:                 (TRISA |= ((uint8)1 << 0x5));
  9431   0036E8  8A92               	bsf	146,5,c	;volatile
  9432                           
  9433                           ;MCAL_layer/ADC/hal_ADC.c: 272:                 break;
  9434   0036EA  EFD2  F01B         	goto	l488
  9435   0036EE                     l5566:
  9436                           
  9437                           ;MCAL_layer/ADC/hal_ADC.c: 274:                 (TRISE |= ((uint8)1 << 0x0));
  9438   0036EE  8096               	bsf	150,0,c	;volatile
  9439                           
  9440                           ;MCAL_layer/ADC/hal_ADC.c: 275:                 break;
  9441   0036F0  EFD2  F01B         	goto	l488
  9442   0036F4                     l5568:
  9443                           
  9444                           ;MCAL_layer/ADC/hal_ADC.c: 277:                 (TRISE |= ((uint8)1 << 0x1));
  9445   0036F4  8296               	bsf	150,1,c	;volatile
  9446                           
  9447                           ;MCAL_layer/ADC/hal_ADC.c: 278:                 break;
  9448   0036F6  EFD2  F01B         	goto	l488
  9449   0036FA                     l5570:
  9450                           
  9451                           ;MCAL_layer/ADC/hal_ADC.c: 280:                 (TRISE |= ((uint8)1 << 0x2));
  9452   0036FA  8496               	bsf	150,2,c	;volatile
  9453                           
  9454                           ;MCAL_layer/ADC/hal_ADC.c: 281:                 break;
  9455   0036FC  EFD2  F01B         	goto	l488
  9456   003700                     l5572:
  9457                           
  9458                           ;MCAL_layer/ADC/hal_ADC.c: 283:                 (TRISB |= ((uint8)1 << 0x2));
  9459   003700  8493               	bsf	147,2,c	;volatile
  9460                           
  9461                           ;MCAL_layer/ADC/hal_ADC.c: 284:                 break;
  9462   003702  EFD2  F01B         	goto	l488
  9463   003706                     l5574:
  9464                           
  9465                           ;MCAL_layer/ADC/hal_ADC.c: 286:                 (TRISB |= ((uint8)1 << 0x3));
  9466   003706  8693               	bsf	147,3,c	;volatile
  9467                           
  9468                           ;MCAL_layer/ADC/hal_ADC.c: 287:                 break;
  9469   003708  EFD2  F01B         	goto	l488
  9470   00370C                     l5576:
  9471                           
  9472                           ;MCAL_layer/ADC/hal_ADC.c: 289:                 (TRISB |= ((uint8)1 << 0x1));
  9473   00370C  8293               	bsf	147,1,c	;volatile
  9474                           
  9475                           ;MCAL_layer/ADC/hal_ADC.c: 290:                 break;
  9476   00370E  EFD2  F01B         	goto	l488
  9477   003712                     l5578:
  9478                           
  9479                           ;MCAL_layer/ADC/hal_ADC.c: 292:                 (TRISB |= ((uint8)1 << 0x4));
  9480   003712  8893               	bsf	147,4,c	;volatile
  9481                           
  9482                           ;MCAL_layer/ADC/hal_ADC.c: 293:                 break;
  9483   003714  EFD2  F01B         	goto	l488
  9484   003718                     l5580:
  9485                           
  9486                           ;MCAL_layer/ADC/hal_ADC.c: 295:                 (TRISB |= ((uint8)1 << 0x0));
  9487   003718  8093               	bsf	147,0,c	;volatile
  9488                           
  9489                           ;MCAL_layer/ADC/hal_ADC.c: 296:                 break;
  9490   00371A  EFD2  F01B         	goto	l488
  9491   00371E                     l5582:
  9492                           
  9493                           ;MCAL_layer/ADC/hal_ADC.c: 300:         }
  9494   00371E  EFD2  F01B         	goto	l488
  9495   003722                     l5584:
  9496   003722  500F               	movf	ADC_configure_Channel@channel^0,w,c
  9497   003724  6E0D               	movwf	??_ADC_configure_Channel^0,c
  9498   003726  6A0E               	clrf	(??_ADC_configure_Channel+1)^0,c
  9499                           
  9500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9501                           ; Switch size 1, requested type "simple"
  9502                           ; Number of cases is 1, Range of values is 0 to 0
  9503                           ; switch strategies available:
  9504                           ; Name         Instructions Cycles
  9505                           ; simple_byte            4     3 (average)
  9506                           ;	Chosen strategy is simple_byte
  9507   003728  500E               	movf	(??_ADC_configure_Channel+1)^0,w,c
  9508   00372A  0A00               	xorlw	0	; case 0
  9509   00372C  B4D8               	btfsc	status,2,c
  9510   00372E  EF9B  F01B         	goto	l10368
  9511   003732  EF8F  F01B         	goto	l5582
  9512   003736                     l10368:
  9513                           
  9514                           ; Switch size 1, requested type "simple"
  9515                           ; Number of cases is 13, Range of values is 0 to 12
  9516                           ; switch strategies available:
  9517                           ; Name         Instructions Cycles
  9518                           ; simple_byte           40    21 (average)
  9519                           ;	Chosen strategy is simple_byte
  9520   003736  500D               	movf	??_ADC_configure_Channel^0,w,c
  9521   003738  0A00               	xorlw	0	; case 0
  9522   00373A  B4D8               	btfsc	status,2,c
  9523   00373C  EF68  F01B         	goto	l5556
  9524   003740  0A01               	xorlw	1	; case 1
  9525   003742  B4D8               	btfsc	status,2,c
  9526   003744  EF6B  F01B         	goto	l5558
  9527   003748  0A03               	xorlw	3	; case 2
  9528   00374A  B4D8               	btfsc	status,2,c
  9529   00374C  EF6E  F01B         	goto	l5560
  9530   003750  0A01               	xorlw	1	; case 3
  9531   003752  B4D8               	btfsc	status,2,c
  9532   003754  EF71  F01B         	goto	l5562
  9533   003758  0A07               	xorlw	7	; case 4
  9534   00375A  B4D8               	btfsc	status,2,c
  9535   00375C  EF74  F01B         	goto	l5564
  9536   003760  0A01               	xorlw	1	; case 5
  9537   003762  B4D8               	btfsc	status,2,c
  9538   003764  EF77  F01B         	goto	l5566
  9539   003768  0A03               	xorlw	3	; case 6
  9540   00376A  B4D8               	btfsc	status,2,c
  9541   00376C  EF7A  F01B         	goto	l5568
  9542   003770  0A01               	xorlw	1	; case 7
  9543   003772  B4D8               	btfsc	status,2,c
  9544   003774  EF7D  F01B         	goto	l5570
  9545   003778  0A0F               	xorlw	15	; case 8
  9546   00377A  B4D8               	btfsc	status,2,c
  9547   00377C  EF80  F01B         	goto	l5572
  9548   003780  0A01               	xorlw	1	; case 9
  9549   003782  B4D8               	btfsc	status,2,c
  9550   003784  EF83  F01B         	goto	l5574
  9551   003788  0A03               	xorlw	3	; case 10
  9552   00378A  B4D8               	btfsc	status,2,c
  9553   00378C  EF86  F01B         	goto	l5576
  9554   003790  0A01               	xorlw	1	; case 11
  9555   003792  B4D8               	btfsc	status,2,c
  9556   003794  EF89  F01B         	goto	l5578
  9557   003798  0A07               	xorlw	7	; case 12
  9558   00379A  B4D8               	btfsc	status,2,c
  9559   00379C  EF8C  F01B         	goto	l5580
  9560   0037A0  EF8F  F01B         	goto	l5582
  9561   0037A4                     l488:
  9562   0037A4  0012               	return		;funcret
  9563   0037A6                     __end_of_ADC_configure_Channel:
  9564                           	callstack 0
  9565                           
  9566 ;; *************** function _Interrupt_manager *****************
  9567 ;; Defined at:
  9568 ;;		line 47 in file "MCAL_layer/Interrupt/mcal_Interrupt_manger.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;		None
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;		None
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  1    wreg      void 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9585 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9586 ;;Total ram usage:        4 bytes
  9587 ;; Hardware stack levels used: 1
  9588 ;; Hardware stack levels required when called: 3
  9589 ;; This function calls:
  9590 ;;		_ADC_ISR
  9591 ;;		_CCP1_ISR
  9592 ;;		_CCP2_ISR
  9593 ;;		_INT0_ISR
  9594 ;;		_INT1_ISR
  9595 ;;		_INT2_ISR
  9596 ;;		_RB4_ISR
  9597 ;;		_RB5_ISR
  9598 ;;		_RB6_ISR
  9599 ;;		_RB7_ISR
  9600 ;;		_TIMER0_ISR
  9601 ;;		_TIMER1_ISR
  9602 ;;		_TIMER2_ISR
  9603 ;;		_TIMER3_ISR
  9604 ;; This function is called by:
  9605 ;;		Interrupt level 2
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	intcode
  9610   000008                     __pintcode:
  9611                           	callstack 0
  9612   000008                     _Interrupt_manager:
  9613                           	callstack 18
  9614                           
  9615                           ;incstack = 0
  9616   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9617   00000A  ED21  F011         	call	int_func,f	;refresh shadow registers
  9618                           
  9619                           	psect	intcode_body
  9620   002242                     __pintcode_body:
  9621                           	callstack 18
  9622   002242                     int_func:
  9623                           	callstack 18
  9624   002242  0006               	pop		; remove dummy address from shadow register refresh
  9625   002244  CFFA F009          	movff	pclath,??_Interrupt_manager
  9626   002248  CFFB F00A          	movff	pclatu,??_Interrupt_manager+1
  9627   00224C  CFD9 F00B          	movff	fsr2l,??_Interrupt_manager+2
  9628   002250  CFDA F00C          	movff	fsr2h,??_Interrupt_manager+3
  9629   002254                     
  9630                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 50:     if((INTCONbits.INT0IE == 1)&&(INT
      +                          CONbits.INT0F == 1))
  9631   002254  A8F2               	btfss	242,4,c	;volatile
  9632   002256  EF2F  F011         	goto	i2u750_41
  9633   00225A  EF31  F011         	goto	i2u750_40
  9634   00225E                     i2u750_41:
  9635   00225E  EF3A  F011         	goto	i2l1028
  9636   002262                     i2u750_40:
  9637   002262  A2F2               	btfss	242,1,c	;volatile
  9638   002264  EF36  F011         	goto	i2u751_41
  9639   002268  EF38  F011         	goto	i2u751_40
  9640   00226C                     i2u751_41:
  9641   00226C  EF3A  F011         	goto	i2l1028
  9642   002270                     i2u751_40:
  9643   002270                     
  9644                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 51:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 52:         INT0_ISR();
  9645   002270  ECEF  F022         	call	_INT0_ISR	;wreg free
  9646   002274                     i2l1028:
  9647                           
  9648                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 56:     if((INTCON3bits.INT1IE == 1)&&(IN
      +                          TCON3bits.INT1F == 1))
  9649   002274  A6F0               	btfss	240,3,c	;volatile
  9650   002276  EF3F  F011         	goto	i2u752_41
  9651   00227A  EF41  F011         	goto	i2u752_40
  9652   00227E                     i2u752_41:
  9653   00227E  EF4A  F011         	goto	i2l1030
  9654   002282                     i2u752_40:
  9655   002282  A0F0               	btfss	240,0,c	;volatile
  9656   002284  EF46  F011         	goto	i2u753_41
  9657   002288  EF48  F011         	goto	i2u753_40
  9658   00228C                     i2u753_41:
  9659   00228C  EF4A  F011         	goto	i2l1030
  9660   002290                     i2u753_40:
  9661   002290                     
  9662                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 57:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 58:         INT1_ISR();
  9663   002290  ECED  F022         	call	_INT1_ISR	;wreg free
  9664   002294                     i2l1030:
  9665                           
  9666                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 62:     if((INTCON3bits.INT2IE == 1)&&(IN
      +                          TCON3bits.INT2IF == 1))
  9667   002294  A8F0               	btfss	240,4,c	;volatile
  9668   002296  EF4F  F011         	goto	i2u754_41
  9669   00229A  EF51  F011         	goto	i2u754_40
  9670   00229E                     i2u754_41:
  9671   00229E  EF5A  F011         	goto	i2l1032
  9672   0022A2                     i2u754_40:
  9673   0022A2  A2F0               	btfss	240,1,c	;volatile
  9674   0022A4  EF56  F011         	goto	i2u755_41
  9675   0022A8  EF58  F011         	goto	i2u755_40
  9676   0022AC                     i2u755_41:
  9677   0022AC  EF5A  F011         	goto	i2l1032
  9678   0022B0                     i2u755_40:
  9679   0022B0                     
  9680                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 63:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 64:         INT2_ISR();
  9681   0022B0  ECEB  F022         	call	_INT2_ISR	;wreg free
  9682   0022B4                     i2l1032:
  9683                           
  9684                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 71:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB4 == GPIO_HIGH)&&(RBx_flag[0] == 0))
  9685   0022B4  A6F2               	btfss	242,3,c	;volatile
  9686   0022B6  EF5F  F011         	goto	i2u756_41
  9687   0022BA  EF61  F011         	goto	i2u756_40
  9688   0022BE                     i2u756_41:
  9689   0022BE  EF7C  F011         	goto	i2l1034
  9690   0022C2                     i2u756_40:
  9691   0022C2  A0F2               	btfss	242,0,c	;volatile
  9692   0022C4  EF66  F011         	goto	i2u757_41
  9693   0022C8  EF68  F011         	goto	i2u757_40
  9694   0022CC                     i2u757_41:
  9695   0022CC  EF7C  F011         	goto	i2l1034
  9696   0022D0                     i2u757_40:
  9697   0022D0  A881               	btfss	129,4,c	;volatile
  9698   0022D2  EF6D  F011         	goto	i2u758_41
  9699   0022D6  EF6F  F011         	goto	i2u758_40
  9700   0022DA                     i2u758_41:
  9701   0022DA  EF7C  F011         	goto	i2l1034
  9702   0022DE                     i2u758_40:
  9703   0022DE  5067               	movf	_RBx_flag^0,w,c	;volatile
  9704   0022E0  A4D8               	btfss	status,2,c
  9705   0022E2  EF75  F011         	goto	i2u759_41
  9706   0022E6  EF77  F011         	goto	i2u759_40
  9707   0022EA                     i2u759_41:
  9708   0022EA  EF7C  F011         	goto	i2l1034
  9709   0022EE                     i2u759_40:
  9710   0022EE                     
  9711                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 72:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 73:         RBx_flag[0] = 1;
  9712   0022EE  0E01               	movlw	1
  9713   0022F0  6E67               	movwf	_RBx_flag^0,c	;volatile
  9714   0022F2                     
  9715                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 74:         RB4_ISR(0);
  9716   0022F2  0E00               	movlw	0
  9717   0022F4  ECAA  F022         	call	_RB4_ISR
  9718   0022F8                     i2l1034:
  9719                           
  9720                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 78:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB4 == GPIO_LOW)&&(RBx_flag[0] == 1))
  9721   0022F8  A6F2               	btfss	242,3,c	;volatile
  9722   0022FA  EF81  F011         	goto	i2u760_41
  9723   0022FE  EF83  F011         	goto	i2u760_40
  9724   002302                     i2u760_41:
  9725   002302  EF9E  F011         	goto	i2l1036
  9726   002306                     i2u760_40:
  9727   002306  A0F2               	btfss	242,0,c	;volatile
  9728   002308  EF88  F011         	goto	i2u761_41
  9729   00230C  EF8A  F011         	goto	i2u761_40
  9730   002310                     i2u761_41:
  9731   002310  EF9E  F011         	goto	i2l1036
  9732   002314                     i2u761_40:
  9733   002314  B881               	btfsc	129,4,c	;volatile
  9734   002316  EF8F  F011         	goto	i2u762_41
  9735   00231A  EF91  F011         	goto	i2u762_40
  9736   00231E                     i2u762_41:
  9737   00231E  EF9E  F011         	goto	i2l1036
  9738   002322                     i2u762_40:
  9739   002322  0467               	decf	_RBx_flag^0,w,c	;volatile
  9740   002324  A4D8               	btfss	status,2,c
  9741   002326  EF97  F011         	goto	i2u763_41
  9742   00232A  EF99  F011         	goto	i2u763_40
  9743   00232E                     i2u763_41:
  9744   00232E  EF9E  F011         	goto	i2l1036
  9745   002332                     i2u763_40:
  9746   002332                     
  9747                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 79:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 80:         RBx_flag[0] = 0;
  9748   002332  0E00               	movlw	0
  9749   002334  6E67               	movwf	_RBx_flag^0,c	;volatile
  9750   002336                     
  9751                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 81:         RB4_ISR(1);
  9752   002336  0E01               	movlw	1
  9753   002338  ECAA  F022         	call	_RB4_ISR
  9754   00233C                     i2l1036:
  9755                           
  9756                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 85:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB5 == GPIO_HIGH)&&(RBx_flag[1] == 0))
  9757   00233C  A6F2               	btfss	242,3,c	;volatile
  9758   00233E  EFA3  F011         	goto	i2u764_41
  9759   002342  EFA5  F011         	goto	i2u764_40
  9760   002346                     i2u764_41:
  9761   002346  EFC0  F011         	goto	i2l1038
  9762   00234A                     i2u764_40:
  9763   00234A  A0F2               	btfss	242,0,c	;volatile
  9764   00234C  EFAA  F011         	goto	i2u765_41
  9765   002350  EFAC  F011         	goto	i2u765_40
  9766   002354                     i2u765_41:
  9767   002354  EFC0  F011         	goto	i2l1038
  9768   002358                     i2u765_40:
  9769   002358  AA81               	btfss	129,5,c	;volatile
  9770   00235A  EFB1  F011         	goto	i2u766_41
  9771   00235E  EFB3  F011         	goto	i2u766_40
  9772   002362                     i2u766_41:
  9773   002362  EFC0  F011         	goto	i2l1038
  9774   002366                     i2u766_40:
  9775   002366  5068               	movf	(_RBx_flag+1)^0,w,c	;volatile
  9776   002368  A4D8               	btfss	status,2,c
  9777   00236A  EFB9  F011         	goto	i2u767_41
  9778   00236E  EFBB  F011         	goto	i2u767_40
  9779   002372                     i2u767_41:
  9780   002372  EFC0  F011         	goto	i2l1038
  9781   002376                     i2u767_40:
  9782   002376                     
  9783                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 86:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 87:         RBx_flag[1] = 1;
  9784   002376  0E01               	movlw	1
  9785   002378  6E68               	movwf	(_RBx_flag+1)^0,c	;volatile
  9786   00237A                     
  9787                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 88:         RB5_ISR(0);
  9788   00237A  0E00               	movlw	0
  9789   00237C  EC9D  F022         	call	_RB5_ISR
  9790   002380                     i2l1038:
  9791                           
  9792                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 92:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB5 == GPIO_LOW)&&(RBx_flag[1] == 1))
  9793   002380  A6F2               	btfss	242,3,c	;volatile
  9794   002382  EFC5  F011         	goto	i2u768_41
  9795   002386  EFC7  F011         	goto	i2u768_40
  9796   00238A                     i2u768_41:
  9797   00238A  EFE2  F011         	goto	i2l1040
  9798   00238E                     i2u768_40:
  9799   00238E  A0F2               	btfss	242,0,c	;volatile
  9800   002390  EFCC  F011         	goto	i2u769_41
  9801   002394  EFCE  F011         	goto	i2u769_40
  9802   002398                     i2u769_41:
  9803   002398  EFE2  F011         	goto	i2l1040
  9804   00239C                     i2u769_40:
  9805   00239C  BA81               	btfsc	129,5,c	;volatile
  9806   00239E  EFD3  F011         	goto	i2u770_41
  9807   0023A2  EFD5  F011         	goto	i2u770_40
  9808   0023A6                     i2u770_41:
  9809   0023A6  EFE2  F011         	goto	i2l1040
  9810   0023AA                     i2u770_40:
  9811   0023AA  0468               	decf	(_RBx_flag+1)^0,w,c	;volatile
  9812   0023AC  A4D8               	btfss	status,2,c
  9813   0023AE  EFDB  F011         	goto	i2u771_41
  9814   0023B2  EFDD  F011         	goto	i2u771_40
  9815   0023B6                     i2u771_41:
  9816   0023B6  EFE2  F011         	goto	i2l1040
  9817   0023BA                     i2u771_40:
  9818   0023BA                     
  9819                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 93:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 94:         RBx_flag[1] = 0;
  9820   0023BA  0E00               	movlw	0
  9821   0023BC  6E68               	movwf	(_RBx_flag+1)^0,c	;volatile
  9822   0023BE                     
  9823                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 95:         RB5_ISR(1);
  9824   0023BE  0E01               	movlw	1
  9825   0023C0  EC9D  F022         	call	_RB5_ISR
  9826   0023C4                     i2l1040:
  9827                           
  9828                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 99:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB6 == GPIO_HIGH)&&(RBx_flag[2] == 0))
  9829   0023C4  A6F2               	btfss	242,3,c	;volatile
  9830   0023C6  EFE7  F011         	goto	i2u772_41
  9831   0023CA  EFE9  F011         	goto	i2u772_40
  9832   0023CE                     i2u772_41:
  9833   0023CE  EF04  F012         	goto	i2l1042
  9834   0023D2                     i2u772_40:
  9835   0023D2  A0F2               	btfss	242,0,c	;volatile
  9836   0023D4  EFEE  F011         	goto	i2u773_41
  9837   0023D8  EFF0  F011         	goto	i2u773_40
  9838   0023DC                     i2u773_41:
  9839   0023DC  EF04  F012         	goto	i2l1042
  9840   0023E0                     i2u773_40:
  9841   0023E0  AC81               	btfss	129,6,c	;volatile
  9842   0023E2  EFF5  F011         	goto	i2u774_41
  9843   0023E6  EFF7  F011         	goto	i2u774_40
  9844   0023EA                     i2u774_41:
  9845   0023EA  EF04  F012         	goto	i2l1042
  9846   0023EE                     i2u774_40:
  9847   0023EE  5069               	movf	(_RBx_flag+2)^0,w,c	;volatile
  9848   0023F0  A4D8               	btfss	status,2,c
  9849   0023F2  EFFD  F011         	goto	i2u775_41
  9850   0023F6  EFFF  F011         	goto	i2u775_40
  9851   0023FA                     i2u775_41:
  9852   0023FA  EF04  F012         	goto	i2l1042
  9853   0023FE                     i2u775_40:
  9854   0023FE                     
  9855                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 100:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 101:         RBx_flag[2] = 1;
  9856   0023FE  0E01               	movlw	1
  9857   002400  6E69               	movwf	(_RBx_flag+2)^0,c	;volatile
  9858   002402                     
  9859                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 102:         RB6_ISR(0);
  9860   002402  0E00               	movlw	0
  9861   002404  EC90  F022         	call	_RB6_ISR
  9862   002408                     i2l1042:
  9863                           
  9864                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 106:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB6 == GPIO_LOW)&&(RBx_flag[2] == 1))
  9865   002408  A6F2               	btfss	242,3,c	;volatile
  9866   00240A  EF09  F012         	goto	i2u776_41
  9867   00240E  EF0B  F012         	goto	i2u776_40
  9868   002412                     i2u776_41:
  9869   002412  EF26  F012         	goto	i2l1044
  9870   002416                     i2u776_40:
  9871   002416  A0F2               	btfss	242,0,c	;volatile
  9872   002418  EF10  F012         	goto	i2u777_41
  9873   00241C  EF12  F012         	goto	i2u777_40
  9874   002420                     i2u777_41:
  9875   002420  EF26  F012         	goto	i2l1044
  9876   002424                     i2u777_40:
  9877   002424  BC81               	btfsc	129,6,c	;volatile
  9878   002426  EF17  F012         	goto	i2u778_41
  9879   00242A  EF19  F012         	goto	i2u778_40
  9880   00242E                     i2u778_41:
  9881   00242E  EF26  F012         	goto	i2l1044
  9882   002432                     i2u778_40:
  9883   002432  0469               	decf	(_RBx_flag+2)^0,w,c	;volatile
  9884   002434  A4D8               	btfss	status,2,c
  9885   002436  EF1F  F012         	goto	i2u779_41
  9886   00243A  EF21  F012         	goto	i2u779_40
  9887   00243E                     i2u779_41:
  9888   00243E  EF26  F012         	goto	i2l1044
  9889   002442                     i2u779_40:
  9890   002442                     
  9891                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 107:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 108:         RBx_flag[2] = 0;
  9892   002442  0E00               	movlw	0
  9893   002444  6E69               	movwf	(_RBx_flag+2)^0,c	;volatile
  9894   002446                     
  9895                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 109:         RB6_ISR(1);
  9896   002446  0E01               	movlw	1
  9897   002448  EC90  F022         	call	_RB6_ISR
  9898   00244C                     i2l1044:
  9899                           
  9900                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 113:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB7 == GPIO_HIGH)&&(RBx_flag[3] == 0))
  9901   00244C  A6F2               	btfss	242,3,c	;volatile
  9902   00244E  EF2B  F012         	goto	i2u780_41
  9903   002452  EF2D  F012         	goto	i2u780_40
  9904   002456                     i2u780_41:
  9905   002456  EF48  F012         	goto	i2l1046
  9906   00245A                     i2u780_40:
  9907   00245A  A0F2               	btfss	242,0,c	;volatile
  9908   00245C  EF32  F012         	goto	i2u781_41
  9909   002460  EF34  F012         	goto	i2u781_40
  9910   002464                     i2u781_41:
  9911   002464  EF48  F012         	goto	i2l1046
  9912   002468                     i2u781_40:
  9913   002468  AE81               	btfss	129,7,c	;volatile
  9914   00246A  EF39  F012         	goto	i2u782_41
  9915   00246E  EF3B  F012         	goto	i2u782_40
  9916   002472                     i2u782_41:
  9917   002472  EF48  F012         	goto	i2l1046
  9918   002476                     i2u782_40:
  9919   002476  506A               	movf	(_RBx_flag+3)^0,w,c	;volatile
  9920   002478  A4D8               	btfss	status,2,c
  9921   00247A  EF41  F012         	goto	i2u783_41
  9922   00247E  EF43  F012         	goto	i2u783_40
  9923   002482                     i2u783_41:
  9924   002482  EF48  F012         	goto	i2l1046
  9925   002486                     i2u783_40:
  9926   002486                     
  9927                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 114:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 115:         RBx_flag[3] = 1;
  9928   002486  0E01               	movlw	1
  9929   002488  6E6A               	movwf	(_RBx_flag+3)^0,c	;volatile
  9930   00248A                     
  9931                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 116:         RB7_ISR(0);
  9932   00248A  0E00               	movlw	0
  9933   00248C  EC83  F022         	call	_RB7_ISR
  9934   002490                     i2l1046:
  9935                           
  9936                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 120:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB7 == GPIO_LOW)&&(RBx_flag[3] == 1))
  9937   002490  A6F2               	btfss	242,3,c	;volatile
  9938   002492  EF4D  F012         	goto	i2u784_41
  9939   002496  EF4F  F012         	goto	i2u784_40
  9940   00249A                     i2u784_41:
  9941   00249A  EF6A  F012         	goto	i2l1048
  9942   00249E                     i2u784_40:
  9943   00249E  A0F2               	btfss	242,0,c	;volatile
  9944   0024A0  EF54  F012         	goto	i2u785_41
  9945   0024A4  EF56  F012         	goto	i2u785_40
  9946   0024A8                     i2u785_41:
  9947   0024A8  EF6A  F012         	goto	i2l1048
  9948   0024AC                     i2u785_40:
  9949   0024AC  BE81               	btfsc	129,7,c	;volatile
  9950   0024AE  EF5B  F012         	goto	i2u786_41
  9951   0024B2  EF5D  F012         	goto	i2u786_40
  9952   0024B6                     i2u786_41:
  9953   0024B6  EF6A  F012         	goto	i2l1048
  9954   0024BA                     i2u786_40:
  9955   0024BA  046A               	decf	(_RBx_flag+3)^0,w,c	;volatile
  9956   0024BC  A4D8               	btfss	status,2,c
  9957   0024BE  EF63  F012         	goto	i2u787_41
  9958   0024C2  EF65  F012         	goto	i2u787_40
  9959   0024C6                     i2u787_41:
  9960   0024C6  EF6A  F012         	goto	i2l1048
  9961   0024CA                     i2u787_40:
  9962   0024CA                     
  9963                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 121:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 122:         RBx_flag[3] = 0;
  9964   0024CA  0E00               	movlw	0
  9965   0024CC  6E6A               	movwf	(_RBx_flag+3)^0,c	;volatile
  9966   0024CE                     
  9967                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 123:         RB7_ISR(1);
  9968   0024CE  0E01               	movlw	1
  9969   0024D0  EC83  F022         	call	_RB7_ISR
  9970   0024D4                     i2l1048:
  9971                           
  9972                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 131:     if((PIE1bits.ADIE == 1)&&(PIR1bi
      +                          ts.ADIF == 1))
  9973   0024D4  AC9D               	btfss	157,6,c	;volatile
  9974   0024D6  EF6F  F012         	goto	i2u788_41
  9975   0024DA  EF71  F012         	goto	i2u788_40
  9976   0024DE                     i2u788_41:
  9977   0024DE  EF7A  F012         	goto	i2l1050
  9978   0024E2                     i2u788_40:
  9979   0024E2  AC9E               	btfss	158,6,c	;volatile
  9980   0024E4  EF76  F012         	goto	i2u789_41
  9981   0024E8  EF78  F012         	goto	i2u789_40
  9982   0024EC                     i2u789_41:
  9983   0024EC  EF7A  F012         	goto	i2l1050
  9984   0024F0                     i2u789_40:
  9985   0024F0                     
  9986                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 132:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 133:         ADC_ISR();
  9987   0024F0  EC38  F022         	call	_ADC_ISR	;wreg free
  9988   0024F4                     i2l1050:
  9989                           
  9990                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 140:     if((INTCONbits.TMR0IE == 1)&&(IN
      +                          TCONbits.TMR0IF == 1))
  9991   0024F4  AAF2               	btfss	242,5,c	;volatile
  9992   0024F6  EF7F  F012         	goto	i2u790_41
  9993   0024FA  EF81  F012         	goto	i2u790_40
  9994   0024FE                     i2u790_41:
  9995   0024FE  EF8A  F012         	goto	i2l1052
  9996   002502                     i2u790_40:
  9997   002502  A4F2               	btfss	242,2,c	;volatile
  9998   002504  EF86  F012         	goto	i2u791_41
  9999   002508  EF88  F012         	goto	i2u791_40
 10000   00250C                     i2u791_41:
 10001   00250C  EF8A  F012         	goto	i2l1052
 10002   002510                     i2u791_40:
 10003   002510                     
 10004                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 141:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 142:         TIMER0_ISR();
 10005   002510  ECDB  F022         	call	_TIMER0_ISR	;wreg free
 10006   002514                     i2l1052:
 10007                           
 10008                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 149:     if((PIE1bits.TMR1IE == 1)&&(PIR1
      +                          bits.TMR1IF == 1))
 10009   002514  A09D               	btfss	157,0,c	;volatile
 10010   002516  EF8F  F012         	goto	i2u792_41
 10011   00251A  EF91  F012         	goto	i2u792_40
 10012   00251E                     i2u792_41:
 10013   00251E  EF9A  F012         	goto	i2l1054
 10014   002522                     i2u792_40:
 10015   002522  A09E               	btfss	158,0,c	;volatile
 10016   002524  EF96  F012         	goto	i2u793_41
 10017   002528  EF98  F012         	goto	i2u793_40
 10018   00252C                     i2u793_41:
 10019   00252C  EF9A  F012         	goto	i2l1054
 10020   002530                     i2u793_40:
 10021   002530                     
 10022                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 150:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 151:         TIMER1_ISR();
 10023   002530  ECD4  F022         	call	_TIMER1_ISR	;wreg free
 10024   002534                     i2l1054:
 10025                           
 10026                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 158:     if((PIE1bits.TMR2IE == 1)&&(PIR1
      +                          bits.TMR2IF == 1))
 10027   002534  A29D               	btfss	157,1,c	;volatile
 10028   002536  EF9F  F012         	goto	i2u794_41
 10029   00253A  EFA1  F012         	goto	i2u794_40
 10030   00253E                     i2u794_41:
 10031   00253E  EFAA  F012         	goto	i2l1056
 10032   002542                     i2u794_40:
 10033   002542  A29E               	btfss	158,1,c	;volatile
 10034   002544  EFA6  F012         	goto	i2u795_41
 10035   002548  EFA8  F012         	goto	i2u795_40
 10036   00254C                     i2u795_41:
 10037   00254C  EFAA  F012         	goto	i2l1056
 10038   002550                     i2u795_40:
 10039   002550                     
 10040                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 159:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 160:         TIMER2_ISR();
 10041   002550  ECE7  F022         	call	_TIMER2_ISR	;wreg free
 10042   002554                     i2l1056:
 10043                           
 10044                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 167:     if((PIE2bits.TMR3IE == 1)&&(PIR2
      +                          bits.TMR3IF == 1))
 10045   002554  A2A0               	btfss	160,1,c	;volatile
 10046   002556  EFAF  F012         	goto	i2u796_41
 10047   00255A  EFB1  F012         	goto	i2u796_40
 10048   00255E                     i2u796_41:
 10049   00255E  EFBA  F012         	goto	i2l1058
 10050   002562                     i2u796_40:
 10051   002562  A2A1               	btfss	161,1,c	;volatile
 10052   002564  EFB6  F012         	goto	i2u797_41
 10053   002568  EFB8  F012         	goto	i2u797_40
 10054   00256C                     i2u797_41:
 10055   00256C  EFBA  F012         	goto	i2l1058
 10056   002570                     i2u797_40:
 10057   002570                     
 10058                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 168:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 169:         TIMER3_ISR();
 10059   002570  ECCD  F022         	call	_TIMER3_ISR	;wreg free
 10060   002574                     i2l1058:
 10061                           
 10062                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 175:     if((PIE1bits.CCP1IE == 1)&&(PIR1
      +                          bits.CCP1IF == 1))
 10063   002574  A49D               	btfss	157,2,c	;volatile
 10064   002576  EFBF  F012         	goto	i2u798_41
 10065   00257A  EFC1  F012         	goto	i2u798_40
 10066   00257E                     i2u798_41:
 10067   00257E  EFCA  F012         	goto	i2l1060
 10068   002582                     i2u798_40:
 10069   002582  A49E               	btfss	158,2,c	;volatile
 10070   002584  EFC6  F012         	goto	i2u799_41
 10071   002588  EFC8  F012         	goto	i2u799_40
 10072   00258C                     i2u799_41:
 10073   00258C  EFCA  F012         	goto	i2l1060
 10074   002590                     i2u799_40:
 10075   002590                     
 10076                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 176:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 177:         CCP1_ISR();
 10077   002590  ECF3  F022         	call	_CCP1_ISR	;wreg free
 10078   002594                     i2l1060:
 10079                           
 10080                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 184:     if((PIE2bits.CCP2IE == 1)&&(PIR2
      +                          bits.CCP2IF == 1))
 10081   002594  A0A0               	btfss	160,0,c	;volatile
 10082   002596  EFCF  F012         	goto	i2u800_41
 10083   00259A  EFD1  F012         	goto	i2u800_40
 10084   00259E                     i2u800_41:
 10085   00259E  EFDA  F012         	goto	i2l1063
 10086   0025A2                     i2u800_40:
 10087   0025A2  A0A1               	btfss	161,0,c	;volatile
 10088   0025A4  EFD6  F012         	goto	i2u801_41
 10089   0025A8  EFD8  F012         	goto	i2u801_40
 10090   0025AC                     i2u801_41:
 10091   0025AC  EFDA  F012         	goto	i2l1063
 10092   0025B0                     i2u801_40:
 10093   0025B0                     
 10094                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 185:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 186:         CCP2_ISR();
 10095   0025B0  ECF1  F022         	call	_CCP2_ISR	;wreg free
 10096   0025B4                     i2l1063:
 10097   0025B4  C00C  FFDA         	movff	??_Interrupt_manager+3,fsr2h
 10098   0025B8  C00B  FFD9         	movff	??_Interrupt_manager+2,fsr2l
 10099   0025BC  C00A  FFFB         	movff	??_Interrupt_manager+1,pclatu
 10100   0025C0  C009  FFFA         	movff	??_Interrupt_manager,pclath
 10101   0025C4  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10102   0025C6  0011               	retfie		f
 10103   0025C8                     __end_of_Interrupt_manager:
 10104                           	callstack 0
 10105                           
 10106 ;; *************** function _TIMER3_ISR *****************
 10107 ;; Defined at:
 10108 ;;		line 115 in file "MCAL_layer/Timer3/Timer3.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;		None
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;		None
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;Total ram usage:        0 bytes
 10127 ;; Hardware stack levels used: 1
 10128 ;; This function calls:
 10129 ;;		Nothing
 10130 ;; This function is called by:
 10131 ;;		_Interrupt_manager
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text47
 10136   00459A                     __ptext47:
 10137                           	callstack 0
 10138   00459A                     _TIMER3_ISR:
 10139                           	callstack 20
 10140   00459A                     
 10141                           ;MCAL_layer/Timer3/Timer3.c: 117:     (PIR2bits.TMR3IF = 0);
 10142   00459A  92A1               	bcf	161,1,c	;volatile
 10143   00459C                     
 10144                           ;MCAL_layer/Timer3/Timer3.c: 118:     TMR3H = (uint8)(timer3_preload>>8);
 10145   00459C  0100               	movlb	0	; () banked
 10146   00459E  519B               	movf	(_timer3_preload+1)& (0+255),w,b
 10147   0045A0  6EB3               	movwf	179,c	;volatile
 10148   0045A2                     
 10149                           ; BSR set to: 0
 10150                           ;MCAL_layer/Timer3/Timer3.c: 119:     TMR3L = (uint8)(timer3_preload);
 10151   0045A2  C09A  FFB2         	movff	_timer3_preload,4018	;volatile
 10152   0045A6                     
 10153                           ; BSR set to: 0
 10154   0045A6  0012               	return		;funcret
 10155   0045A8                     __end_of_TIMER3_ISR:
 10156                           	callstack 0
 10157                           
 10158 ;; *************** function _TIMER2_ISR *****************
 10159 ;; Defined at:
 10160 ;;		line 103 in file "MCAL_layer/Timer2/Timer2.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;		None
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		None
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:        0 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_Interrupt_manager
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text48
 10188   0045CE                     __ptext48:
 10189                           	callstack 0
 10190   0045CE                     _TIMER2_ISR:
 10191                           	callstack 20
 10192   0045CE                     
 10193                           ;MCAL_layer/Timer2/Timer2.c: 105:     (PIR1bits.TMR2IF = 0);
 10194   0045CE  929E               	bcf	158,1,c	;volatile
 10195                           
 10196                           ;MCAL_layer/Timer2/Timer2.c: 106:     TMR2 = timer2_preload;
 10197   0045D0  C0B1  FFCC         	movff	_timer2_preload,4044	;volatile
 10198   0045D4  0012               	return		;funcret
 10199   0045D6                     __end_of_TIMER2_ISR:
 10200                           	callstack 0
 10201                           
 10202 ;; *************** function _TIMER1_ISR *****************
 10203 ;; Defined at:
 10204 ;;		line 116 in file "MCAL_layer/Timer1/Timer1.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used: 1
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_Interrupt_manager
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           	psect	text49
 10232   0045A8                     __ptext49:
 10233                           	callstack 0
 10234   0045A8                     _TIMER1_ISR:
 10235                           	callstack 20
 10236   0045A8                     
 10237                           ;MCAL_layer/Timer1/Timer1.c: 118:     (PIR1bits.TMR1IF = 0);
 10238   0045A8  909E               	bcf	158,0,c	;volatile
 10239   0045AA                     
 10240                           ;MCAL_layer/Timer1/Timer1.c: 119:     TMR1H = (uint8)(timer1_preload>>8);
 10241   0045AA  0100               	movlb	0	; () banked
 10242   0045AC  51A1               	movf	(_timer1_preload+1)& (0+255),w,b
 10243   0045AE  6ECF               	movwf	207,c	;volatile
 10244   0045B0                     
 10245                           ; BSR set to: 0
 10246                           ;MCAL_layer/Timer1/Timer1.c: 120:     TMR1L = (uint8)(timer1_preload);
 10247   0045B0  C0A0  FFCE         	movff	_timer1_preload,4046	;volatile
 10248   0045B4                     
 10249                           ; BSR set to: 0
 10250   0045B4  0012               	return		;funcret
 10251   0045B6                     __end_of_TIMER1_ISR:
 10252                           	callstack 0
 10253                           
 10254 ;; *************** function _TIMER0_ISR *****************
 10255 ;; Defined at:
 10256 ;;		line 238 in file "MCAL_layer/Timer0/Timer0.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;		None
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      void 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;Total ram usage:        0 bytes
 10275 ;; Hardware stack levels used: 1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_Interrupt_manager
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text50
 10284   0045B6                     __ptext50:
 10285                           	callstack 0
 10286   0045B6                     _TIMER0_ISR:
 10287                           	callstack 20
 10288   0045B6                     
 10289                           ;MCAL_layer/Timer0/Timer0.c: 240:     (INTCONbits.TMR0IF = 0);
 10290   0045B6  94F2               	bcf	242,2,c	;volatile
 10291   0045B8                     
 10292                           ;MCAL_layer/Timer0/Timer0.c: 241:     TMR0H = (uint8)(timer0_preload>>8);
 10293   0045B8  0100               	movlb	0	; () banked
 10294   0045BA  51A5               	movf	(_timer0_preload+1)& (0+255),w,b
 10295   0045BC  6ED7               	movwf	215,c	;volatile
 10296   0045BE                     
 10297                           ; BSR set to: 0
 10298                           ;MCAL_layer/Timer0/Timer0.c: 242:     TMR0L = (uint8)(timer0_preload);
 10299   0045BE  C0A4  FFD6         	movff	_timer0_preload,4054	;volatile
 10300   0045C2                     
 10301                           ; BSR set to: 0
 10302   0045C2  0012               	return		;funcret
 10303   0045C4                     __end_of_TIMER0_ISR:
 10304                           	callstack 0
 10305                           
 10306 ;; *************** function _RB7_ISR *****************
 10307 ;; Defined at:
 10308 ;;		line 204 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  RB7_source      1    wreg     unsigned char 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;  RB7_source      1    0[COMRAM] unsigned char 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;Total ram usage:        1 bytes
 10327 ;; Hardware stack levels used: 1
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_Interrupt_manager
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text51
 10336   004506                     __ptext51:
 10337                           	callstack 0
 10338   004506                     _RB7_ISR:
 10339                           	callstack 20
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;incstack = 0
 10343                           ;RB7_ISR@RB7_source stored from wreg
 10344   004506  6E01               	movwf	RB7_ISR@RB7_source^0,c
 10345   004508                     
 10346                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 204: void RB7_ISR(uint8 RB7_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 205: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 206:     (INTCONbits.RBIF = 0);
 10347   004508  90F2               	bcf	242,0,c	;volatile
 10348   00450A                     
 10349                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 207:     if(RB7_source == 0)
 10350   00450A  5001               	movf	RB7_ISR@RB7_source^0,w,c
 10351   00450C  A4D8               	btfss	status,2,c
 10352   00450E  EF8B  F022         	goto	i2u659_41
 10353   004512  EF8D  F022         	goto	i2u659_40
 10354   004516                     i2u659_41:
 10355   004516  EF8F  F022         	goto	i2l6914
 10356   00451A                     i2u659_40:
 10357   00451A  EF8F  F022         	goto	i2l881
 10358   00451E                     i2l6914:
 10359   00451E                     i2l881:
 10360   00451E  0012               	return		;funcret
 10361   004520                     __end_of_RB7_ISR:
 10362                           	callstack 0
 10363                           
 10364 ;; *************** function _RB6_ISR *****************
 10365 ;; Defined at:
 10366 ;;		line 184 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  RB6_source      1    wreg     unsigned char 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;  RB6_source      1    0[COMRAM] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2, status,0
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        1 bytes
 10385 ;; Hardware stack levels used: 1
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_Interrupt_manager
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text52
 10394   004520                     __ptext52:
 10395                           	callstack 0
 10396   004520                     _RB6_ISR:
 10397                           	callstack 20
 10398                           
 10399                           ;incstack = 0
 10400                           ;RB6_ISR@RB6_source stored from wreg
 10401   004520  6E01               	movwf	RB6_ISR@RB6_source^0,c
 10402   004522                     
 10403                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 184: void RB6_ISR(uint8 RB6_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 185: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 186:     (INTCONbits.RBIF = 0);
 10404   004522  90F2               	bcf	242,0,c	;volatile
 10405   004524                     
 10406                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 187:     if(RB6_source == 0)
 10407   004524  5001               	movf	RB6_ISR@RB6_source^0,w,c
 10408   004526  A4D8               	btfss	status,2,c
 10409   004528  EF98  F022         	goto	i2u658_41
 10410   00452C  EF9A  F022         	goto	i2u658_40
 10411   004530                     i2u658_41:
 10412   004530  EF9C  F022         	goto	i2l6904
 10413   004534                     i2u658_40:
 10414   004534  EF9C  F022         	goto	i2l873
 10415   004538                     i2l6904:
 10416   004538                     i2l873:
 10417   004538  0012               	return		;funcret
 10418   00453A                     __end_of_RB6_ISR:
 10419                           	callstack 0
 10420                           
 10421 ;; *************** function _RB5_ISR *****************
 10422 ;; Defined at:
 10423 ;;		line 164 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;  RB5_source      1    wreg     unsigned char 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  RB5_source      1    0[COMRAM] unsigned char 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, status,2, status,0
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;Total ram usage:        1 bytes
 10442 ;; Hardware stack levels used: 1
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_Interrupt_manager
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text53
 10451   00453A                     __ptext53:
 10452                           	callstack 0
 10453   00453A                     _RB5_ISR:
 10454                           	callstack 20
 10455                           
 10456                           ;incstack = 0
 10457                           ;RB5_ISR@RB5_source stored from wreg
 10458   00453A  6E01               	movwf	RB5_ISR@RB5_source^0,c
 10459   00453C                     
 10460                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 164: void RB5_ISR(uint8 RB5_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 165: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 166:     (INTCONbits.RBIF = 0);
 10461   00453C  90F2               	bcf	242,0,c	;volatile
 10462   00453E                     
 10463                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 167:     if(RB5_source == 0)
 10464   00453E  5001               	movf	RB5_ISR@RB5_source^0,w,c
 10465   004540  A4D8               	btfss	status,2,c
 10466   004542  EFA5  F022         	goto	i2u657_41
 10467   004546  EFA7  F022         	goto	i2u657_40
 10468   00454A                     i2u657_41:
 10469   00454A  EFA9  F022         	goto	i2l6894
 10470   00454E                     i2u657_40:
 10471   00454E  EFA9  F022         	goto	i2l865
 10472   004552                     i2l6894:
 10473   004552                     i2l865:
 10474   004552  0012               	return		;funcret
 10475   004554                     __end_of_RB5_ISR:
 10476                           	callstack 0
 10477                           
 10478 ;; *************** function _RB4_ISR *****************
 10479 ;; Defined at:
 10480 ;;		line 144 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  RB4_source      1    wreg     unsigned char 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;  RB4_source      1    0[COMRAM] unsigned char 
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2, status,0
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10498 ;;Total ram usage:        1 bytes
 10499 ;; Hardware stack levels used: 1
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_Interrupt_manager
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text54
 10508   004554                     __ptext54:
 10509                           	callstack 0
 10510   004554                     _RB4_ISR:
 10511                           	callstack 20
 10512                           
 10513                           ;incstack = 0
 10514                           ;RB4_ISR@RB4_source stored from wreg
 10515   004554  6E01               	movwf	RB4_ISR@RB4_source^0,c
 10516   004556                     
 10517                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 144: void RB4_ISR(uint8 RB4_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 145: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 146:     (INTCONbits.RBIF = 0);
 10518   004556  90F2               	bcf	242,0,c	;volatile
 10519   004558                     
 10520                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 147:     if(RB4_source == 0)
 10521   004558  5001               	movf	RB4_ISR@RB4_source^0,w,c
 10522   00455A  A4D8               	btfss	status,2,c
 10523   00455C  EFB2  F022         	goto	i2u656_41
 10524   004560  EFB4  F022         	goto	i2u656_40
 10525   004564                     i2u656_41:
 10526   004564  EFB6  F022         	goto	i2l6884
 10527   004568                     i2u656_40:
 10528   004568  EFB6  F022         	goto	i2l857
 10529   00456C                     i2l6884:
 10530   00456C                     i2l857:
 10531   00456C  0012               	return		;funcret
 10532   00456E                     __end_of_RB4_ISR:
 10533                           	callstack 0
 10534                           
 10535 ;; *************** function _INT2_ISR *****************
 10536 ;; Defined at:
 10537 ;;		line 81 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		None
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used: 1
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_Interrupt_manager
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           	psect	text55
 10565   0045D6                     __ptext55:
 10566                           	callstack 0
 10567   0045D6                     _INT2_ISR:
 10568                           	callstack 20
 10569   0045D6                     
 10570                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 84:     (INTCON3bits.INT2IF = 0);
 10571   0045D6  92F0               	bcf	240,1,c	;volatile
 10572   0045D8  0012               	return		;funcret
 10573   0045DA                     __end_of_INT2_ISR:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function _INT1_ISR *****************
 10577 ;; Defined at:
 10578 ;;		line 68 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		None
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10596 ;;Total ram usage:        0 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_Interrupt_manager
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text56
 10606   0045DA                     __ptext56:
 10607                           	callstack 0
 10608   0045DA                     _INT1_ISR:
 10609                           	callstack 20
 10610   0045DA                     
 10611                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 71:     (INTCON3bits.INT1IF = 0);
 10612   0045DA  90F0               	bcf	240,0,c	;volatile
 10613   0045DC  0012               	return		;funcret
 10614   0045DE                     __end_of_INT1_ISR:
 10615                           	callstack 0
 10616                           
 10617 ;; *************** function _INT0_ISR *****************
 10618 ;; Defined at:
 10619 ;;		line 55 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;		None
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		None
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;Total ram usage:        0 bytes
 10638 ;; Hardware stack levels used: 1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_Interrupt_manager
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text57
 10647   0045DE                     __ptext57:
 10648                           	callstack 0
 10649   0045DE                     _INT0_ISR:
 10650                           	callstack 20
 10651   0045DE                     
 10652                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 58:     (INTCONbits.INT0IF = 0);
 10653   0045DE  92F2               	bcf	242,1,c	;volatile
 10654   0045E0  0012               	return		;funcret
 10655   0045E2                     __end_of_INT0_ISR:
 10656                           	callstack 0
 10657                           
 10658 ;; *************** function _CCP2_ISR *****************
 10659 ;; Defined at:
 10660 ;;		line 448 in file "MCAL_layer/CCP/CCP1.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;		None
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;		None
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		None
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;Total ram usage:        0 bytes
 10679 ;; Hardware stack levels used: 1
 10680 ;; This function calls:
 10681 ;;		Nothing
 10682 ;; This function is called by:
 10683 ;;		_Interrupt_manager
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	text58
 10688   0045E2                     __ptext58:
 10689                           	callstack 0
 10690   0045E2                     _CCP2_ISR:
 10691                           	callstack 20
 10692   0045E2                     
 10693                           ;MCAL_layer/CCP/CCP1.c: 450:     (PIR2bits.CCP2IF = 0);
 10694   0045E2  90A1               	bcf	161,0,c	;volatile
 10695   0045E4  0012               	return		;funcret
 10696   0045E6                     __end_of_CCP2_ISR:
 10697                           	callstack 0
 10698                           
 10699 ;; *************** function _CCP1_ISR *****************
 10700 ;; Defined at:
 10701 ;;		line 439 in file "MCAL_layer/CCP/CCP1.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		None
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;Total ram usage:        0 bytes
 10720 ;; Hardware stack levels used: 1
 10721 ;; This function calls:
 10722 ;;		Nothing
 10723 ;; This function is called by:
 10724 ;;		_Interrupt_manager
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text59
 10729   0045E6                     __ptext59:
 10730                           	callstack 0
 10731   0045E6                     _CCP1_ISR:
 10732                           	callstack 20
 10733   0045E6                     
 10734                           ;MCAL_layer/CCP/CCP1.c: 441:     (PIR1bits.CCP1IF = 0);
 10735   0045E6  949E               	bcf	158,2,c	;volatile
 10736   0045E8  0012               	return		;funcret
 10737   0045EA                     __end_of_CCP1_ISR:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function _ADC_ISR *****************
 10741 ;; Defined at:
 10742 ;;		line 305 in file "MCAL_layer/ADC/hal_ADC.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;		None
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10760 ;;Total ram usage:        0 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; Hardware stack levels required when called: 2
 10763 ;; This function calls:
 10764 ;;		NULL
 10765 ;;		_ADC_callback
 10766 ;; This function is called by:
 10767 ;;		_Interrupt_manager
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text60
 10772   004470                     __ptext60:
 10773                           	callstack 0
 10774   004470                     _ADC_ISR:
 10775                           	callstack 18
 10776   004470                     
 10777                           ;MCAL_layer/ADC/hal_ADC.c: 307:     (PIR1bits.ADIF = 0);
 10778   004470  9C9E               	bcf	158,6,c	;volatile
 10779   004472                     
 10780                           ;MCAL_layer/ADC/hal_ADC.c: 308:     if(ADC_InterruptCallBack != ((void*)0))
 10781   004472  0100               	movlb	0	; () banked
 10782   004474  51AE               	movf	_ADC_InterruptCallBack& (0+255),w,b
 10783   004476  11AF               	iorwf	(_ADC_InterruptCallBack+1)& (0+255),w,b
 10784   004478  B4D8               	btfsc	status,2,c
 10785   00447A  EF41  F022         	goto	i2u645_41
 10786   00447E  EF43  F022         	goto	i2u645_40
 10787   004482                     i2u645_41:
 10788   004482  EF4F  F022         	goto	i2l492
 10789   004486                     i2u645_40:
 10790   004486                     
 10791                           ; BSR set to: 0
 10792                           ;MCAL_layer/ADC/hal_ADC.c: 309:     {;MCAL_layer/ADC/hal_ADC.c: 310:         ADC_Interru
      +                          ptCallBack();
 10793   004486  D802               	call	i2u646_48
 10794   004488  EF4F  F022         	goto	i2u646_49
 10795   00448C                     i2u646_48:
 10796   00448C  0005               	push	
 10797   00448E  6EFA               	movwf	pclath,c
 10798   004490  51AE               	movf	_ADC_InterruptCallBack& (0+255),w,b
 10799   004492  6EFD               	movwf	tosl,c
 10800   004494  51AF               	movf	(_ADC_InterruptCallBack+1)& (0+255),w,b
 10801   004496  6EFE               	movwf	tosh,c
 10802   004498  6AFF               	clrf	tosu,c
 10803   00449A  50FA               	movf	pclath,w,c
 10804   00449C  0012               	return		;indir
 10805   00449E                     i2u646_49:
 10806   00449E                     i2l492:
 10807   00449E  0012               	return		;funcret
 10808   0044A0                     __end_of_ADC_ISR:
 10809                           	callstack 0
 10810                           
 10811 ;; *************** function _ADC_callback *****************
 10812 ;; Defined at:
 10813 ;;		line 46 in file "MCAL_layer/Mcal_Initialize.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;		None
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;		None
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      void 
 10820 ;; Registers used:
 10821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10831 ;;Total ram usage:        0 bytes
 10832 ;; Hardware stack levels used: 1
 10833 ;; Hardware stack levels required when called: 1
 10834 ;; This function calls:
 10835 ;;		_ADC_Read_Result
 10836 ;; This function is called by:
 10837 ;;		_ADC_ISR
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text61
 10842   00456E                     __ptext61:
 10843                           	callstack 0
 10844   00456E                     _ADC_callback:
 10845                           	callstack 18
 10846   00456E                     
 10847                           ;MCAL_layer/Mcal_Initialize.c: 48:     ADC_Read_Result(&Lm35,&res1);
 10848   00456E  0EEA               	movlw	low _Lm35
 10849   004570  6E01               	movwf	ADC_Read_Result@ADC_obj^0,c
 10850   004572  0E00               	movlw	high _Lm35
 10851   004574  6E02               	movwf	(ADC_Read_Result@ADC_obj+1)^0,c
 10852   004576  0EBA               	movlw	low _res1
 10853   004578  6E03               	movwf	ADC_Read_Result@Resualt^0,c
 10854   00457A  0E00               	movlw	high _res1
 10855   00457C  6E04               	movwf	(ADC_Read_Result@Resualt+1)^0,c
 10856   00457E  ECB0  F01D         	call	_ADC_Read_Result	;wreg free
 10857   004582                     
 10858                           ;MCAL_layer/Mcal_Initialize.c: 49:     Flag = 0;
 10859   004582  0E00               	movlw	0
 10860   004584  6E6D               	movwf	_Flag^0,c	;volatile
 10861   004586  0012               	return		;funcret
 10862   004588                     __end_of_ADC_callback:
 10863                           	callstack 0
 10864                           
 10865 ;; *************** function _ADC_Read_Result *****************
 10866 ;; Defined at:
 10867 ;;		line 178 in file "MCAL_layer/ADC/hal_ADC.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  ADC_obj         2    0[COMRAM] PTR const struct .
 10870 ;;		 -> Lm35(7), 
 10871 ;;  Resualt         2    2[COMRAM] PTR unsigned short 
 10872 ;;		 -> res1(2), 
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;  ret             1    7[COMRAM] unsigned char 
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      unsigned char 
 10877 ;; Registers used:
 10878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10886 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10888 ;;Total ram usage:        8 bytes
 10889 ;; Hardware stack levels used: 1
 10890 ;; This function calls:
 10891 ;;		Nothing
 10892 ;; This function is called by:
 10893 ;;		_ADC_callback
 10894 ;;		_ADC_GetConversion_Blocking
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           	psect	text62
 10899   003B60                     __ptext62:
 10900                           	callstack 0
 10901   003B60                     _ADC_Read_Result:
 10902                           	callstack 18
 10903   003B60                     
 10904                           ;MCAL_layer/ADC/hal_ADC.c: 178: Std_ReturnType ADC_Read_Result(const ADC_t* ADC_obj,uint
      +                          16 *Resualt);MCAL_layer/ADC/hal_ADC.c: 179: {;MCAL_layer/ADC/hal_ADC.c: 180:     Std_Ret
      +                          urnType ret = (Std_ReturnType)0x01;
 10905   003B60  0E01               	movlw	1
 10906   003B62  6E08               	movwf	ADC_Read_Result@ret^0,c
 10907   003B64                     
 10908                           ;MCAL_layer/ADC/hal_ADC.c: 181:     if((ADC_obj == ((void*)0))||(Resualt == ((void*)0)))
 10909   003B64  5001               	movf	ADC_Read_Result@ADC_obj^0,w,c
 10910   003B66  1002               	iorwf	(ADC_Read_Result@ADC_obj+1)^0,w,c
 10911   003B68  B4D8               	btfsc	status,2,c
 10912   003B6A  EFB9  F01D         	goto	i2u594_41
 10913   003B6E  EFBB  F01D         	goto	i2u594_40
 10914   003B72                     i2u594_41:
 10915   003B72  EFC4  F01D         	goto	i2l6308
 10916   003B76                     i2u594_40:
 10917   003B76  5003               	movf	ADC_Read_Result@Resualt^0,w,c
 10918   003B78  1004               	iorwf	(ADC_Read_Result@Resualt+1)^0,w,c
 10919   003B7A  A4D8               	btfss	status,2,c
 10920   003B7C  EFC2  F01D         	goto	i2u595_41
 10921   003B80  EFC4  F01D         	goto	i2u595_40
 10922   003B84                     i2u595_41:
 10923   003B84  EFC8  F01D         	goto	i2l6310
 10924   003B88                     i2u595_40:
 10925   003B88                     i2l6308:
 10926                           
 10927                           ;MCAL_layer/ADC/hal_ADC.c: 182:     {;MCAL_layer/ADC/hal_ADC.c: 183:         ret = (Std_
      +                          ReturnType)0x00;
 10928   003B88  0E00               	movlw	0
 10929   003B8A  6E08               	movwf	ADC_Read_Result@ret^0,c
 10930                           
 10931                           ;MCAL_layer/ADC/hal_ADC.c: 184:     }
 10932   003B8C  EF06  F01E         	goto	i2l6320
 10933   003B90                     i2l6310:
 10934                           
 10935                           ;MCAL_layer/ADC/hal_ADC.c: 186:     {;MCAL_layer/ADC/hal_ADC.c: 187:         if(ADC_obj-
      +                          >Result_format == 1U)
 10936   003B90  EE20 F006          	lfsr	2,6
 10937   003B94  5001               	movf	ADC_Read_Result@ADC_obj^0,w,c
 10938   003B96  26D9               	addwf	fsr2l,f,c
 10939   003B98  5002               	movf	(ADC_Read_Result@ADC_obj+1)^0,w,c
 10940   003B9A  22DA               	addwfc	fsr2h,f,c
 10941   003B9C  A2DF               	btfss	indf2,1,c
 10942   003B9E  EFD3  F01D         	goto	i2u596_41
 10943   003BA2  EFD5  F01D         	goto	i2u596_40
 10944   003BA6                     i2u596_41:
 10945   003BA6  EFDF  F01D         	goto	i2l6314
 10946   003BAA                     i2u596_40:
 10947   003BAA                     i2l6312:
 10948                           
 10949                           ;MCAL_layer/ADC/hal_ADC.c: 188:         {;MCAL_layer/ADC/hal_ADC.c: 190:             *Re
      +                          sualt = ((*((volatile uint16*)(0xFC3))));
 10950   003BAA  C003  FFD9         	movff	ADC_Read_Result@Resualt,fsr2l
 10951   003BAE  C004  FFDA         	movff	ADC_Read_Result@Resualt+1,fsr2h
 10952   003BB2  CFC3 FFDE          	movff	4035,postinc2	;volatile
 10953   003BB6  CFC4 FFDD          	movff	4036,postdec2	;volatile
 10954                           
 10955                           ;MCAL_layer/ADC/hal_ADC.c: 191:         }
 10956   003BBA  EF06  F01E         	goto	i2l6320
 10957   003BBE                     i2l6314:
 10958   003BBE  EE20 F006          	lfsr	2,6
 10959   003BC2  5001               	movf	ADC_Read_Result@ADC_obj^0,w,c
 10960   003BC4  26D9               	addwf	fsr2l,f,c
 10961   003BC6  5002               	movf	(ADC_Read_Result@ADC_obj+1)^0,w,c
 10962   003BC8  22DA               	addwfc	fsr2h,f,c
 10963   003BCA  B2DF               	btfsc	indf2,1,c
 10964   003BCC  EFEA  F01D         	goto	i2u597_41
 10965   003BD0  EFEC  F01D         	goto	i2u597_40
 10966   003BD4                     i2u597_41:
 10967   003BD4  EFD5  F01D         	goto	i2l6312
 10968   003BD8                     i2u597_40:
 10969   003BD8                     
 10970                           ;MCAL_layer/ADC/hal_ADC.c: 193:         {;MCAL_layer/ADC/hal_ADC.c: 194:             *Re
      +                          sualt = (uint16) (((ADRESH<<8) + ADRESL)>>6);
 10971   003BD8  50C3               	movf	195,w,c	;volatile
 10972   003BDA  CFC4 F005          	movff	4036,??_ADC_Read_Result	;volatile
 10973   003BDE  6A06               	clrf	(??_ADC_Read_Result+1)^0,c
 10974   003BE0  C005  F006         	movff	??_ADC_Read_Result,??_ADC_Read_Result+1
 10975   003BE4  6A05               	clrf	??_ADC_Read_Result^0,c
 10976   003BE6  2605               	addwf	??_ADC_Read_Result^0,f,c
 10977   003BE8  0E00               	movlw	0
 10978   003BEA  2206               	addwfc	(??_ADC_Read_Result+1)^0,f,c
 10979   003BEC  0E06               	movlw	6
 10980   003BEE  6E07               	movwf	(??_ADC_Read_Result+2)^0,c
 10981   003BF0                     i2u598_45:
 10982   003BF0  3406               	rlcf	(??_ADC_Read_Result+1)^0,w,c
 10983   003BF2  3206               	rrcf	(??_ADC_Read_Result+1)^0,f,c
 10984   003BF4  3205               	rrcf	??_ADC_Read_Result^0,f,c
 10985   003BF6  2E07               	decfsz	(??_ADC_Read_Result+2)^0,f,c
 10986   003BF8  EFF8  F01D         	goto	i2u598_45
 10987   003BFC  C003  FFD9         	movff	ADC_Read_Result@Resualt,fsr2l
 10988   003C00  C004  FFDA         	movff	ADC_Read_Result@Resualt+1,fsr2h
 10989   003C04  C005  FFDE         	movff	??_ADC_Read_Result,postinc2
 10990   003C08  C006  FFDD         	movff	??_ADC_Read_Result+1,postdec2
 10991   003C0C                     i2l6320:
 10992                           
 10993                           ;MCAL_layer/ADC/hal_ADC.c: 202:     return ret;
 10994   003C0C  5008               	movf	ADC_Read_Result@ret^0,w,c
 10995   003C0E  0012               	return		;funcret
 10996   003C10                     __end_of_ADC_Read_Result:
 10997                           	callstack 0
 10998                           
 10999                           	psect	text63
 11000   000000                     __ptext63:
 11001                           	callstack 0
 11002   000000                     
 11003                           	psect	rparam
 11004   000000                     
 11005                           	psect	temp
 11006   000073                     btemp:
 11007                           	callstack 0
 11008   000073                     	ds	1
 11009   000000                     int$flags	set	btemp
 11010   000000                     wtemp8	set	btemp+1
 11011   000000                     ttemp5	set	btemp+1
 11012   000000                     ttemp6	set	btemp+4
 11013   000000                     ttemp7	set	btemp+8
 11014                           
 11015                           	psect	config
 11016                           
 11017                           ; Padding undefined space
 11018   300000                     	org	3145728
 11019   300000  FF                 	db	255
 11020                           
 11021                           ;Config register CONFIG1H @ 0x300001
 11022                           ;	Oscillator Selection bits
 11023                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
 11024                           ;	Fail-Safe Clock Monitor Enable bit
 11025                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11026                           ;	Internal/External Oscillator Switchover bit
 11027                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11028   300001                     	org	3145729
 11029   300001  07                 	db	7
 11030                           
 11031                           ;Config register CONFIG2L @ 0x300002
 11032                           ;	Power-up Timer Enable bit
 11033                           ;	PWRT = OFF, PWRT disabled
 11034                           ;	Brown-out Reset Enable bits
 11035                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11036                           ;	Brown Out Reset Voltage bits
 11037                           ;	BORV = 3, Minimum setting
 11038   300002                     	org	3145730
 11039   300002  1F                 	db	31
 11040                           
 11041                           ;Config register CONFIG2H @ 0x300003
 11042                           ;	Watchdog Timer Enable bit
 11043                           ;	WDT = ON, WDT enabled
 11044                           ;	Watchdog Timer Postscale Select bits
 11045                           ;	WDTPS = 32768, 1:32768
 11046   300003                     	org	3145731
 11047   300003  1F                 	db	31
 11048                           
 11049                           ; Padding undefined space
 11050   300004                     	org	3145732
 11051   300004  FF                 	db	255
 11052                           
 11053                           ;Config register CONFIG3H @ 0x300005
 11054                           ;	CCP2 MUX bit
 11055                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11056                           ;	PORTB A/D Enable bit
 11057                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11058                           ;	Low-Power Timer1 Oscillator Enable bit
 11059                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11060                           ;	MCLR Pin Enable bit
 11061                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11062   300005                     	org	3145733
 11063   300005  81                 	db	129
 11064                           
 11065                           ;Config register CONFIG4L @ 0x300006
 11066                           ;	Stack Full/Underflow Reset Enable bit
 11067                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11068                           ;	Single-Supply ICSP Enable bit
 11069                           ;	LVP = ON, Single-Supply ICSP enabled
 11070                           ;	Extended Instruction Set Enable bit
 11071                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11072                           ;	Background Debugger Enable bit
 11073                           ;	DEBUG = 0x1, unprogrammed default
 11074   300006                     	org	3145734
 11075   300006  85                 	db	133
 11076                           
 11077                           ; Padding undefined space
 11078   300007                     	org	3145735
 11079   300007  FF                 	db	255
 11080                           
 11081                           ;Config register CONFIG5L @ 0x300008
 11082                           ;	Code Protection bit
 11083                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11084                           ;	Code Protection bit
 11085                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11086                           ;	Code Protection bit
 11087                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11088                           ;	Code Protection bit
 11089                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11090   300008                     	org	3145736
 11091   300008  0F                 	db	15
 11092                           
 11093                           ;Config register CONFIG5H @ 0x300009
 11094                           ;	Boot Block Code Protection bit
 11095                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11096                           ;	Data EEPROM Code Protection bit
 11097                           ;	CPD = OFF, Data EEPROM not code-protected
 11098   300009                     	org	3145737
 11099   300009  C0                 	db	192
 11100                           
 11101                           ;Config register CONFIG6L @ 0x30000A
 11102                           ;	Write Protection bit
 11103                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11104                           ;	Write Protection bit
 11105                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11106                           ;	Write Protection bit
 11107                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11108                           ;	Write Protection bit
 11109                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11110   30000A                     	org	3145738
 11111   30000A  0F                 	db	15
 11112                           
 11113                           ;Config register CONFIG6H @ 0x30000B
 11114                           ;	Configuration Register Write Protection bit
 11115                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11116                           ;	Boot Block Write Protection bit
 11117                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11118                           ;	Data EEPROM Write Protection bit
 11119                           ;	WRTD = OFF, Data EEPROM not write-protected
 11120   30000B                     	org	3145739
 11121   30000B  E0                 	db	224
 11122                           
 11123                           ;Config register CONFIG7L @ 0x30000C
 11124                           ;	Table Read Protection bit
 11125                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11126                           ;	Table Read Protection bit
 11127                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11128                           ;	Table Read Protection bit
 11129                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11130                           ;	Table Read Protection bit
 11131                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11132   30000C                     	org	3145740
 11133   30000C  0F                 	db	15
 11134                           
 11135                           ;Config register CONFIG7H @ 0x30000D
 11136                           ;	Boot Block Table Read Protection bit
 11137                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11138   30000D                     	org	3145741
 11139   30000D  40                 	db	64
 11140                           tosu	equ	0xFFF
 11141                           tosh	equ	0xFFE
 11142                           tosl	equ	0xFFD
 11143                           stkptr	equ	0xFFC
 11144                           pclatu	equ	0xFFB
 11145                           pclath	equ	0xFFA
 11146                           pcl	equ	0xFF9
 11147                           tblptru	equ	0xFF8
 11148                           tblptrh	equ	0xFF7
 11149                           tblptrl	equ	0xFF6
 11150                           tablat	equ	0xFF5
 11151                           prodh	equ	0xFF4
 11152                           prodl	equ	0xFF3
 11153                           indf0	equ	0xFEF
 11154                           postinc0	equ	0xFEE
 11155                           postdec0	equ	0xFED
 11156                           preinc0	equ	0xFEC
 11157                           plusw0	equ	0xFEB
 11158                           fsr0h	equ	0xFEA
 11159                           fsr0l	equ	0xFE9
 11160                           wreg	equ	0xFE8
 11161                           indf1	equ	0xFE7
 11162                           postinc1	equ	0xFE6
 11163                           postdec1	equ	0xFE5
 11164                           preinc1	equ	0xFE4
 11165                           plusw1	equ	0xFE3
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           bsr	equ	0xFE0
 11169                           indf2	equ	0xFDF
 11170                           postinc2	equ	0xFDE
 11171                           postdec2	equ	0xFDD
 11172                           preinc2	equ	0xFDC
 11173                           plusw2	equ	0xFDB
 11174                           fsr2h	equ	0xFDA
 11175                           fsr2l	equ	0xFD9
 11176                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    12
    Data        72
    BSS         132
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    102     114
    BANK0           128     12     128
    BANK1           256      9      86
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S3800$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_int_to_string@Temp_String(COMRAM[11]), convert_short_to_string@Temp_String(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S3747$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3747$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    memset@s	PTR unsigned char  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    timer2.Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Lm35.ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    Timer3InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2884$Timer3CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer3_init@TM3_obj.Timer3CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer2_Write_Value@TM2_obj.Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2748$Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@TM2_obj.Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@TM2_obj	PTR const struct . size(2) Largest target is 5
		 -> timer2(BANK0[5]), 

    Timer1InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2578$Timer1CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer1_init@TM1_obj.Timer1CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_REGISTER_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Read_Value@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Write_Value@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    S2393$Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_init@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_Call_Back@RB_obj.RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Call_Back@RB_obj.RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Call_Back@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_flag@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1812$INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1920$RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@RB_obj.RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1920$RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@RB_obj.RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    RBx_Call_Back	PTR FTN()void [8] size(2) Largest target is 1
		 -> NULL(), 

    INTx_Call_Back	PTR FTN()void [3] size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_initialize@pin	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), lcd_1.lcd_data(BANK0[8]), 
		 -> lcd_1(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), lcd_1.lcd_data(BANK0[8]), 
		 -> lcd_1(BANK0[10]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@relay_pin(COMRAM[1]), relay_turn_on@relay_pin(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), lcd_1.lcd_data(BANK0[8]), 
		 -> lcd_1(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Timer_config@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Timer_config@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Timer_config@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP_PWM_Stop@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP_PWM_Start@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Start@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Start@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP_PWM_set_DutyCycle@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_set_DutyCycle@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_set_DutyCycle@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP1_Compare_write_value@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_Compare_write_value@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_IsCompareReady@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_IsCompareReady@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Deinit@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Deinit@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1128$CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1128$CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    ADC_StartConversion_INT@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_Read_Result@ADC_obj.ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ADC_Read_Result@Resualt	PTR unsigned short  size(2) Largest target is 2
		 -> res1(BANK0[2]), 

    ADC_Read_Result@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_Start_Conversion@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_Select_Channel@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_InterruptCallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), NULL(), 

    S749$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ADC_init@ADC_obj.ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ADC_init@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    dc_motor_move_right@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_1(BANK0[2]), 

    dc_motor_initialize@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_1(BANK0[2]), 

    lcd_8bit_set_cursor@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_enable@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    convert_short_to_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    sp__memset	PTR void  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    lcd_8bit_send_string_pos@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), Temp_value(BANK1[11]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), 

    lcd_8bit_send_string_pos@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_string@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), Temp_value(BANK1[11]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), 

    lcd_8bit_send_string@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_char@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_command@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_initialize@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_lcd_8bit_send_enable
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_initialize
    _CCP_Init->___fltol
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_init->_ADC_configure_Channel
    _CCP_PWM_set_DutyCycle->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _ADC_StartConversion_INT->_ADC_Select_Channel
    _ADC_Select_Channel->_ADC_configure_Channel

Critical Paths under _Interrupt_manager in COMRAM

    _ADC_callback->_ADC_Read_Result

Critical Paths under _main in BANK0

    _main->_CCP_PWM_set_DutyCycle
    _Macl_initialize->_CCP_Init

Critical Paths under _Interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    _Macl_initialize->_CCP_Init

Critical Paths under _Interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  115772
            _ADC_StartConversion_INT
                      _CCP_PWM_Start
                       _CCP_PWM_Stop
              _CCP_PWM_set_DutyCycle
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _application_initialize
            _convert_short_to_string
                _dc_motor_move_right
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   30322
                                             40 COMRAM     7     1      6
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   14663
                                             33 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 5     1      4   12159
                                             33 COMRAM     5     1      4
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   8     5      3   11781
                                             25 COMRAM     8     5      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5523
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                             12     8      4   10054
                                             96 COMRAM     4     0      4
                                              0 BANK0      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             74 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             66 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             52 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   50454
                    _Macl_initialize
                     _ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_initialize                                       1     1      0   29945
                _dc_motor_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   22068
                                             33 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                8     5      3   13761
                                             25 COMRAM     8     5      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable                                 3     1      2    5613
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7868
                                             26 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _Macl_initialize                                      1     1      0   20509
                           _ADC_init
                           _CCP_Init
                        _Timer2_init
 ---------------------------------------------------------------------------------
 (3) _Timer2_init                                          4     2      2     232
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Init                                            13    11      2   19937
                                              0 BANK0      4     2      2
                                              0 BANK1      9     9      0
                   _CCP_Timer_config
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    7642
                                             22 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5297
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     527
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _CCP_Timer_config                                     4     2      2     211
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ADC_init                                             4     2      2     328
                                             15 COMRAM     4     2      2
              _ADC_configure_Channel
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             12 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_set_DutyCycle                               12     9      3   12389
                                              0 BANK0     12     9      3
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1056
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     642
                                             92 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3493
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2253
                                             51 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3652
                                             76 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Stop                                         4     2      2     166
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Start                                        4     2      2     470
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_INT                              5     2      3     889
                                             20 COMRAM     5     2      3
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 3     1      2     198
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   5     2      3     424
                                             15 COMRAM     5     2      3
              _ADC_configure_Channel
 ---------------------------------------------------------------------------------
 (4) _ADC_configure_Channel                                4     4      0      30
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Interrupt_manager                                   4     4      0     658
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
                         _TIMER3_ISR
 ---------------------------------------------------------------------------------
 (11) _TIMER3_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     482
                                NULL *
                       _ADC_callback *
 ---------------------------------------------------------------------------------
 (12) _ADC_callback                                        0     0      0     482
                    _ADC_Read_Result
 ---------------------------------------------------------------------------------
 (13) _ADC_Read_Result                                     8     4      4     482
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_INT
     _ADC_Select_Channel
       _ADC_configure_Channel
     _ADC_Start_Conversion
   _CCP_PWM_Start
   _CCP_PWM_Stop
   _CCP_PWM_set_DutyCycle
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   ___flmul
   ___fltol
   ___lwdiv
   ___xxtofl
   _application_initialize
     _Macl_initialize
       _ADC_init
         _ADC_configure_Channel
       _CCP_Init
         _CCP_Timer_config
         ___fladd
         ___fldiv
         ___flmul
         ___fltol
         ___xxtofl
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _Timer2_init
     _ecu_initialize
       _dc_motor_initialize
         _gpio_pin_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable
             _gpio_pin_write_logic
   _convert_short_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _Interrupt_manager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_callback *
       _ADC_Read_Result
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
   _TIMER2_ISR
   _TIMER3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      56       7       33.6%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     66      72       1       90.5%
BITBIGSFRhlhhlh     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhllh      6      0       0      40        0.0%
BITBIGSFRllhllh      6      0       0      41        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhhll      5      0       0      38        0.0%
BITBIGSFRhlhl        5      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRllhlll      1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148      47        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 03 17:57:43 2023

                              ___fldiv@aexp 004C                                ___fldiv@bexp 004B  
                __end_of_lcd_8bit_send_char 3DE2                                ___fldiv@sign 0044  
                                        l91 3DE0                                          l84 3E76  
                                        l77 3264                                ___awdiv@sign 0012  
                                       l200 42F8                                         l113 41C8  
                                       l106 3D4A                                         l135 3AAE  
                                       l162 4266                                         l412 3590  
                                       l421 35C2                                         l414 35BE  
                                       l174 39F4                                         l431 4436  
                                       l416 35B2                                         l409 34DC  
                                       l434 44E6                                         l419 35BA  
                                       l195 43FC                                         l436 44EA  
                                       l620 2B2E                                         l380 4504  
                                       l624 403E                                         l632 4110  
                                       l650 4120                                         l651 4128  
                                       l628 4040                                         l636 4112  
                                       l652 416E                                         l580 15BC  
                                       l469 437E                                         l725 3132  
                                       l751 34BC                                         l488 37A4  
                                       l648 4118                                         l765 40AC  
                                       _PR2 0FCB                                         _abs 4380  
                                       _kp1 0146                           _Interrupt_manager 0008  
                                       _pad 3E78                             __end_of_ADC_ISR 44A0  
                                       _ret 00FF                                ___awmod@sign 0012  
                       led_initialize@F3201 006E                                         prod 0FF3  
                 ?_lcd_8bit_send_string_pos 0029                                         tosl 0FFD  
                                       wreg 0FE8                       relay_initialize@F3197 0072  
              __end_of_lcd_8bit_send_enable 4268                     _ADC_StartConversion_INT 433E  
               __end_of_lcd_8bit_set_cursor 39F6                        __end_of_CCP_PWM_Stop 4114  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                        ?_Interrupt_manager 0001                                ___flmul@sign 0027  
                              ___flmul@temp 0032                                ___flmul@prod 002E  
                           __end_of_RB4_ISR 456E                             __end_of_RB5_ISR 4554  
                           __end_of_RB6_ISR 453A                             __end_of_RB7_ISR 4520  
                              ___fltol@exp1 0066                                        l1211 3CAE  
              __end_of_lcd_8bit_send_string 3D4C                                        ?_abs 0013  
                                      l2022 2CE2                                        l2110 4218  
                                      l2104 3390                                        l2033 2C7A  
                                      l1209 3C2E                                        l2026 2C1E  
                                      l2114 43B6                                        l2019 2B86  
                                      l2140 45EA                                        l2052 42B2  
                                      l2117 43BE                                        l1335 45CC  
                                      l2039 2FEE                                        l1361 44C6  
                                      l2129 386E                                        l2137 433C  
                                      l2074 3E9A                                        l2083 2D2C  
                                      l2085 2D34                                        l2078 3EF0  
                                      l2086 2D7A                                        l1608 3B5E  
                                      l2097 2E78                                        l1901 1A7C  
                                      l1661 36C8                                        l1595 3932  
                                      l1909 18C6                                        l1918 1996  
                                      l1862 3F64                                        l1919 1984  
                                      l1951 2064                                        l1855 3F5C  
                                      l1960 214C                                        l1946 2240  
                                      l1892 17AC                                        l1948 20A0  
                                      l1893 179A                                        l1957 20E6  
                                      l1894 1760                                        l1982 1EA6  
                                      ?_pad 001D                                        l1959 215E  
                                      l1985 1D38                                        l1978 1B42  
                                      l1995 1E68                                        l1987 1DB0  
                                      l1988 1D9E                                        l5560 36DC  
                                      l6280 3536                                        l6272 34BE  
                                      l5570 36FA                                        l5562 36E2  
                                      l5554 36CC                                        l9010 2BAC  
                                      l9002 2B32                                        l6290 3550  
                                      l6282 3548                                        l6274 34C2  
                                      l8210 37B8                                        l5580 3718  
                                      l5572 3700                                        l5564 36E8  
                                      l5556 36D0                                        l9020 2C06  
                                      l9004 2B42                                        l6292 3560  
                                      l6284 354A                                        l6276 34D4  
                                      l9100 31BA                                        l8300 3AB4  
                                      l8212 37CA                                        l5582 371E  
                                      l5574 3706                                        l5566 36EE  
                                      l5558 36D6                                        l9030 2C6A  
                                      l9022 2C08                                        l9014 2BC0  
                                      l9006 2B50                                        l6294 3576  
                                      l6286 354C                                        l6278 34DE  
                                      l8230 3392                                        l6470 3C92  
                                      l6462 3C10                                        l9110 3210  
                                      l9102 31CA                                        l8310 3AE4  
                                      l8302 3AC2                                        l8214 37D4  
                                      l8222 42FA                                        l5576 370C  
                                      l5568 36F4                                        l5584 3722  
                                      l6640 4402                                        l9040 2CC2  
                                      l9032 2C88                                        l9024 2C14  
                                      l9016 2BC8                                        l9008 2B96  
                                      l6296 3598                                        l6288 354E  
                                      l8240 3434                                        l8232 3396  
                                      l9200 1184                                        l6480 3CAA  
                                      l6472 3C94                                        l6464 3C14  
                                      l9112 3220                                        l9104 31EA  
                                      l9120 3262                                        l8320 3B2A  
                                      l8312 3AF6                                        l8304 3ACA  
                                      l8216 37F2                                        l8208 37A6  
                                      l8224 4306                                        l8400 2D3C  
                                      l5578 3712                                        l6642 4414  
                                      l9042 2CD0                                        l9034 2C8A  
                                      l9026 2C50                                        l9018 2BD4  
                                      l6298 35C0                                        l8234 33A8  
                                      l9210 11FA                                        l6474 3C96  
                                      l6482 3CAC                                        l6466 3C26  
                                      l9114 3230                                        l9106 31F0  
                                      l8330 3B56                                        l8322 3B32  
                                      l8314 3AFE                                        l8306 3ACE  
                                      l8218 3828                                        l8226 4318  
                                      l8410 2D76                                        l8402 2D4C  
                                      l9050 328C                                        l9130 3D66  
                                      l6644 441C                                        l6652 44C8  
                                      l8500 160A                                        l9044 2CD2  
                                      l9036 2C8E                                        l9028 2C5C  
                                      l8244 3490                                        l8236 33CA  
                                      l9220 1240                                        l9204 1190  
                                      l6476 3C98                                        l6468 3C30  
                                      l9116 3240                                        l9108 3200  
                                      l8260 388A                                        l8324 3B38  
                                      l8316 3B06                                        l8308 3ADC  
                                      l8228 431C                                        l8340 3EA6  
                                      l8420 2DCA                                        l8412 2D82  
                                      l8404 2D52                                        l9060 32DA  
                                      l9052 329A                                        l9140 3DB0  
                                      l9132 3D7A                                        l9124 3D4C  
                                      l6646 442E                                        l6638 43FE  
                                      l6654 44CC                                        l6830 3FEA  
                                      l8510 163C                                        l8502 160C  
                                      l9038 2CB2                                        l8238 33D2  
                                      l8246 34BA                                        l9222 124C  
                                      l9214 121C                                        l9206 11D6  
                                      l6478 3C9A                                        l9150 43C0  
                                      l9118 3250                                        l8270 38B0  
                                      l8262 388E                                        l8254 3870  
                                      l8318 3B14                                        l8326 3B3E  
                                      l8350 439A                                        l8342 3EBA  
                                      l8334 3E78                                        l8430 2E32  
                                      l8422 2DD0                                        l8414 2D8C  
                                      l8406 2D62                                        l9062 32F8  
                                      l9054 32A8                                        l9310 41D6  
                                      l9142 3DB4                                        l9126 3D4C  
                                      l6648 4434                                        l6656 44DE  
                                      l6832 3FF2                                        l8600 180A  
                                      l8520 1664                                        l8512 163E  
                                      l8504 1614                                        l8440 4042  
                                      l9240 12F6                                        l9232 12C6  
                                      l9216 1228                                        l9208 11EE  
                                      l9152 43C0                                        l8360 4248  
                                      l8352 421A                                        l9080 3134  
                                      l8280 38E6                                        l8272 38C2  
                                      l8264 389C                                        l8256 3874  
                                      l8328 3B4E                                        l8344 3EBE  
                                      l8336 3E86                                        l8432 2E42  
                                      l8416 2D92                                        l8424 2DEC  
                                      l8408 2D6E                                        l9064 333C  
                                      l9056 32AC                                        l9072 3366  
                                      l9048 3266                                        l9312 41F2  
                                      l9144 3DD0                                        l9128 3D5E  
                                      l9400 3CE0                                        l6658 44E8  
                                      l6834 400E                                        l6826 3FD4  
                                      l6850 40E8                                        l6842 40AE  
                                      l8610 1834                                        l8602 1816  
                                      l8530 169E                                        l8522 1674  
                                      l8514 1644                                        l8506 1624  
                                      l8370 3006                                        l8450 40AA  
                                      l8442 4042                                        l9250 1388  
                                      l9234 12D2                                        l9218 1234  
                                      l9226 1258                                        l9170 1080  
                                      l9162 105E                                        l9154 43D2  
                                      l8362 4264                                        l8354 421A  
                                      l9082 3146                                        l9410 2E7A  
                                      l8282 38FC                                        l8274 38CA  
                                      l8290 3912                                        l8266 38A4  
                                      l8258 3882                                        l8346 3EDC  
                                      l8338 3E92                                        l8434 2E48  
                                      l8426 2E06                                        l8418 2DC4  
                                      l9058 32BC                                        l9314 4210  
                                      l9138 3D82                                        l9146 3DDE  
                                      l9402 3D12                                        l6836 401A  
                                      l6828 3FD8                                        l6852 40F0  
                                      l6844 40B2                                        l8620 18A6  
                                      l8604 181A                                        l8612 183A  
                                      l8540 16CA                                        l8532 16B0  
                                      l8524 1684                                        l8516 1652  
                                      l8508 162A                                        l8700 1EE4  
                                      l8380 30EE                                        l8372 3028  
                                      l8444 4054                                        l9260 142A  
                                      l9252 13A4                                        l9236 12DE  
                                      l9244 1302                                        l9228 12A6  
                                      l9180 10D2                                        l9172 1098  
                                      l9164 105E                                        l9156 43DA  
                                      l8356 422C                                        l8460 3DFC  
                                      l9092 317A                                        l9084 314E  
                                      l9420 2EDA                                        l8292 3922  
                                      l8284 3904                                        l8276 38D2  
                                      l8268 38A8                                        l8348 4380  
                                      l8436 2E58                                        l8428 2E18  
                                      l9068 3354                                        l9308 41CA  
                                      l9404 3D16                                        l6790 437C  
                                      l6782 433E                                        l6838 4036  
                                      l6854 410C                                        l6846 40C4  
                                      l8630 1900                                        l8614 1860  
                                      l8622 18B6                                        l8606 1828  
                                      l8550 16DE                                        l8542 16CE  
                                      l8534 16BE                                        l8526 1686  
                                      l8518 1654                                        l8710 1F14  
                                      l8702 1EF4                                        l6950 3EFA  
                                      l8374 3030                                        l8382 3130  
                                      l8366 2FF0                                        l8446 4076  
                                      l9270 1560                                        l9262 1482  
                                      l9254 13B0                                        l9238 12EA  
                                      l9246 1350                                        l9182 10DE  
                                      l9190 1140                                        l9174 10A4  
                                      l9166 1072                                        l9158 43FA  
                                      l8358 4234                                        l8470 3E46  
                                      l8462 3E10                                        l8454 3DE2  
                                      l9094 318A                                        l9086 3172  
                                      l9078 3134                                        l9422 2F32  
                                      l9414 2E98                                        l8294 392A  
                                      l8286 3906                                        l8278 38E0  
                                      l8390 2CE4                                        l9406 3D48  
                                      l6784 4342                                        l6848 40CC  
                                      l8640 1930                                        l8632 190A  
                                      l8624 18DC                                        l8616 1894  
                                      l8608 182A                                        l8560 16F2  
                                      l8552 16E2                                        l8544 16D2  
                                      l8536 16C2                                        l8528 168E  
                                      l8800 2188                                        l8720 1F4A  
                                      l8712 1F1A                                        l8704 1EF6  
                                      l6960 3F30                                        l6952 3F0C  
                                      l8480 4114                                        l8376 3092  
                                      l8368 2FF4                                        l8448 407E  
                                      l9272 1568                                        l9256 13CC  
                                      l9248 136A                                        l9184 10EA  
                                      l9280 15B8                                        l9168 107C  
                                      l8472 3E4A                                        l8456 3DE2  
                                      l9096 318E                                        l9440 2FDC  
                                      l9432 2F92                                        l9416 2EA4  
                                      l8288 390C                                        l8392 2CF8  
                                      l6786 4354                                        l8650 1958  
                                      l8642 1934                                        l8634 1918  
                                      l8626 18EC                                        l8618 1896  
                                      l8570 172C                                        l8562 16F6  
                                      l8554 16E6                                        l8546 16D6  
                                      l8538 16C6                                        l8490 15CA  
                                      l8810 2200                                        l8802 21B2  
                                      l8730 1F8A                                        l8722 1F5A  
                                      l8714 1F28                                        l8706 1EFE  
                                      l6962 3F46                                        l6954 3F14  
                                      l8482 4130                                        l9274 1580  
                                      l9258 13D4                                        l9194 1160  
                                      l9186 10F6                                        l9266 152C  
                                      l9178 10C6                                        l8474 3E66  
                                      l8458 3DF4                                        l9098 31AA  
                                      l9602 45C4                                        l9434 2FC6  
                                      l9426 2F4C                                        l8298 3AB0  
                                      l8394 2D08                                        l9450 42A4  
                                      l9442 4268                                        l9370 394A  
                                      l9530 419C                                        l9522 4170  
                                      l6788 435C                                        l8660 19B2  
                                      l8652 1966                                        l8644 1944  
                                      l8636 191A                                        l8580 177E  
                                      l8572 1748                                        l8564 16FA  
                                      l8556 16EA                                        l8548 16DA  
                                      l8492 15D8                                        l8820 2236  
                                      l8812 221C                                        l8804 21B6  
                                      l8732 1F9A                                        l8740 1FBA  
                                      l8724 1F5C                                        l8716 1F2A  
                                      l8708 1F0E                                        l8900 1C76  
                                      l6964 3F4E                                        l6956 3F1C  
                                      l6948 3EF2                                        l9276 159C  
                                      l9268 1542                                        l9196 116C  
                                      l9188 10FA                                        l9460 44A0  
                                      l8468 3E18                                        l8476 3E74  
                                      l9436 2FD2                                        l9428 2F78  
                                      l8396 2D10                                        l9444 4278  
                                      l9540 39FC                                        l9380 39A0  
                                      l9372 3952                                        l9532 41B0  
                                      l9524 4170                                        l8670 1A1C  
                                      l8662 19C0                                        l8654 197C  
                                      l8638 1928                                        l8646 1946  
                                      l8590 17CA                                        l8582 178C  
                                      l8574 1758                                        l8558 16EE  
                                      l8566 16FE                                        l8494 15DA  
                                      l8814 2220                                        l8806 21D0  
                                      l8750 1FF8                                        l8742 1FCA  
                                      l8734 1FA2                                        l8718 1F3A  
                                      l8726 1F64                                        l8910 1D1E  
                                      l8902 1C92                                        l8830 1A8A  
                                      l6966 3F50                                        l6958 3F2A  
                                      l9278 15A4                                        l9198 1178  
                                      l9462 44A0                                        l9454 44EC  
                                      l9438 2FD8                                        l8398 2D20  
                                      l9446 4280                                        l9550 3A42  
                                      l9542 3A08                                        l9374 3958  
                                      l9382 39B8                                        l9366 3934  
                                      l9534 41C6                                        l9526 4182  
                                      l8680 1A56                                        l8672 1A3C  
                                      l8664 19FA                                        l8648 1954  
                                      l8584 178E                                        l8576 176E  
                                      l8568 1702                                        l8496 15EA  
                                      l8488 15BE                                        l8816 222E  
                                      l8808 21E6                                        l8760 2040  
                                      l8752 2008                                        l8744 1FCA  
                                      l8736 1FA6                                        l8728 1F74  
                                      l8920 1D5A                                        l8912 1D28  
                                      l8904 1CBC                                        l8840 1ACA  
                                      l8832 1A98                                        l6968 3F56  
                                      l9464 44AC                                        l9456 44EC  
                                      l9448 4288                                        l9552 3A50  
                                      l9560 3AAC                                        l9544 3A0C  
                                      l9392 3CB0                                        l9376 3970  
                                      l9384 39F2                                        l9368 3938  
                                      l9528 4194                                        l8682 1A5C  
                                      l8674 1A40                                        l8658 19A6  
                                      l8666 19FC                                        l8594 17DE  
                                      l8586 1798                                        l8578 177A  
                                      l8498 15FA                                        l8818 2234  
                                      l8770 208E                                        l8762 2054  
                                      l8754 2018                                        l8690 1EA8  
                                      l8930 1DCC                                        l8922 1D68  
                                      l8914 1D36                                        l8906 1CF2  
                                      l8850 1AFA                                        l8842 1AD0  
                                      l8834 1A9A                                        l9466 44BA  
                                      l9458 44F8                                        l9554 3A70  
                                      l9546 3A1E                                        l9538 39F6  
                                      l9570 42CE                                        l9394 3CB4  
                                      l9378 3988                                        l8684 1A6A  
                                      l8676 1A4E                                        l8668 1A0C  
                                      l8596 17EE                                        l8588 17BA  
                                      l8780 20D6                                        l8772 209E  
                                      l8764 2062                                        l8756 2028  
                                      l8748 1FDE                                        l8692 1EB4  
                                      l8940 1E36                                        l8932 1DDA  
                                      l8924 1D96                                        l8916 1D48  
                                      l8908 1D00                                        l8860 1B32  
                                      l8852 1AFC                                        l8844 1AE0  
                                      l8836 1AAA                                        l8828 1A7E  
                                      l9580 28D0                                        l9556 3A8C  
                                      l9548 3A26                                        l9572 42F6  
                                      l9564 42B4                                        l9396 3CC6  
                                      l8686 1A6C                                        l8678 1A54  
                                      l8598 17FC                                        l8790 2116  
                                      l8782 20E4                                        l8774 20B0  
                                      l8766 206E                                        l8758 2030  
                                      l8694 1EC2                                        l8950 1E8C  
                                      l8942 1E50                                        l8934 1E04  
                                      l8918 1D56                                        l8870 1B82  
                                      l8862 1B52                                        l8854 1B0C  
                                      l8846 1AE6                                        l8838 1ABA  
                                      l9590 2A04                                        l9582 28D8  
                                      l9558 3A8E                                        l9566 42B4  
                                      l9398 3CD8                                        l8792 2144  
                                      l8776 20C6                                        l8784 20F6  
                                      l8768 208C                                        l8696 1EC4  
                                      l8944 1E6C                                        l8952 1E92  
                                      l8928 1DC0                                        l8936 1E08  
                                      l8880 1BD2                                        l8872 1B8C  
                                      l8864 1B62                                        l8856 1B1C  
                                      l8848 1AEC                                        l8960 35DA  
                                      l9592 2A20                                        l9584 28F4  
                                      l9576 28B8                                        l9568 42C6  
                                      l8786 2104                                        l8778 20CC  
                                      l8698 1ED4                                        l8954 1E96  
                                      l8946 1E7C                                        l8938 1E22  
                                      l8890 1C14                                        l8882 1BDE  
                                      l8874 1BA2                                        l8858 1B2C  
                                      l8970 362A                                        l9594 2AFE  
                                      l9586 29D2                                        l9578 28BE  
                                      l8796 216E                                        l8788 2108  
                                      l8948 1E8A                                        l8892 1C24  
                                      l8884 1BEC                                        l8876 1BAE  
                                      l8868 1B76                                        l8980 3654  
                                      l8972 362E                                        l8964 35EE  
                                      l9596 2B14                                        l9588 29E8  
                                      l8798 217A                                        l8894 1C3E  
                                      l8886 1BF8                                        l8878 1BC6  
                                      l8990 367C                                        l8982 365E  
                                      l8974 363C                                        l8966 3618  
                                      l8958 35C4                                        l9598 2B2C  
                                      STR_1 105A                                        l8896 1C4E  
                                      l8888 1C08                                        l8992 3688  
                                      l8984 3668                                        l8968 361A  
                                      STR_2 105A                                        l8898 1C6A  
                                      l8994 3698                                        STR_4 100D  
                                      STR_5 101C                                        l8996 36A8  
                                      STR_6 104A                                        STR_7 1042  
                                      l8998 36B8                                        STR_8 103A  
                                      STR_9 1032                                        _LATA 0F89  
                                      _LATB 0F8A                                        _LATC 0F8B  
                                      _LATD 0F8C                                        _LATE 0F8D  
                                      u6120 3C26                                        u6121 3C22  
                                      u6300 4414                                        u6301 4410  
                                      u6310 44DE                                        u6311 44DA  
                                      u6500 3FEA                                        u6501 3FE6  
                                      u6510 400E                                        u6511 400A  
                                      u6440 4354                                        u6520 4036  
                                      u9000 18DC                                        u6600 3F0C  
                                      u6441 4350                                        u6521 4032  
                                      u9001 18D8                                        u6601 3F08  
                                      u6530 40C4                                        u9010 18EC  
                                      u6610 3F2A                                        u6531 40C0  
                                      u9011 18E8                                        u6611 3F26  
                                      u6540 40E8                                        u9100 19C0  
                                      u9020 1918                                        u6620 3F46  
                                      u5900 34D4                                        u6541 40E4  
                                      u9101 19BC                                        u9021 1914  
                                      u6621 3F42                                        u5901 34D0  
                                      u6550 410C                                        u9110 19FA  
                                      u9030 1928                                        u6551 4108  
                                      u9111 19F6                                        u9031 1924  
                                      u9120 1A0C                                        u9040 1944  
                                      u9200 1F28                                        u5920 3590  
                                      u8320 37B8                                        u9121 1A08  
                                      u9041 1940                                        u9201 1F24  
                                      u5921 358C                                        u8321 37B4  
                                      u9130 1A1C                                        u9050 1954  
                                      u9210 1F3A                                        u5930 35B2  
                                      u8410 3882                                        u8330 37CA  
                                      u9131 1A18                                        u9051 1950  
                                      u9211 1F36                                        u5931 35AE  
                                      u5915 3574                                        u8411 387E  
                                      u8331 37C6                                        u9140 1A3C  
                                      u9060 1966                                        u9300 20E4  
                                      u9220 1F4A                                        u8404 3454  
                                      u8420 389C                                        u8500 3B14  
                                      u8340 37F2                                        u9141 1A38  
                                      u9061 1962                                        u9301 20E0  
                                      u9221 1F46                                        u5917 3576  
                                      u8405 3450                                        u8421 3898  
                                      u8501 3B10                                        u8341 37EE  
                                      u9150 1A4E                                        u9070 197C  
                                      u9310 2104                                        u9230 1F8A  
                                      u8430 38C2                                        u8510 3B2A  
                                      u8350 3828                                        u9151 1A4A  
                                      u9071 1978                                        u9311 2100  
                                      u9231 1F86                                        u8431 38BE  
                                      u8511 3B26                                        u8351 3824  
                                      u9160 1A6A                                        u9080 1992  
                                      u9320 2116                                        u9240 1FCA  
                                      u9400 1A98                                        u8440 38E0  
                                      u8520 3B4E                                        u8360 433C  
                                      u9161 1A66                                        u9081 198E  
                                      u9321 2112                                        u9241 1FC6  
                                      u9401 1A94                                        u8441 38DC  
                                      u8521 3B4A                                        u8361 4338  
                                      u9090 19A6                                        u9330 2144  
                                      u9250 2040                                        u9170 1EC2  
                                      u9410 1AAA                                        u8610 3106  
                                      u8370 33A8                                        u8450 38FC  
                                      u8530 3E86                                        u9091 19A2  
                                      u9331 2140                                        u9251 203C  
                                      u9171 1EBE                                        u9411 1AA6  
                                      u8611 3100                                        u8371 33A4  
                                      u8451 38F8                                        u8531 3E82  
                                      u9340 215A                                        u9260 2062  
                                      u9180 1ED4                                        u9500 1D56  
                                      u9420 1ABA                                        u8620 3108  
                                      u8604 30B2                                        u8380 33CA  
                                      u8460 3922                                        u8540 3EDC  
                                      u8700 2E18                                        u9341 2156  
                                      u9261 205E                                        u9181 1ED0  
                                      u9501 1D52                                        u9421 1AB6  
                                      u8605 30AE                                        u8381 33C6  
                                      u8461 391E                                        u8541 3ED8  
                                      u8701 2E14                                        u9350 216E  
                                      u9270 208C                                        u9190 1EE4  
                                      u9510 1D68                                        u9430 1AFA  
                                      u8470 3AC2                                        u8550 439A  
                                      u8710 2E32                                        u8630 2CF4  
                                      u9351 216A                                        u9271 2088  
                                      u9191 1EE0                                        u9511 1D64  
                                      u9431 1AF6                                        u8471 3ABE  
                                      u8551 4396                                        u8711 2E2E  
                                      u8631 2CEE                                        u8800 15FA  
                                      u9360 2188                                        u9280 20B0  
                                      u9520 1D96                                        u9440 1B0C  
                                      u9600 360E                                        u8560 422C  
                                      u8480 3ADC                                        u8720 2E42  
                                      u8640 2CF6                                        u8801 15F6  
                                      u9361 2184                                        u9281 20AC  
                                      u9521 1D92                                        u9441 1B08  
                                      u8561 4228                                        u8481 3AD8  
                                      u8721 2E3E                                        u8810 163C  
                                      u9370 21D0                                        u9290 20C6  
                                      u9530 1DAC                                        u9450 1B1C  
                                      u9610 363C                                        u8570 3006  
                                      u8394 33F2                                        u8730 4054  
                                      u8490 3AF6                                        u8650 2D08  
                                      u8811 1638                                        u9371 21CC  
                                      u9291 20C2                                        u9531 1DA8  
                                      u9451 1B18                                        u9611 3638  
                                      u8571 3002                                        u8395 33EE  
                                      u8731 4050                                        u8491 3AF2  
                                      u8651 2D04                                        u8900 176E  
                                      u8820 1652                                        u9380 2200  
                                      u9540 1DC0                                        u9460 1B52  
                                      u9620 3650                                        u9700 2C4C  
                                      u8580 3028                                        u8740 4076  
                                      u8660 2D20                                        u8901 176A  
                                      u8821 164E                                        u9381 21FC  
                                      u9541 1DBC                                        u9461 1B4E  
                                      u9621 364C                                        u9605 3604  
                                      u9701 2C48                                        u8581 3024  
                                      u8741 4072                                        u8661 2D1C  
                                      u8910 178C                                        u8830 1664  
                                      u9390 222E                                        u9550 1DDA  
                                      u9470 1B62                                        u9630 3678  
                                      u9710 2C6A                                        u8750 3DF4  
                                      u8670 2D4C                                        u8911 1788  
                                      u8831 1660                                        u9391 222A  
                                      u9551 1DD6                                        u9471 1B5E  
                                      u9631 3674                                        u9711 2C66  
                                      u8751 3DF0                                        u8671 2D48  
                                      u8920 17AC                                        u8840 1674  
                                      u9560 1E22                                        u9480 1CDC  
                                      u9640 3698                                        u9720 2C7A  
                                      u9800 31AA                                        u8680 2D62  
                                      u8921 17A8                                        u8841 1670  
                                      u9561 1E1E                                        u9641 3694  
                                      u9721 2C76                                        u9801 31A6  
                                      u8681 2D5E                                        u8930 17BA  
                                      u8850 16B0                                        u9570 1E50  
                                      u9490 1D36                                        u9650 36A8  
                                      u9730 2C88                                        u8594 3050  
                                      u8770 3E66                                        u8690 2E06  
                                      u9810 3D5E                                        u8931 17B6  
                                      u8851 16AC                                        u9571 1E4C  
                                      u9491 1D32                                        u9651 36A4  
                                      u9731 2C84                                        u8595 304C  
                                      u8771 3E62                                        u8691 2E02  
                                      u9811 3D5A                                        u8940 17CA  
                                      u8860 16BE                                        u8780 15D8  
                                      u9580 1E8A                                        u9740 2CC2  
                                      u9660 2B42                                        u9900 1218  
                                      u8764 3E36                                        u8941 17C6  
                                      u8861 16BA                                        u8781 15D4  
                                      u9581 1E86                                        u9485 1CD2  
                                      u9741 2CBE                                        u9661 2B3E  
                                      u9901 1214                                        u8765 3E32  
                                      u8950 17FC                                        u8870 172C  
                                      u8790 15EA                                        u9590 35DA  
                                      u9750 2CD0                                        u9670 2B50  
                                      u9910 12C2                                        u9830 3DD0  
                                      u8951 17F8                                        u8871 1728  
                                      u8791 15E6                                        u9591 35D6  
                                      u9751 2CCC                                        u9671 2B4C  
                                      u9911 12BE                                        u9831 3DCC  
                                      u8960 180A                                        u8880 1744  
                                      u9680 2BAC                                        u9920 136A  
                                      u9840 43D2                                        u9760 328C  
                                      u9824 3DA0                                        u8961 1806  
                                      u8881 173E                                        u9681 2BA8  
                                      u9921 1366                                        u9841 43CE  
                                      u9761 3288                                        u9825 3D9C  
                                      u8970 1828                                        u8890 1746  
                                      u9690 2C02                                        u9930 1388  
                                      u9850 1072                                        u9770 32DA  
                                      u8971 1824                                        u9691 2BFE  
                                      u9931 1384                                        u9851 106E  
                                      u9771 32D6                                        u8980 1860  
                                      u9940 13A4                                        u9860 1098  
                                      u9780 32F8                                        u8981 185C  
                                      u9941 13A0                                        u9861 1094  
                                      u9781 32F4                                        u8990 18A6  
                                      u9950 13CC                                        u9870 10C2  
                                      u9790 3146                                        u8991 18A2  
                                      u9951 13C8                                        u9871 10BE  
                                      u9791 3142                                        u9960 1560  
                                      u9880 115C                                        u9961 155C  
                                      u9881 1158                                        u9970 159C  
                                      u9890 11EE                                        _TMR2 0FCC  
                                      u9971 1598                                        u9891 11EA  
                                      u9980 4210                                        u9981 420C  
                                      _Lm35 00EA                            _CCP_Timer_config 4114  
                                      _Flag 006D                         ??_Interrupt_manager 0009  
                                      abs@a 0013                                        _dbuf 0111  
                                      _main 25C8                                        _dtoa 2CE4  
                                      _res1 00BA                            __end_of_CCP1_ISR 45EA  
                          __end_of_CCP2_ISR 45E6                                        _prec 0098  
                                      _temp 006B                                        pad@i 0024  
                                      pad@p 0021                                        fsr0h 0FEA  
                                      fsr1h 0FE2                                        indf0 0FEF  
                                      fsr2h 0FDA                                        fsr0l 0FE9  
                                      indf1 0FE7                                        indf2 0FDF  
                                      fsr1l 0FE1                                        pad@w 0026  
                                      fsr2l 0FD9                                        btemp 0073  
                   _Timer1InterruptHandeler 00A2                  lcd_8bit_initialize@lcd_obj 0022  
                                      prodh 0FF4                                        prodl 0FF3  
                                      start 000E                            __end_of_ADC_init 35C4  
                           ___fldiv@new_exp 0045                       __end_of_CCP_PWM_Start 4042  
             __end_of_lcd_8bit_send_command 3E78                            __end_of_CCP_Init 15BE  
                              ___param_bank 0000                  __end_of_ADC_Select_Channel 4438  
                    dc_motor_initialize@ret 001D                                       ??_abs 0015  
                      _gpio_pin_write_logic 3392                        CCP_PWM_Start@ccp_obj 000D  
                               ?_TIMER0_ISR 0001                                 ?_TIMER1_ISR 0001  
                                     ??_pad 0023                                 ?_TIMER2_ISR 0001  
                               ?_TIMER3_ISR 0001             lcd_8bit_send_string_pos@lcd_obj 0029  
                          __end_of_INT0_ISR 45E2                            __end_of_INT1_ISR 45DE  
                          __end_of_INT2_ISR 45DA                                       l10100 2772  
                                     l10120 2832                                       l10112 27E4  
                                     l10104 2796                                       l10130 2890  
                                     l10122 2848                                       l10114 27FA  
                                     l10106 27AC                                       l10124 285C  
                                     l10116 280E                                       l10108 27C0  
                                     l10070 25CC                                       l10128 2880  
                                     l10080 2644                                       l10072 25EC  
                                     l10090 2700                                       l10082 2696  
                                     l10074 261C                                       l10092 2714  
                                     l10084 26B2                                       l10076 262C  
                                     l10068 25C8                                       l10094 2734  
                                     l10086 26CA                                       l10078 2640  
                                     l10360 1322                                       l10352 39CC  
                                     l10096 2748                                       l10088 26EA  
                                     l10362 34A4                                       l10354 111A  
                                     l10098 275E                                       l10364 311A  
                                     l10356 11B0                                       l10366 4150  
                                     l10358 1278                                       l10368 3736  
                 __end_of_Interrupt_manager 25C8                               ___fltol@sign1 0065  
                           __end_of___fladd 1A7E                                       ?_main 0001  
                                     ?_dtoa 0028                    ??_application_initialize 0067  
                           __end_of___fldiv 2242                             __end_of___awdiv 3934  
                                     _EEADR 0FA9                                       STR_10 102A  
                                     STR_11 1052                             __end_of___awmod 3B60  
                           __end_of___flmul 1EA8                             __end_of___fltol 36CA  
                                     u10100 2E94                                       u10101 2E90  
                                     u10110 2ED6                                       u10111 2ED2  
                                     u10120 2F48                                       u10040 394A  
                                     u10121 2F44                                       u10041 3946  
                                     u10130 2F8E                                       u10050 3CC6  
                                     u10210 4182                                       u10131 2F8A  
                                     u10051 3CC2                                       u10211 417E  
                                     u10140 2FEE                                       u10060 3CD8  
                                     u10220 4194                                       u10141 2FEA  
                                     u10061 3CD4                                       u10221 4190  
                                     u10070 3D0A                                       u10231 3A02  
                                     u10240 3A1E                                       u10080 3D38  
                                     u10241 3A1A                                       u10250 3AAC  
                                     u10090 3D48                                       u10251 3AA8  
                                     u10091 3D44                                       u10260 42C6  
                                     u10261 42C2                                       u10077 3D00  
                                     u10270 28D0                                       u10271 28CC  
                                     u10087 3D2E                                       u10280 28F4  
                                     u10281 28F0                                       u10290 2A20  
                                     u10291 2A1C                             ___awdiv@divisor 000F  
                                     u10800 275E                                       u10801 275A  
                                     u10810 27AC                                       u10811 27A8  
                                     u10820 27FA                                       u10821 27F6  
                                     u10830 2848                                       u10831 2844  
                                     u10780 262C                                       u10781 2628  
                                     u10790 2700                                       u10847 31B0  
                                     u10791 26FC                                       u10857 31D0  
                                     u10867 31EC                             __end_of___lwdiv 3F66  
                                     i2l454 3C0E                                       i2l640 45E8  
                                     i2l492 449E                                       i2l644 45E4  
                                     i2l831 45E0                                       i2l835 45DC  
                                     i2l839 45D8                                       i2l857 456C  
                                     i2l865 4552                                       i2l873 4538  
                                     i2l881 451E                             ___awdiv@counter 0011  
                           _ADC_Read_Result 3B60                         relay_turn_off@F3207 0070  
                              vfpfcnvrt@fmt 0037                                       _TMR0H 0FD7  
                                     _TMR1H 0FCF                                       _TMR0L 0FD6  
                                     _TMR1L 0FCE                                       _TMR3H 0FB3  
                                     _TMR3L 0FB2                                       _PORTA 0F80  
                                     _PORTB 0F81                                       _PORTC 0F82  
                                     _PORTD 0F83                                       _PORTE 0F84  
                                     _TRISA 0F92                                       _TRISB 0F93  
                                     _TRISC 0F94                                       _TRISD 0F95  
                                     _TRISE 0F96                    ?_convert_short_to_string 0061  
                                     _lcd_1 00E0                                       _flags 00B0  
                      _ADC_Start_Conversion 44C8                          ADC_Read_Result@ret 0008  
                                     _fputc 37A6                                       _fputs 42FA  
                                     pad@fp 001D                                       _width 0096  
                                     _putch 45EA                                       dtoa@d 002A  
                                     dtoa@i 0033                                       dtoa@p 002E  
                                     dtoa@s 0032                                       dtoa@w 0030  
                                     pclath 0FFA                                       pclatu 0FFB  
                                     tablat 0FF5                                       ttemp5 0074  
                                     ttemp6 0077                                       ttemp7 007B  
                                     status 0FD8                                       wtemp8 0074  
                           __end_of_sprintf 42B4                  lcd_8bit_set_cursor@lcd_obj 0022  
               lcd_8bit_send_enable@lcd_obj 0017                      ?_ADC_configure_Channel 0001  
            ?_gpio_pin_direction_initialize 000D                             __initialization 3F66  
               ADC_Start_Conversion@ADC_obj 000D                                __end_of_main 28B8  
                              __end_of_dtoa 2E7A                       ?_gpio_pin_write_logic 000D  
               lcd_8bit_send_string@lcd_obj 0022                                   ??_ADC_ISR 0009  
                    lcd_8bit_set_cursor@ret 0028                      lcd_8bit_set_cursor@row 0024  
                             _lat_registers 00BC                 __end_of_dc_motor_initialize 43FE  
                                    ??_main 0067                                      ??_dtoa 002C  
                 ??_ADC_StartConversion_INT 0018                               __activetblptr 0003  
                          led_turn_on@F3206 00B4                                   ??_RB4_ISR 0001  
                                 ??_RB5_ISR 0001                                   ??_RB6_ISR 0001  
                                 ??_RB7_ISR 0001                       ?_ADC_Start_Conversion 000D  
                ADC_StartConversion_INT@ret 0019                                      ?_fputc 000D  
                                    ?_fputs 0016                                      _ADRESH 0FC4  
                                    _EEADRH 0FAA                                      _ADRESL 0FC3  
                                    _EEDATA 0FA8                                      _CCPR1H 0FBF  
                                    _CCPR2H 0FBC                                      _CCPR1L 0FBE  
                                    _CCPR2L 0FBB                                      _EECON2 0FA7  
                          ___awdiv@dividend 000D                                      ?_putch 0001  
                              _ADC_callback 456E                                      i2l1030 2294  
                                    i2l1040 23C4                                      i2l1032 22B4  
                                    i2l1050 24F4                                      i2l1042 2408  
                                    i2l1034 22F8                                      i2l1060 2594  
                                    i2l1052 2514                                      i2l1044 244C  
                                    i2l1036 233C                                      i2l1028 2274  
                                    i2l1054 2534                                      i2l1046 2490  
                                    i2l1038 2380                                      i2l1063 25B4  
                                    i2l1232 45D4                                      i2l1056 2554  
                                    i2l1048 24D4                                      i2l1058 2574  
                                    i2l1149 45C2                                      i2l1192 45B4  
                                    i2l1275 45A6                                      i2l1358 4586  
                                    i2l6310 3B90                                      i2l6302 3B60  
                                    i2l6312 3BAA                                      i2l6320 3C0C  
                                    i2l6304 3B64                                      i2l6314 3BBE  
                                    i2l6306 3B76                                      i2l6316 3BD8  
                                    i2l6308 3B88                                      i2l6900 4524  
                                    i2l7700 2254                                      i2l6670 456E  
                                    i2l6910 450A                                      i2l7710 22A2  
                                    i2l7702 2262                                      i2l6672 4582  
                                    i2l6904 4538                                      i2l6920 45B8  
                                    i2l7800 2510                                      i2l7720 22EE  
                                    i2l7712 22B0                                      i2l7704 2270  
                                    i2l6914 451E                                      i2l6922 45BE  
                                    i2l6930 45B0                                      i2l7810 2562  
                                    i2l7802 2522                                      i2l7730 2332  
                                    i2l7722 22F2                                      i2l7714 22C2  
                                    i2l7706 2282                                      i2l6908 4508  
                                    i2l6940 459C                                      i2l7820 25B0  
                                    i2l7812 2570                                      i2l7804 2530  
                                    i2l7740 2376                                      i2l7732 2336  
                                    i2l7724 2306                                      i2l7716 22D0  
                                    i2l7708 2290                                      i2l6862 45E2  
                                    i2l6870 45DA                                      i2l6918 45B6  
                                    i2l6926 45A8                                      i2l6934 45CE  
                                    i2l6942 45A2                                      i2l7814 2582  
                                    i2l7806 2542                                      i2l7750 23BA  
                                    i2l7742 237A                                      i2l7734 234A  
                                    i2l7726 2314                                      i2l7718 22DE  
                                    i2l6880 4558                                      i2l6928 45AA  
                                    i2l7816 2590                                      i2l7808 2550  
                                    i2l7760 23FE                                      i2l7752 23BE  
                                    i2l7744 238E                                      i2l7736 2358  
                                    i2l7728 2322                                      i2l6794 4470  
                                    i2l6858 45E6                                      i2l6866 45DE  
                                    i2l6874 45D6                                      i2l6890 453E  
                                    i2l6938 459A                                      i2l7818 25A2  
                                    i2l7770 2442                                      i2l7762 2402  
                                    i2l7754 23D2                                      i2l7746 239C  
                                    i2l7738 2366                                      i2l6796 4472  
                                    i2l6884 456C                                      i2l7780 2486  
                                    i2l7772 2446                                      i2l7764 2416  
                                    i2l7756 23E0                                      i2l7748 23AA  
                                    i2l6798 4486                                      i2l6878 4556  
                                    i2l6894 4552                                      i2l7790 24CA  
                                    i2l7782 248A                                      i2l7774 245A  
                                    i2l7766 2424                                      i2l7758 23EE  
                                    i2l6888 453C                                      i2l7792 24CE  
                                    i2l7784 249E                                      i2l7776 2468  
                                    i2l7768 2432                                      i2l6898 4522  
                                    i2l7794 24E2                                      i2l7786 24AC  
                                    i2l7778 2476                                      i2l7796 24F0  
                                    i2l7788 24BA                                      i2l7798 2502  
                          __end_of___xxtofl 2CE4                               _RBx_Call_Back 0080  
                             ??_Timer2_init 000F                 __end_of_dc_motor_move_right 42FA  
                              vfprintf@cfmt 0049                        _lcd_8bit_send_enable 421A  
                  CCP_PWM_set_DutyCycle@ret 00F8                                  _Temp_value 0131  
                                 ??___fladd 0055                                   ??___fldiv 003C  
                                 ??___awdiv 0011                                   ??___awmod 0011  
                                 ??___flmul 0023                                   ??___fltol 0061  
                   __end_of_ADC_Read_Result 3C10                                   ??___lwdiv 0011  
                           ADC_init@ADC_obj 0010                        _lcd_8bit_send_string 3CB0  
                                    _memset 2E7A                                      clear_0 3FAC  
                                    clear_1 3FB8                                      clear_2 3FC4  
                          ___awdiv@quotient 0013                             ___awmod@divisor 000F  
                                    _timer2 00B5                                      isa$std 0001  
                           ___awmod@counter 0011                                      pad@buf 001F  
                                    dtoa@fp 0028                 lcd_8bit_send_string_pos@ret 002F  
               lcd_8bit_send_string_pos@row 002B                     _Timer2InterruptHandeler 009E  
                                    fputc@c 000D                                   ?_CCP1_ISR 0001  
                                    fputs@c 001A                                      fputs@i 001B  
                                 ?_CCP2_ISR 0001                                      fputs@s 0016  
                           _Macl_initialize 44A0                                __mediumconst 0000  
                                    tblptrh 0FF7                                      tblptrl 0FF6  
                                    tblptru 0FF8                                   ?_ADC_init 0010  
                                    putch@c 0001                            __end_of_vfprintf 421A  
                                 ?_CCP_Init 00F3                                   ??_sprintf 0053  
                   ADC_Start_Conversion@ret 000F                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                __accesstop 0080                     __end_of__initialization 3FCA  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                                 ?_INT2_ISR 0001                       _CCP_PWM_set_DutyCycle 28B8  
                             ___rparam_used 0001                                  ___fltol@f1 005D  
                     ?_lcd_8bit_send_enable 0017                                _CCP_PWM_Stop 40AE  
                    ??_gpio_pin_write_logic 0010                              __pcstackCOMRAM 0001  
                              __pidataBANK0 4438                                __pidataBANK1 4588  
                             __end_of_fputc 3870                               __end_of_fputs 433E  
                     ?_lcd_8bit_send_string 0022                convert_short_to_string@F3350 010B  
                             __end_of_putch 45EC                    __end_of_CCP_Timer_config 4170  
                            _INTx_Call_Back 0090                           RB5_ISR@RB5_source 0001  
                       __end_of_Timer2_init 3CB0                                  ??_CCP1_ISR 0001  
                                ??_CCP2_ISR 0001                      ??_ADC_Start_Conversion 000F  
                                ??_ADC_init 0012                          _lcd_8bit_send_char 3D4C  
              convert_short_to_string@value 0061                                  ??_CCP_Init 00F5  
                                   ??_fputc 0011                                     ??_fputs 001A  
                                   ??_putch 000D                                  __pbssBANK0 0080  
                                __pbssBANK1 0100                  _CCP_PWM_set_DutyCycle$4298 00F9  
                       ?_lcd_8bit_send_char 001A                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0001                                  ??_INT2_ISR 0001  
                    _application_initialize 45C4          convert_short_to_string@DataCounter 00FA  
                    lcd_8bit_initialize@ret 0027                           led_turn_off@F3211 00B3  
                              ??_TIMER0_ISR 0001                                ??_TIMER1_ISR 0001  
                              ??_TIMER2_ISR 0001                                ??_TIMER3_ISR 0001  
                          ?_ADC_Read_Result 0001                     __end_of_Macl_initialize 44C8  
ADC_StartConversion_INT@l_conversion_status 0018                                     _ADC_ISR 4470  
                           led_toggle@F3216 00B2                                     ?_memset 000D  
                      ??_lcd_8bit_send_char 001D                             CCP_PWM_Stop@ret 0010  
                                   _RB4_ISR 4554                                     _RB5_ISR 453A  
                                   _RB6_ISR 4520                                     _RB7_ISR 4506  
                                 ?___xxtofl 000D                          _ADC_Select_Channel 43FE  
                         RB7_ISR@RB7_source 0001                         ?_ADC_Select_Channel 0010  
                                _btn_values 1001                     ??_ADC_configure_Channel 000D  
                    ?_CCP_PWM_set_DutyCycle 00F3                              _tris_registers 00C6  
                        __end_of_TIMER0_ISR 45C4                          __end_of_TIMER1_ISR 45B6  
                        __end_of_TIMER2_ISR 45D6                          __end_of_TIMER3_ISR 45A8  
                   _Timer3InterruptHandeler 009C                      ??_lcd_8bit_send_enable 0019  
                                   __Hparam 0000                                     __Lparam 0000  
                               _Timer2_init 3C10                      ??_lcd_8bit_send_string 0026  
                       _gpio_pin_initialize 4042                                     ___fladd 15BE  
                     _lcd_8bit_send_command 3DE2                                     ___fldiv 1EA8  
                                   ___awdiv 3870                                     ___awmod 3AB0  
                                   ___flmul 1A7E                                     ___fltol 35C4  
                                   ___lwdiv 3EF2                        ??_ADC_Select_Channel 0013  
                                 ?_vfprintf 0043                                __psmallconst 1000  
                                   _ccp_obj 00D0                                     __pcinit 3F66  
                                   __ramtop 1000                    _lcd_8bit_send_string_pos 4170  
                                   __ptext0 25C8                                     __ptext1 4170  
                                   __ptext2 3934                                     __ptext3 3CB0  
                                   __ptext4 3D4C                                     __ptext5 42B4  
                                   __ptext6 39F6                                     __ptext7 4268  
                                   __ptext8 41CA                                     __ptext9 3266  
                                 _T0CONbits 0FD5                                   _T1CONbits 0FCD  
           ??_gpio_pin_direction_initialize 000F                                   _T2CONbits 0FCA  
                                ??___xxtofl 0011                                   _T3CONbits 0FB1  
                          ___awmod@dividend 000D                                     _motor_1 00F1  
                      ?_gpio_pin_initialize 0017                                     _sprintf 4268  
                            __pintcode_body 2242                        end_of_initialization 3FCA  
                                   fputc@fp 000F                                     memset@c 000F  
                                   memset@k 0015                                     memset@n 0011  
                                   memset@s 0017                   ADC_Select_Channel@ADC_obj 0010  
                                   int_func 2242                                     fputs@fp 0018  
          CCP_PWM_set_DutyCycle@l_duty_temp 00FD                           __end_of_vfpfcnvrt 3392  
                                   postdec1 0FE5                                     postdec2 0FDD  
                                   postinc0 0FEE                                     postinc1 0FE6  
                                   postinc2 0FDE                            vfpfcnvrt@convarg 003D  
                                ??_vfprintf 0049                            ?_Macl_initialize 0001  
                       lcd_8bit_send_char@i 0020                 dc_motor_move_right@dc_motor 0017  
                                 _PORTBbits 0F81                              _ecu_initialize 44EC  
                               ___fladd@grs 005C                          Timer2_init@TM2_obj 000D  
                             ___xxtofl@sign 0015                       ??_gpio_pin_initialize 0019  
                               ___fldiv@grs 0047                                 ___fldiv@rem 0040  
           CCP_PWM_set_DutyCycle@Duty_value 00F5                                 ___flmul@grs 0029  
                 ADC_Select_Channel@channel 0012                                 _CCP1CONbits 0FBD  
                               _CCP2CONbits 0FBA                               _CCP_PWM_Start 3FD4  
                        relay_turn_on@F3202 0071                      ?_lcd_8bit_send_command 001A  
                         relay_toggle@F3212 006F              lcd_8bit_send_string_pos@column 002C  
                  ?_ADC_StartConversion_INT 0015                                 vfpfcnvrt@ap 0039  
                               vfpfcnvrt@cp 0041                                 vfpfcnvrt@fp 0035  
                    __end_of_ecu_initialize 4506              lcd_8bit_send_string_pos@string 002D  
                            _timer0_preload 00A4                           ?_CCP_Timer_config 000D  
                            __end_of_memset 2FF0                              _timer1_preload 00A0  
                            _timer2_preload 00B1                          ??_CCP_Timer_config 000F  
                       start_initialization 3F66                              _timer3_preload 009A  
                 lcd_8bit_send_char@lcd_obj 001A                         _lcd_8bit_initialize 3134  
                             _CCP_Init$4330 0151                               _CCP_Init$4329 014D  
                               __end_of_abs 43C0                                 __end_of_pad 3EF2  
     __end_of_gpio_pin_direction_initialize 3134               _gpio_pin_direction_initialize 2FF0  
                   ?_application_initialize 0001                         CCP_PWM_Stop@ccp_obj 000D  
                lcd_8bit_send_string@string 0024                     _convert_short_to_string 39F6  
                            ?_CCP_PWM_Start 000D                  convert_int_to_string@F3357 0100  
                      ?_lcd_8bit_initialize 0022                      ADC_Read_Result@ADC_obj 0001  
                               vfprintf@fmt 0045               CCP1_Compare_write_value@F3299 00A8  
                               __pdataBANK0 00BC                                 __pdataBANK1 013C  
                                  ?_ADC_ISR 0001                                    ??_memset 0013  
                           ?_ecu_initialize 0001                         _lcd_8bit_set_cursor 3934  
                                memset@dest 000D                    lcd_8bit_send_command@ret 001F  
                                 ___fladd@a 0051                                   ___fladd@b 004D  
                    _CCP1_InterruptHandeler 00AC                                   ___fldiv@a 0038  
                                 ___fldiv@b 0034                                    ?_RB4_ISR 0001  
                                  ?_RB5_ISR 0001                                    ?_RB6_ISR 0001  
                                  ?_RB7_ISR 0001                             fp__ADC_callback 0000  
                                 ___flmul@a 001F                                   ___flmul@b 001B  
                               __pbssCOMRAM 0067                               __pcstackBANK0 00F3  
                             __pcstackBANK1 014D              __end_of_application_initialize 45CE  
                   ??_CCP_PWM_set_DutyCycle 00F6                        ?_lcd_8bit_set_cursor 0022  
        convert_short_to_string@Temp_String 00F3                      ADC_Read_Result@Resualt 0003  
             __end_of_ADC_configure_Channel 37A6                                   __pnvBANK0 00FF  
                     ??_lcd_8bit_initialize 0024             __end_of_ADC_StartConversion_INT 4380  
                ??_lcd_8bit_send_string_pos 002F                            ___lwdiv@dividend 000D  
                                 _dtoa$3827 002C                                ?_Timer2_init 000D  
                                 __pintcode 0008                                    ?___fladd 004D  
                                  ?___fldiv 0034                                    ?___awdiv 000D  
                                  ?___awmod 000D                                    ?___flmul 001B  
                                  ?___fltol 005D                                    ?___lwdiv 000D  
                convert_short_to_string@ret 00F9                  convert_short_to_string@str 0063  
                               __smallconst 1000                     CCP_Timer_config@ccp_obj 000D  
                                  _CCP1_ISR 45E6                            CCP_PWM_Start@ret 0010  
                                  _CCP2_ISR 45E2                                    _ADC_init 34BE  
                          ___lwdiv@quotient 0011                                    _CCP_Init 105E  
                                  ?_sprintf 004B                               ?_ADC_callback 0001  
                 ??_convert_short_to_string 0065                       ??_lcd_8bit_set_cursor 0026  
                                  _INT0_ISR 45DE                                    _INT1_ISR 45DA  
                                  _INT2_ISR 45D6                             ??_CCP_PWM_Start 000F  
                                  _PIE1bits 0F9D                                    _PIE2bits 0FA0  
                                  _PIR1bits 0F9E                                    _PIR2bits 0FA1  
                                  i2u800_40 25A2                                    i2u800_41 259E  
                                  i2u801_40 25B0                                    i2u801_41 25AC  
                                  i2u645_40 4486                                    i2u645_41 4482  
                                  i2u750_40 2262                                    i2u750_41 225E  
                                  i2u646_48 448C                                    i2u751_40 2270  
                                  i2u646_49 449E                                    i2u751_41 226C  
                                  i2u656_40 4568                                    i2u760_40 2306  
                                  i2u752_40 2282                                    i2u656_41 4564  
                                  i2u760_41 2302                                    i2u752_41 227E  
                                  i2u657_40 454E                                    i2u761_40 2314  
                                  i2u753_40 2290                                    i2u657_41 454A  
                                  i2u761_41 2310                                    i2u753_41 228C  
                                  i2u594_40 3B76                                    i2u658_40 4534  
                                  i2u770_40 23AA                                    i2u762_40 2322  
                                  i2u754_40 22A2                                    i2u594_41 3B72  
                                  i2u658_41 4530                                    i2u770_41 23A6  
                                  i2u762_41 231E                                    i2u754_41 229E  
                                  i2u595_40 3B88                                    i2u659_40 451A  
                                  i2u771_40 23BA                                    i2u763_40 2332  
                                  i2u755_40 22B0                                    i2u595_41 3B84  
                                  i2u659_41 4516                                    i2u771_41 23B6  
                                  i2u763_41 232E                                    i2u755_41 22AC  
                                  i2u596_40 3BAA                                    i2u780_40 245A  
                                  i2u772_40 23D2                                    i2u764_40 234A  
                                  i2u756_40 22C2                                    i2u596_41 3BA6  
                                  i2u780_41 2456                                    i2u772_41 23CE  
                                  i2u764_41 2346                                    i2u756_41 22BE  
                                  i2u597_40 3BD8                                    i2u781_40 2468  
                                  i2u773_40 23E0                                    i2u765_40 2358  
                                  i2u757_40 22D0                                    i2u597_41 3BD4  
                                  i2u781_41 2464                                    i2u773_41 23DC  
                                  i2u765_41 2354                                    i2u757_41 22CC  
                                  i2u790_40 2502                                    i2u782_40 2476  
                                  i2u774_40 23EE                                    i2u766_40 2366  
                                  i2u758_40 22DE                                    i2u790_41 24FE  
                                  i2u782_41 2472                                    i2u774_41 23EA  
                                  i2u766_41 2362                                    i2u758_41 22DA  
                                  i2u598_45 3BF0                                    i2u791_40 2510  
                                  i2u783_40 2486                                    i2u775_40 23FE  
                                  i2u767_40 2376                                    i2u759_40 22EE  
                                  i2u791_41 250C                                    i2u783_41 2482  
                                  i2u775_41 23FA                                    i2u767_41 2372  
                                  i2u759_41 22EA                                    i2u792_40 2522  
                                  i2u784_40 249E                                    i2u776_40 2416  
                                  i2u768_40 238E                                    i2u792_41 251E  
                                  i2u784_41 249A                                    i2u776_41 2412  
                                  i2u768_41 238A                                    i2u793_40 2530  
                                  i2u785_40 24AC                                    i2u777_40 2424  
                                  i2u769_40 239C                                    i2u793_41 252C  
                                  i2u785_41 24A8                                    i2u777_41 2420  
                                  i2u769_41 2398                                    i2u794_40 2542  
                                  i2u786_40 24BA                                    i2u778_40 2432  
                                  i2u794_41 253E                                    i2u786_41 24B6  
                                  i2u778_41 242E                                    i2u795_40 2550  
                                  i2u787_40 24CA                                    i2u779_40 2442  
                                  i2u795_41 254C                                    i2u787_41 24C6  
                                  i2u779_41 243E                                    i2u796_40 2562  
                                  i2u788_40 24E2                                    i2u796_41 255E  
                                  i2u788_41 24DE                                    i2u797_40 2570  
                                  i2u789_40 24F0                                    i2u797_41 256C  
                                  i2u789_41 24EC                                    i2u798_40 2582  
                                  i2u798_41 257E                                    i2u799_40 2590  
                                  i2u799_41 258C                         _dc_motor_initialize 43C0  
          gpio_pin_direction_initialize@pin 000D            gpio_pin_direction_initialize@ret 0015  
                         RB4_ISR@RB4_source 0001                                   _vfpfcnvrt 3266  
                                _ADCON0bits 0FC2                                  _ADCON1bits 0FC1  
                                _ADCON2bits 0FC0                                    _RBx_flag 0067  
                    gpio_pin_initialize@pin 0017                      gpio_pin_initialize@ret 001A  
                 lcd_8bit_set_cursor@column 0025                             CCP_Init@ccp_obj 00F3  
                               ADC_init@ret 0013                        ?_dc_motor_initialize 001B  
                            ??_ADC_callback 0009                     gpio_pin_write_logic@log 000F  
                   gpio_pin_write_logic@pin 000D                     gpio_pin_write_logic@ret 0016  
                               _INTCON2bits 0FF1                                 _INTCON3bits 0FF0  
                                 copy_data0 3F7A                                   copy_data1 3F9A  
                     _ADC_InterruptCallBack 00AE                         _dc_motor_move_right 42B4  
                   lcd_8bit_send_enable@ret 0019                     ??_lcd_8bit_send_command 001D  
                                _EECON1bits 0FA6                                    __Hrparam 0000  
                             ?_CCP_PWM_Stop 000D                                  vfprintf@ap 0047  
                                  __Lrparam 0000                                  vfprintf@fp 0043  
           __end_of_convert_short_to_string 3AB0                                  ?_vfpfcnvrt 0035  
                      ?_dc_motor_move_right 0017                 __end_of_gpio_pin_initialize 40AE  
                        __end_of_btn_values 100D                                  sprintf@fmt 004D  
                         RB6_ISR@RB6_source 0001                                    ___xxtofl 2B30  
                      lcd_8bit_initialize@i 0025                       ??_dc_motor_initialize 001D  
                           ___lwdiv@divisor 000F                             ___lwdiv@counter 0013  
                                  __ptext10 2CE4                                    __ptext11 3E78  
                                  __ptext20 44EC                                    __ptext12 42FA  
                                  __ptext21 3134                                    __ptext13 37A6  
                                  __ptext30 2FF0                                    __ptext22 3DE2  
                                  __ptext14 45EA                                    __ptext31 4114  
                                  __ptext23 421A                                    __ptext15 4380  
                                  __ptext40 40AE                                    __ptext32 34BE  
                                  __ptext24 43C0                                    __ptext16 3AB0  
                                  __ptext41 3FD4                                    __ptext33 3EF2  
                                  __ptext25 44A0                                    __ptext17 3870  
                                  __ptext50 45B6                                    __ptext42 433E  
                                  __ptext34 28B8                                    __ptext26 3C10  
                                  __ptext18 2E7A                                    __ptext51 4506  
                                  __ptext43 44C8                                    __ptext35 2B30  
                                  __ptext27 105E                                    __ptext19 45C4  
                                  __ptext60 4470                                    __ptext52 4520  
                                  __ptext44 43FE                                    __ptext36 35C4  
                                  __ptext28 4042                                    __ptext61 456E  
                                  __ptext53 453A                                    __ptext45 36CA  
                                  __ptext37 1A7E                                    __ptext29 3392  
                                  __ptext62 3B60                                    __ptext54 4554  
                                  __ptext38 1EA8                                    __ptext63 0000  
                                  __ptext55 45D6                                    __ptext47 459A  
                                  __ptext39 15BE                                    __ptext56 45DA  
                                  __ptext48 45CE                                    __ptext57 45DE  
                                  __ptext49 45A8                                    __ptext58 45E2  
                                  __ptext59 45E6                      dc_motor_move_right@ret 0019  
                         ??_ADC_Read_Result 0005              ADC_StartConversion_INT@ADC_obj 0015  
          __end_of_lcd_8bit_send_string_pos 41CA                              ??_CCP_PWM_Stop 000F  
                               CCP_Init@ret 0155                            ??_ecu_initialize 0028  
                                  isa$xinst 0000                                    int$flags 0073  
                                  _vfprintf 41CA                 dc_motor_initialize@dc_motor 001B  
                     ??_dc_motor_move_right 0019                ADC_configure_Channel@channel 000F  
                   _Timer0InterruptHandeler 00A6                                  _INTCONbits 0FF2  
                    lcd_8bit_send_command@i 0020                __end_of_gpio_pin_write_logic 34BE  
                                  intlevel2 0000               __end_of_CCP_PWM_set_DutyCycle 2B30  
                                 sprintf@ap 0053              ADC_StartConversion_INT@channel 0017  
              __end_of_ADC_Start_Conversion 44EC                       ADC_Select_Channel@ret 0014  
                     lcd_8bit_send_char@chr 001C                       lcd_8bit_send_char@ret 001F  
              CCP_PWM_set_DutyCycle@ccp_obj 00F3                        __end_of_ADC_callback 4588  
                                _TIMER0_ISR 45B6                                  _TIMER1_ISR 45A8  
                                _TIMER2_ISR 45CE                                  _TIMER3_ISR 459A  
                               ??_vfpfcnvrt 003B                                    sprintf@f 0055  
                                  sprintf@s 004B                      _CCP2_InterruptHandeler 00AA  
                            _port_registers 013C                              Timer2_init@ret 0010  
                             ___fladd@signs 0059                     lcd_8bit_send_string@ret 0026  
               __end_of_lcd_8bit_initialize 3266                           ??_Macl_initialize 0067  
              lcd_8bit_send_command@lcd_obj 001A                lcd_8bit_send_command@command 001C  
                              ___fladd@aexp 005A                                ___fladd@bexp 005B  
                     _ADC_configure_Channel 36CA  
