

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 03 17:30:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86   000000                     
    87                           ; Generated 23/03/2023 GMT
    88                           ; 
    89                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F4620 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122                           	psect	idataBANK0
   123   004438                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _lat_registers
   127   004438  89                 	db	137
   128   004439  0F                 	db	15
   129   00443A  8A                 	db	138
   130   00443B  0F                 	db	15
   131   00443C  8B                 	db	139
   132   00443D  0F                 	db	15
   133   00443E  8C                 	db	140
   134   00443F  0F                 	db	15
   135   004440  8D                 	db	141
   136   004441  0F                 	db	15
   137                           
   138                           ;initializer for _tris_registers
   139   004442  92                 	db	146
   140   004443  0F                 	db	15
   141   004444  93                 	db	147
   142   004445  0F                 	db	15
   143   004446  94                 	db	148
   144   004447  0F                 	db	15
   145   004448  95                 	db	149
   146   004449  0F                 	db	15
   147   00444A  96                 	db	150
   148   00444B  0F                 	db	15
   149                           
   150                           ;initializer for _ccp_obj
   151   00444C  02                 	db	2
   152   00444D  00                 	db	0
   153   00444E  0C                 	db	12
   154   00444F  12                 	db	18
   155   004450  00                 	db	0
   156   004451  00                 	db	0
   157   004452  00                 	db	0
   158   004453  00                 	db	0
   159   004454  00                 	db	0
   160   004455  00                 	db	0
   161   004456  00                 	db	0
   162   004457  1388               	dw	5000
   163   004459  0000               	dw	0
   164   00445B  05                 	db	5
   165                           
   166                           ;initializer for _lcd_1
   167   00445C  03                 	db	3
   168   00445D  0B                 	db	11
   169   00445E  13                 	db	19
   170   00445F  1B                 	db	27
   171   004460  23                 	db	35
   172   004461  2B                 	db	43
   173   004462  33                 	db	51
   174   004463  3B                 	db	59
   175   004464  0A                 	db	10
   176   004465  02                 	db	2
   177                           
   178                           ;initializer for _Lm35
   179   004466  FA                 	db	low _ADC_callback
   180   004467  44                 	db	high _ADC_callback
   181   004468  00                 	db	0
   182   004469  00                 	db	0
   183   00446A  05                 	db	5
   184   00446B  05                 	db	5
   185   00446C  03                 	db	3
   186                           
   187                           ;initializer for _motor_1
   188   00446D  1A                 	db	26
   189   00446E  22                 	db	34
   190                           
   191                           	psect	idataBANK1
   192   00459A                     __pidataBANK1:
   193                           	callstack 0
   194                           
   195                           ;initializer for _port_registers
   196   00459A  80                 	db	128
   197   00459B  0F                 	db	15
   198   00459C  81                 	db	129
   199   00459D  0F                 	db	15
   200   00459E  82                 	db	130
   201   00459F  0F                 	db	15
   202   0045A0  83                 	db	131
   203   0045A1  0F                 	db	15
   204   0045A2  84                 	db	132
   205   0045A3  0F                 	db	15
   206                           
   207                           ;initializer for _kp1
   208   0045A4  02                 	db	2
   209   0045A5  0A                 	db	10
   210   0045A6  12                 	db	18
   211   0045A7  1A                 	db	26
   212   0045A8  62                 	db	98
   213   0045A9  6A                 	db	106
   214   0045AA  72                 	db	114
   215                           
   216                           	psect	smallconst
   217   001000                     __psmallconst:
   218                           	callstack 0
   219   001000  00                 	db	0
   220   001001                     _btn_values:
   221                           	callstack 0
   222   001001  31                 	db	49
   223   001002  32                 	db	50
   224   001003  33                 	db	51
   225   001004  34                 	db	52
   226   001005  35                 	db	53
   227   001006  36                 	db	54
   228   001007  37                 	db	55
   229   001008  38                 	db	56
   230   001009  39                 	db	57
   231   00100A  2A                 	db	42
   232   00100B  30                 	db	48
   233   00100C  23                 	db	35
   234   00100D                     __end_of_btn_values:
   235                           	callstack 0
   236   000000                     _TMR3L	set	4018
   237   000000                     _TMR3H	set	4019
   238   000000                     _TMR2	set	4044
   239   000000                     _TMR1L	set	4046
   240   000000                     _TMR1H	set	4047
   241   000000                     _T1CONbits	set	4045
   242   000000                     _T0CONbits	set	4053
   243   000000                     _INTCON2bits	set	4081
   244   000000                     _INTCON3bits	set	4080
   245   000000                     _EECON2	set	4007
   246   000000                     _CCPR2L	set	4027
   247   000000                     _CCPR2H	set	4028
   248   000000                     _CCPR1L	set	4030
   249   000000                     _CCPR1H	set	4031
   250   000000                     _ADRESL	set	4035
   251   000000                     _ADRESH	set	4036
   252   000000                     _ADCON1bits	set	4033
   253   000000                     _INTCONbits	set	4082
   254   000000                     _TRISD	set	3989
   255   000000                     _TRISC	set	3988
   256   000000                     _TRISB	set	3987
   257   000000                     _TRISE	set	3990
   258   00100D                     STR_4:
   259   00100D  54                 	db	84	;'T'
   260   00100E  65                 	db	101	;'e'
   261   00100F  6D                 	db	109	;'m'
   262   001010  70                 	db	112	;'p'
   263   001011  65                 	db	101	;'e'
   264   001012  72                 	db	114	;'r'
   265   001013  61                 	db	97	;'a'
   266   001014  74                 	db	116	;'t'
   267   001015  75                 	db	117	;'u'
   268   001016  72                 	db	114	;'r'
   269   001017  65                 	db	101	;'e'
   270   001018  20                 	db	32
   271   001019  3A                 	db	58	;':'
   272   00101A  20                 	db	32
   273   00101B  00                 	db	0
   274   00101C                     STR_5:
   275   00101C  46                 	db	70	;'F'
   276   00101D  61                 	db	97	;'a'
   277   00101E  6E                 	db	110	;'n'
   278   00101F  20                 	db	32
   279   001020  4C                 	db	76	;'L'
   280   001021  65                 	db	101	;'e'
   281   001022  76                 	db	118	;'v'
   282   001023  65                 	db	101	;'e'
   283   001024  6C                 	db	108	;'l'
   284   001025  20                 	db	32
   285   001026  3A                 	db	58	;':'
   286   001027  2D                 	db	45
   287   001028  20                 	db	32
   288   001029  00                 	db	0
   289   00102A                     STR_10:
   290   00102A  4C                 	db	76	;'L'
   291   00102B  65                 	db	101	;'e'
   292   00102C  76                 	db	118	;'v'
   293   00102D  65                 	db	101	;'e'
   294   00102E  6C                 	db	108	;'l'
   295   00102F  20                 	db	32
   296   001030  31                 	db	49	;'1'
   297   001031  00                 	db	0
   298   001032                     STR_9:
   299   001032  4C                 	db	76	;'L'
   300   001033  65                 	db	101	;'e'
   301   001034  76                 	db	118	;'v'
   302   001035  65                 	db	101	;'e'
   303   001036  6C                 	db	108	;'l'
   304   001037  20                 	db	32
   305   001038  32                 	db	50	;'2'
   306   001039  00                 	db	0
   307   00103A                     STR_8:
   308   00103A  4C                 	db	76	;'L'
   309   00103B  65                 	db	101	;'e'
   310   00103C  76                 	db	118	;'v'
   311   00103D  65                 	db	101	;'e'
   312   00103E  6C                 	db	108	;'l'
   313   00103F  20                 	db	32
   314   001040  33                 	db	51	;'3'
   315   001041  00                 	db	0
   316   001042                     STR_7:
   317   001042  4C                 	db	76	;'L'
   318   001043  65                 	db	101	;'e'
   319   001044  76                 	db	118	;'v'
   320   001045  65                 	db	101	;'e'
   321   001046  6C                 	db	108	;'l'
   322   001047  20                 	db	32
   323   001048  34                 	db	52	;'4'
   324   001049  00                 	db	0
   325   00104A                     STR_6:
   326   00104A  4C                 	db	76	;'L'
   327   00104B  65                 	db	101	;'e'
   328   00104C  76                 	db	118	;'v'
   329   00104D  65                 	db	101	;'e'
   330   00104E  6C                 	db	108	;'l'
   331   00104F  20                 	db	32
   332   001050  35                 	db	53	;'5'
   333   001051  00                 	db	0
   334   001052                     STR_11:
   335   001052  46                 	db	70	;'F'
   336   001053  61                 	db	97	;'a'
   337   001054  6E                 	db	110	;'n'
   338   001055  20                 	db	32
   339   001056  4F                 	db	79	;'O'
   340   001057  46                 	db	70	;'F'
   341   001058  46                 	db	70	;'F'
   342   001059  00                 	db	0
   343   00105A                     STR_1:
   344   00105A  25                 	db	37
   345   00105B  69                 	db	105	;'i'
   346   00105C  00                 	db	0
   347   00105D  00                 	db	0	; dummy byte at the end
   348   000000                     
   349                           	psect	nvBANK0
   350   0000FF                     __pnvBANK0:
   351                           	callstack 0
   352   0000FF                     _ret:
   353                           	callstack 0
   354   0000FF                     	ds	1
   355   000000                     _PORTBbits	set	3969
   356   000000                     _PIE1bits	set	3997
   357   000000                     _ADCON2bits	set	4032
   358   000000                     _ADCON0bits	set	4034
   359   000000                     _LATA	set	3977
   360   000000                     _PORTE	set	3972
   361   000000                     _PORTD	set	3971
   362   000000                     _PORTC	set	3970
   363   000000                     _PORTB	set	3969
   364   000000                     _PORTA	set	3968
   365   000000                     _TRISA	set	3986
   366   000000                     _PIE2bits	set	4000
   367   000000                     _CCP2CONbits	set	4026
   368   000000                     _CCP1CONbits	set	4029
   369   000000                     _PIR1bits	set	3998
   370   000000                     _T2CONbits	set	4042
   371   000000                     _PR2	set	4043
   372   000000                     _EECON1bits	set	4006
   373   000000                     _EEDATA	set	4008
   374   000000                     _EEADR	set	4009
   375   000000                     _EEADRH	set	4010
   376   000000                     _T3CONbits	set	4017
   377   000000                     _PIR2bits	set	4001
   378   000000                     _LATE	set	3981
   379   000000                     _LATD	set	3980
   380   000000                     _LATC	set	3979
   381   000000                     _LATB	set	3978
   382   000000                     _TMR0H	set	4055
   383   000000                     _TMR0L	set	4054
   384                           
   385                           ; #config settings
   386                           
   387                           	psect	cinit
   388   003F66                     __pcinit:
   389                           	callstack 0
   390   003F66                     start_initialization:
   391                           	callstack 0
   392   003F66                     __initialization:
   393                           	callstack 0
   394                           
   395                           ; Initialize objects allocated to BANK1 (17 bytes)
   396                           ; load TBLPTR registers with __pidataBANK1
   397   003F66  0E9A               	movlw	low __pidataBANK1
   398   003F68  6EF6               	movwf	tblptrl,c
   399   003F6A  0E45               	movlw	high __pidataBANK1
   400   003F6C  6EF7               	movwf	tblptrh,c
   401   003F6E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   402   003F70  6EF8               	movwf	tblptru,c
   403   003F72  EE01  F03C         	lfsr	0,__pdataBANK1
   404   003F76  EE10 F011          	lfsr	1,17
   405   003F7A                     copy_data0:
   406   003F7A  0009               	tblrd		*+
   407   003F7C  CFF5 FFEE          	movff	tablat,postinc0
   408   003F80  50E5               	movf	postdec1,w,c
   409   003F82  50E1               	movf	fsr1l,w,c
   410   003F84  E1FA               	bnz	copy_data0
   411                           
   412                           ; Initialize objects allocated to BANK0 (55 bytes)
   413                           ; load TBLPTR registers with __pidataBANK0
   414   003F86  0E38               	movlw	low __pidataBANK0
   415   003F88  6EF6               	movwf	tblptrl,c
   416   003F8A  0E44               	movlw	high __pidataBANK0
   417   003F8C  6EF7               	movwf	tblptrh,c
   418   003F8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   419   003F90  6EF8               	movwf	tblptru,c
   420   003F92  EE00  F0BC         	lfsr	0,__pdataBANK0
   421   003F96  EE10 F037          	lfsr	1,55
   422   003F9A                     copy_data1:
   423   003F9A  0009               	tblrd		*+
   424   003F9C  CFF5 FFEE          	movff	tablat,postinc0
   425   003FA0  50E5               	movf	postdec1,w,c
   426   003FA2  50E1               	movf	fsr1l,w,c
   427   003FA4  E1FA               	bnz	copy_data1
   428                           
   429                           ; Clear objects allocated to BANK1 (60 bytes)
   430   003FA6  EE01  F000         	lfsr	0,__pbssBANK1
   431   003FAA  0E3C               	movlw	60
   432   003FAC                     clear_0:
   433   003FAC  6AEE               	clrf	postinc0,c
   434   003FAE  06E8               	decf	wreg,f,c
   435   003FB0  E1FD               	bnz	clear_0
   436                           
   437                           ; Clear objects allocated to BANK0 (60 bytes)
   438   003FB2  EE00  F080         	lfsr	0,__pbssBANK0
   439   003FB6  0E3C               	movlw	60
   440   003FB8                     clear_1:
   441   003FB8  6AEE               	clrf	postinc0,c
   442   003FBA  06E8               	decf	wreg,f,c
   443   003FBC  E1FD               	bnz	clear_1
   444                           
   445                           ; Clear objects allocated to COMRAM (12 bytes)
   446   003FBE  EE00  F067         	lfsr	0,__pbssCOMRAM
   447   003FC2  0E0C               	movlw	12
   448   003FC4                     clear_2:
   449   003FC4  6AEE               	clrf	postinc0,c
   450   003FC6  06E8               	decf	wreg,f,c
   451   003FC8  E1FD               	bnz	clear_2
   452   003FCA                     end_of_initialization:
   453                           	callstack 0
   454   003FCA                     __end_of__initialization:
   455                           	callstack 0
   456   003FCA  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   457   003FCC  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   458   003FCE  0100               	movlb	0
   459   003FD0  EFE4  F012         	goto	_main	;jump to C main() function
   460                           
   461                           	psect	bssCOMRAM
   462   000067                     __pbssCOMRAM:
   463                           	callstack 0
   464   000067                     _RBx_flag:
   465                           	callstack 0
   466   000067                     	ds	4
   467   00006B                     _temp:
   468                           	callstack 0
   469   00006B                     	ds	2
   470   00006D                     _Flag:
   471                           	callstack 0
   472   00006D                     	ds	1
   473   00006E                     led_initialize@F3201:
   474                           	callstack 0
   475   00006E                     	ds	1
   476   00006F                     relay_toggle@F3212:
   477                           	callstack 0
   478   00006F                     	ds	1
   479   000070                     relay_turn_off@F3207:
   480                           	callstack 0
   481   000070                     	ds	1
   482   000071                     relay_turn_on@F3202:
   483                           	callstack 0
   484   000071                     	ds	1
   485   000072                     relay_initialize@F3197:
   486                           	callstack 0
   487   000072                     	ds	1
   488                           
   489                           	psect	bssBANK0
   490   000080                     __pbssBANK0:
   491                           	callstack 0
   492   000080                     _RBx_Call_Back:
   493                           	callstack 0
   494   000080                     	ds	16
   495   000090                     _INTx_Call_Back:
   496                           	callstack 0
   497   000090                     	ds	6
   498   000096                     _width:
   499                           	callstack 0
   500   000096                     	ds	2
   501   000098                     _prec:
   502                           	callstack 0
   503   000098                     	ds	2
   504   00009A                     _timer3_preload:
   505                           	callstack 0
   506   00009A                     	ds	2
   507   00009C                     _Timer3InterruptHandeler:
   508                           	callstack 0
   509   00009C                     	ds	2
   510   00009E                     _Timer2InterruptHandeler:
   511                           	callstack 0
   512   00009E                     	ds	2
   513   0000A0                     _timer1_preload:
   514                           	callstack 0
   515   0000A0                     	ds	2
   516   0000A2                     _Timer1InterruptHandeler:
   517                           	callstack 0
   518   0000A2                     	ds	2
   519   0000A4                     _timer0_preload:
   520                           	callstack 0
   521   0000A4                     	ds	2
   522   0000A6                     _Timer0InterruptHandeler:
   523                           	callstack 0
   524   0000A6                     	ds	2
   525   0000A8                     CCP1_Compare_write_value@F3299:
   526                           	callstack 0
   527   0000A8                     	ds	2
   528   0000AA                     _CCP2_InterruptHandeler:
   529                           	callstack 0
   530   0000AA                     	ds	2
   531   0000AC                     _CCP1_InterruptHandeler:
   532                           	callstack 0
   533   0000AC                     	ds	2
   534   0000AE                     _ADC_InterruptCallBack:
   535                           	callstack 0
   536   0000AE                     	ds	2
   537   0000B0                     _flags:
   538                           	callstack 0
   539   0000B0                     	ds	1
   540   0000B1                     _timer2_preload:
   541                           	callstack 0
   542   0000B1                     	ds	1
   543   0000B2                     led_toggle@F3216:
   544                           	callstack 0
   545   0000B2                     	ds	1
   546   0000B3                     led_turn_off@F3211:
   547                           	callstack 0
   548   0000B3                     	ds	1
   549   0000B4                     led_turn_on@F3206:
   550                           	callstack 0
   551   0000B4                     	ds	1
   552   0000B5                     _timer2:
   553                           	callstack 0
   554   0000B5                     	ds	5
   555   0000BA                     _res1:
   556                           	callstack 0
   557   0000BA                     	ds	2
   558                           
   559                           	psect	dataBANK0
   560   0000BC                     __pdataBANK0:
   561                           	callstack 0
   562   0000BC                     _lat_registers:
   563                           	callstack 0
   564   0000BC                     	ds	10
   565   0000C6                     _tris_registers:
   566                           	callstack 0
   567   0000C6                     	ds	10
   568   0000D0                     _ccp_obj:
   569                           	callstack 0
   570   0000D0                     	ds	16
   571   0000E0                     _lcd_1:
   572                           	callstack 0
   573   0000E0                     	ds	10
   574   0000EA                     _Lm35:
   575                           	callstack 0
   576   0000EA                     	ds	7
   577   0000F1                     _motor_1:
   578                           	callstack 0
   579   0000F1                     	ds	2
   580                           
   581                           	psect	bssBANK1
   582   000100                     __pbssBANK1:
   583                           	callstack 0
   584   000100                     	ds	11
   585   00010B                     	ds	6
   586   000111                     _dbuf:
   587                           	callstack 0
   588   000111                     	ds	32
   589   000131                     _Temp_value:
   590                           	callstack 0
   591   000131                     	ds	11
   592                           
   593                           	psect	dataBANK1
   594   00013C                     __pdataBANK1:
   595                           	callstack 0
   596   00013C                     _port_registers:
   597                           	callstack 0
   598   00013C                     	ds	10
   599   000146                     _kp1:
   600                           	callstack 0
   601   000146                     	ds	7
   602                           
   603                           	psect	cstackBANK1
   604   00014D                     __pcstackBANK1:
   605                           	callstack 0
   606   00014D                     _CCP_Init$4244:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x0
   610   00014D                     	ds	4
   611   000151                     _CCP_Init$4245:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x4
   615   000151                     	ds	4
   616   000155                     CCP_Init@ret:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x8
   620   000155                     	ds	1
   621                           
   622                           	psect	cstackBANK0
   623   0000F3                     __pcstackBANK0:
   624                           	callstack 0
   625   0000F3                     CCP_Init@ccp_obj:
   626                           	callstack 0
   627   0000F3                     CCP_PWM_set_DutyCycle@ccp_obj:
   628                           	callstack 0
   629   0000F3                     convert_short_to_string@Temp_String:
   630                           	callstack 0
   631                           
   632                           ; 6 bytes @ 0x0
   633   0000F3                     	ds	2
   634   0000F5                     ??_CCP_Init:
   635   0000F5                     CCP_PWM_set_DutyCycle@Duty_value:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x2
   639   0000F5                     	ds	1
   640   0000F6                     ??_CCP_PWM_set_DutyCycle:
   641                           
   642                           ; 1 bytes @ 0x3
   643   0000F6                     	ds	2
   644   0000F8                     CCP_PWM_set_DutyCycle@ret:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x5
   648   0000F8                     	ds	1
   649   0000F9                     convert_short_to_string@ret:
   650                           	callstack 0
   651   0000F9                     _CCP_PWM_set_DutyCycle$4213:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x6
   655   0000F9                     	ds	1
   656   0000FA                     convert_short_to_string@DataCounter:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x7
   660   0000FA                     	ds	3
   661   0000FD                     CCP_PWM_set_DutyCycle@l_duty_temp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xA
   665   0000FD                     	ds	2
   666                           
   667                           	psect	cstackCOMRAM
   668   000001                     __pcstackCOMRAM:
   669                           	callstack 0
   670   000001                     RB4_ISR@RB4_source:
   671                           	callstack 0
   672   000001                     RB5_ISR@RB5_source:
   673                           	callstack 0
   674   000001                     RB6_ISR@RB6_source:
   675                           	callstack 0
   676   000001                     RB7_ISR@RB7_source:
   677                           	callstack 0
   678   000001                     ADC_Read_Result@ADC_obj:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x0
   682   000001                     	ds	2
   683   000003                     ADC_Read_Result@Resualt:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x2
   687   000003                     	ds	2
   688   000005                     ??_ADC_Read_Result:
   689                           
   690                           ; 1 bytes @ 0x4
   691   000005                     	ds	3
   692   000008                     ADC_Read_Result@ret:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x7
   696   000008                     	ds	1
   697   000009                     ??_Interrupt_manager:
   698                           
   699                           ; 1 bytes @ 0x8
   700   000009                     	ds	4
   701   00000D                     ??_ADC_configure_Channel:
   702   00000D                     ?___awdiv:
   703                           	callstack 0
   704   00000D                     ?___awmod:
   705                           	callstack 0
   706   00000D                     ?___lwdiv:
   707                           	callstack 0
   708   00000D                     ?___xxtofl:
   709                           	callstack 0
   710   00000D                     ADC_Start_Conversion@ADC_obj:
   711                           	callstack 0
   712   00000D                     CCP_PWM_Start@ccp_obj:
   713                           	callstack 0
   714   00000D                     CCP_PWM_Stop@ccp_obj:
   715                           	callstack 0
   716   00000D                     CCP_Timer_config@ccp_obj:
   717                           	callstack 0
   718   00000D                     gpio_pin_direction_initialize@pin:
   719                           	callstack 0
   720   00000D                     gpio_pin_write_logic@pin:
   721                           	callstack 0
   722   00000D                     Timer2_init@TM2_obj:
   723                           	callstack 0
   724   00000D                     ___awdiv@dividend:
   725                           	callstack 0
   726   00000D                     ___awmod@dividend:
   727                           	callstack 0
   728   00000D                     ___lwdiv@dividend:
   729                           	callstack 0
   730   00000D                     memset@dest:
   731                           	callstack 0
   732   00000D                     fputc@c:
   733                           	callstack 0
   734   00000D                     ___xxtofl@val:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0xC
   738   00000D                     	ds	2
   739   00000F                     ??_gpio_pin_direction_initialize:
   740   00000F                     ??_CCP_Timer_config:
   741   00000F                     ??_Timer2_init:
   742   00000F                     ADC_Start_Conversion@ret:
   743                           	callstack 0
   744   00000F                     ADC_configure_Channel@channel:
   745                           	callstack 0
   746   00000F                     gpio_pin_write_logic@log:
   747                           	callstack 0
   748   00000F                     ___awdiv@divisor:
   749                           	callstack 0
   750   00000F                     ___awmod@divisor:
   751                           	callstack 0
   752   00000F                     ___lwdiv@divisor:
   753                           	callstack 0
   754   00000F                     memset@c:
   755                           	callstack 0
   756   00000F                     fputc@fp:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0xE
   760   00000F                     	ds	1
   761   000010                     ??_gpio_pin_write_logic:
   762   000010                     CCP_PWM_Start@ret:
   763                           	callstack 0
   764   000010                     CCP_PWM_Stop@ret:
   765                           	callstack 0
   766   000010                     Timer2_init@ret:
   767                           	callstack 0
   768   000010                     ADC_init@ADC_obj:
   769                           	callstack 0
   770   000010                     ADC_Select_Channel@ADC_obj:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0xF
   774   000010                     	ds	1
   775   000011                     ??_fputc:
   776   000011                     ??___xxtofl:
   777   000011                     ___awdiv@counter:
   778                           	callstack 0
   779   000011                     ___awmod@counter:
   780                           	callstack 0
   781   000011                     ___lwdiv@quotient:
   782                           	callstack 0
   783   000011                     memset@n:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x10
   787   000011                     	ds	1
   788   000012                     ??_ADC_init:
   789   000012                     ADC_Select_Channel@channel:
   790                           	callstack 0
   791   000012                     ___awdiv@sign:
   792                           	callstack 0
   793   000012                     ___awmod@sign:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x11
   797   000012                     	ds	1
   798   000013                     ??_memset:
   799   000013                     ??_ADC_Select_Channel:
   800   000013                     ?_abs:
   801                           	callstack 0
   802   000013                     ADC_init@ret:
   803                           	callstack 0
   804   000013                     ___lwdiv@counter:
   805                           	callstack 0
   806   000013                     ___awdiv@quotient:
   807                           	callstack 0
   808   000013                     abs@a:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x12
   812   000013                     	ds	1
   813   000014                     ADC_Select_Channel@ret:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x13
   817   000014                     	ds	1
   818   000015                     ??_abs:
   819   000015                     gpio_pin_direction_initialize@ret:
   820                           	callstack 0
   821   000015                     ___xxtofl@sign:
   822                           	callstack 0
   823   000015                     ADC_StartConversion_INT@ADC_obj:
   824                           	callstack 0
   825   000015                     memset@k:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x14
   829   000015                     	ds	1
   830   000016                     gpio_pin_write_logic@ret:
   831                           	callstack 0
   832   000016                     ___xxtofl@exp:
   833                           	callstack 0
   834   000016                     fputs@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x15
   838   000016                     	ds	1
   839   000017                     ADC_StartConversion_INT@channel:
   840                           	callstack 0
   841   000017                     lcd_8bit_send_enable@lcd_obj:
   842                           	callstack 0
   843   000017                     dc_motor_move_right@dc_motor:
   844                           	callstack 0
   845   000017                     gpio_pin_initialize@pin:
   846                           	callstack 0
   847   000017                     memset@s:
   848                           	callstack 0
   849   000017                     ___xxtofl@arg:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x16
   853   000017                     	ds	1
   854   000018                     ADC_StartConversion_INT@l_conversion_status:
   855                           	callstack 0
   856   000018                     fputs@fp:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x17
   860   000018                     	ds	1
   861   000019                     ??_gpio_pin_initialize:
   862   000019                     lcd_8bit_send_enable@ret:
   863                           	callstack 0
   864   000019                     dc_motor_move_right@ret:
   865                           	callstack 0
   866   000019                     ADC_StartConversion_INT@ret:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x18
   870   000019                     	ds	1
   871   00001A                     gpio_pin_initialize@ret:
   872                           	callstack 0
   873   00001A                     fputs@c:
   874                           	callstack 0
   875   00001A                     lcd_8bit_send_command@lcd_obj:
   876                           	callstack 0
   877   00001A                     lcd_8bit_send_char@lcd_obj:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x19
   881   00001A                     	ds	1
   882   00001B                     ?___flmul:
   883                           	callstack 0
   884   00001B                     dc_motor_initialize@dc_motor:
   885                           	callstack 0
   886   00001B                     fputs@i:
   887                           	callstack 0
   888   00001B                     ___flmul@b:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x1A
   892   00001B                     	ds	1
   893   00001C                     lcd_8bit_send_command@command:
   894                           	callstack 0
   895   00001C                     lcd_8bit_send_char@chr:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x1B
   899   00001C                     	ds	1
   900   00001D                     ??_lcd_8bit_send_command:
   901   00001D                     ??_lcd_8bit_send_char:
   902   00001D                     dc_motor_initialize@ret:
   903                           	callstack 0
   904   00001D                     pad@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x1C
   908   00001D                     	ds	2
   909   00001F                     lcd_8bit_send_command@ret:
   910                           	callstack 0
   911   00001F                     lcd_8bit_send_char@ret:
   912                           	callstack 0
   913   00001F                     pad@buf:
   914                           	callstack 0
   915   00001F                     ___flmul@a:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x1E
   919   00001F                     	ds	1
   920   000020                     lcd_8bit_send_command@i:
   921                           	callstack 0
   922   000020                     lcd_8bit_send_char@i:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x1F
   926   000020                     	ds	1
   927   000021                     pad@p:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x20
   931   000021                     	ds	1
   932   000022                     lcd_8bit_initialize@lcd_obj:
   933                           	callstack 0
   934   000022                     lcd_8bit_send_string@lcd_obj:
   935                           	callstack 0
   936   000022                     lcd_8bit_set_cursor@lcd_obj:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x21
   940   000022                     	ds	1
   941   000023                     ??___flmul:
   942   000023                     ??_pad:
   943                           
   944                           ; 1 bytes @ 0x22
   945   000023                     	ds	1
   946   000024                     ??_lcd_8bit_initialize:
   947   000024                     lcd_8bit_set_cursor@row:
   948                           	callstack 0
   949   000024                     lcd_8bit_send_string@string:
   950                           	callstack 0
   951   000024                     pad@i:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x23
   955   000024                     	ds	1
   956   000025                     lcd_8bit_set_cursor@column:
   957                           	callstack 0
   958   000025                     lcd_8bit_initialize@i:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x24
   962   000025                     	ds	1
   963   000026                     ??_lcd_8bit_set_cursor:
   964   000026                     lcd_8bit_send_string@ret:
   965                           	callstack 0
   966   000026                     pad@w:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x25
   970   000026                     	ds	1
   971   000027                     lcd_8bit_initialize@ret:
   972                           	callstack 0
   973   000027                     ___flmul@sign:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x26
   977   000027                     	ds	1
   978   000028                     lcd_8bit_set_cursor@ret:
   979                           	callstack 0
   980   000028                     ___flmul@aexp:
   981                           	callstack 0
   982   000028                     dtoa@fp:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x27
   986   000028                     	ds	1
   987   000029                     lcd_8bit_send_string_pos@lcd_obj:
   988                           	callstack 0
   989   000029                     ___flmul@grs:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x28
   993   000029                     	ds	1
   994   00002A                     dtoa@d:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x29
   998   00002A                     	ds	1
   999   00002B                     lcd_8bit_send_string_pos@row:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x2A
  1003   00002B                     	ds	1
  1004   00002C                     lcd_8bit_send_string_pos@column:
  1005                           	callstack 0
  1006   00002C                     _dtoa$3742:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x2B
  1010   00002C                     	ds	1
  1011   00002D                     ___flmul@bexp:
  1012                           	callstack 0
  1013   00002D                     lcd_8bit_send_string_pos@string:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x2C
  1017   00002D                     	ds	1
  1018   00002E                     dtoa@p:
  1019                           	callstack 0
  1020   00002E                     ___flmul@prod:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x2D
  1024   00002E                     	ds	1
  1025   00002F                     lcd_8bit_send_string_pos@ret:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x2E
  1029   00002F                     	ds	1
  1030   000030                     dtoa@w:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x2F
  1034   000030                     	ds	2
  1035   000032                     dtoa@s:
  1036                           	callstack 0
  1037   000032                     ___flmul@temp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x31
  1041   000032                     	ds	1
  1042   000033                     dtoa@i:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x32
  1046   000033                     	ds	1
  1047   000034                     ?___fldiv:
  1048                           	callstack 0
  1049   000034                     ___fldiv@b:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x33
  1053   000034                     	ds	1
  1054   000035                     vfpfcnvrt@fp:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x34
  1058   000035                     	ds	2
  1059   000037                     vfpfcnvrt@fmt:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x36
  1063   000037                     	ds	1
  1064   000038                     ___fldiv@a:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x37
  1068   000038                     	ds	1
  1069   000039                     vfpfcnvrt@ap:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x38
  1073   000039                     	ds	2
  1074   00003B                     ??_vfpfcnvrt:
  1075                           
  1076                           ; 1 bytes @ 0x3A
  1077   00003B                     	ds	1
  1078   00003C                     ??___fldiv:
  1079                           
  1080                           ; 1 bytes @ 0x3B
  1081   00003C                     	ds	1
  1082   00003D                     vfpfcnvrt@convarg:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x3C
  1086   00003D                     	ds	3
  1087   000040                     ___fldiv@rem:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x3F
  1091   000040                     	ds	1
  1092   000041                     vfpfcnvrt@cp:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x40
  1096   000041                     	ds	2
  1097   000043                     ?_vfprintf:
  1098                           	callstack 0
  1099   000043                     vfprintf@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x42
  1103   000043                     	ds	1
  1104   000044                     ___fldiv@sign:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x43
  1108   000044                     	ds	1
  1109   000045                     ___fldiv@new_exp:
  1110                           	callstack 0
  1111   000045                     vfprintf@fmt:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x44
  1115   000045                     	ds	2
  1116   000047                     vfprintf@ap:
  1117                           	callstack 0
  1118   000047                     ___fldiv@grs:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x46
  1122   000047                     	ds	2
  1123   000049                     vfprintf@cfmt:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x48
  1127   000049                     	ds	2
  1128   00004B                     ?_sprintf:
  1129                           	callstack 0
  1130   00004B                     ___fldiv@bexp:
  1131                           	callstack 0
  1132   00004B                     sprintf@s:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x4A
  1136   00004B                     	ds	1
  1137   00004C                     ___fldiv@aexp:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x4B
  1141   00004C                     	ds	1
  1142   00004D                     ?___fladd:
  1143                           	callstack 0
  1144   00004D                     sprintf@fmt:
  1145                           	callstack 0
  1146   00004D                     ___fladd@b:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x4C
  1150   00004D                     	ds	4
  1151   000051                     ___fladd@a:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x50
  1155   000051                     	ds	2
  1156   000053                     sprintf@ap:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x52
  1160   000053                     	ds	2
  1161   000055                     ??___fladd:
  1162   000055                     sprintf@f:
  1163                           	callstack 0
  1164                           
  1165                           ; 12 bytes @ 0x54
  1166   000055                     	ds	4
  1167   000059                     ___fladd@signs:
  1168                           	callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x58
  1171   000059                     	ds	1
  1172   00005A                     ___fladd@aexp:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x59
  1176   00005A                     	ds	1
  1177   00005B                     ___fladd@bexp:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x5A
  1181   00005B                     	ds	1
  1182   00005C                     ___fladd@grs:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x5B
  1186   00005C                     	ds	1
  1187   00005D                     ?___fltol:
  1188                           	callstack 0
  1189   00005D                     ___fltol@f1:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x5C
  1193   00005D                     	ds	4
  1194   000061                     ??___fltol:
  1195   000061                     convert_short_to_string@value:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x60
  1199   000061                     	ds	2
  1200   000063                     convert_short_to_string@str:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x62
  1204   000063                     	ds	2
  1205   000065                     ___fltol@sign1:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x64
  1209   000065                     	ds	1
  1210   000066                     ___fltol@exp1:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x65
  1214   000066                     	ds	1
  1215   000067                     
  1216                           ; 1 bytes @ 0x66
  1217 ;;
  1218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1219 ;;
  1220 ;; *************** function _main *****************
  1221 ;; Defined at:
  1222 ;;		line 53 in file "application.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2  1327[None  ] int 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels required when called: 13
  1242 ;; This function calls:
  1243 ;;		_ADC_StartConversion_INT
  1244 ;;		_CCP_PWM_Start
  1245 ;;		_CCP_PWM_Stop
  1246 ;;		_CCP_PWM_set_DutyCycle
  1247 ;;		___flmul
  1248 ;;		___fltol
  1249 ;;		___lwdiv
  1250 ;;		___xxtofl
  1251 ;;		_application_initialize
  1252 ;;		_convert_short_to_string
  1253 ;;		_dc_motor_move_right
  1254 ;;		_lcd_8bit_send_string_pos
  1255 ;; This function is called by:
  1256 ;;		Startup code after reset
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text0
  1261   0025C8                     __ptext0:
  1262                           	callstack 0
  1263   0025C8                     _main:
  1264                           	callstack 18
  1265   0025C8                     
  1266                           ;application.c: 55:     application_initialize();
  1267   0025C8  EC38  F022         	call	_application_initialize	;wreg free
  1268   0025CC                     
  1269                           ;application.c: 56:     ret = lcd_8bit_send_string_pos(&lcd_1,1,1,"Temperature : ");
  1270   0025CC  0EE0               	movlw	low _lcd_1
  1271   0025CE  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1272   0025D0  0E00               	movlw	high _lcd_1
  1273   0025D2  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1274   0025D4  0E01               	movlw	1
  1275   0025D6  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1276   0025D8  0E01               	movlw	1
  1277   0025DA  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1278   0025DC  0E0D               	movlw	low STR_4
  1279   0025DE  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1280   0025E0  0E10               	movlw	high STR_4
  1281   0025E2  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1282   0025E4  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1283   0025E8  0100               	movlb	0	; () banked
  1284   0025EA  6FFF               	movwf	_ret& (0+255),b
  1285   0025EC                     
  1286                           ; BSR set to: 0
  1287                           ;application.c: 57:     ret = lcd_8bit_send_string_pos(&lcd_1,3,1,"Fan Level :- ");
  1288   0025EC  0EE0               	movlw	low _lcd_1
  1289   0025EE  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1290   0025F0  0E00               	movlw	high _lcd_1
  1291   0025F2  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1292   0025F4  0E03               	movlw	3
  1293   0025F6  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1294   0025F8  0E01               	movlw	1
  1295   0025FA  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1296   0025FC  0E1C               	movlw	low STR_5
  1297   0025FE  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1298   002600  0E10               	movlw	high STR_5
  1299   002602  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1300   002604  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1301   002608  0100               	movlb	0	; () banked
  1302   00260A  6FFF               	movwf	_ret& (0+255),b
  1303                           
  1304                           ;application.c: 58:     ret = dc_motor_move_right(&motor_1);
  1305   00260C  0EF1               	movlw	low _motor_1
  1306   00260E  6E17               	movwf	dc_motor_move_right@dc_motor^0,c
  1307   002610  0E00               	movlw	high _motor_1
  1308   002612  6E18               	movwf	(dc_motor_move_right@dc_motor+1)^0,c
  1309   002614  EC5A  F021         	call	_dc_motor_move_right	;wreg free
  1310   002618  0100               	movlb	0	; () banked
  1311   00261A  6FFF               	movwf	_ret& (0+255),b
  1312   00261C                     l10049:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;application.c: 60:     {;application.c: 61:         if(Flag == 0)
  1316   00261C  506D               	movf	_Flag^0,w,c	;volatile
  1317   00261E  A4D8               	btfss	status,2,c
  1318   002620  EF14  F013         	goto	u10781
  1319   002624  EF16  F013         	goto	u10780
  1320   002628                     u10781:
  1321   002628  EF22  F013         	goto	l10055
  1322   00262C                     u10780:
  1323   00262C                     
  1324                           ; BSR set to: 0
  1325                           ;application.c: 62:         {;application.c: 63:             ret=ADC_StartConversion_INT
      +                          (&Lm35,ADC_CHANNEL0);
  1326   00262C  0EEA               	movlw	low _Lm35
  1327   00262E  6E15               	movwf	ADC_StartConversion_INT@ADC_obj^0,c
  1328   002630  0E00               	movlw	high _Lm35
  1329   002632  6E16               	movwf	(ADC_StartConversion_INT@ADC_obj+1)^0,c
  1330   002634  0E00               	movlw	0
  1331   002636  6E17               	movwf	ADC_StartConversion_INT@channel^0,c
  1332   002638  EC9F  F021         	call	_ADC_StartConversion_INT	;wreg free
  1333   00263C  0100               	movlb	0	; () banked
  1334   00263E  6FFF               	movwf	_ret& (0+255),b
  1335   002640                     
  1336                           ; BSR set to: 0
  1337                           ;application.c: 64:             Flag = 1;
  1338   002640  0E01               	movlw	1
  1339   002642  6E6D               	movwf	_Flag^0,c	;volatile
  1340   002644                     l10055:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;application.c: 66:         temp = res1 * 4.8828125f;
  1344   002644  0E00               	movlw	0
  1345   002646  6E1F               	movwf	___flmul@a^0,c
  1346   002648  0E40               	movlw	64
  1347   00264A  6E20               	movwf	(___flmul@a+1)^0,c
  1348   00264C  0E9C               	movlw	156
  1349   00264E  6E21               	movwf	(___flmul@a+2)^0,c
  1350   002650  0E40               	movlw	64
  1351   002652  6E22               	movwf	(___flmul@a+3)^0,c
  1352   002654  C0BA  F00D         	movff	_res1,___xxtofl@val
  1353   002658  C0BB  F00E         	movff	_res1+1,___xxtofl@val+1
  1354   00265C  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1355   00265E  6A10               	clrf	(___xxtofl@val+3)^0,c
  1356   002660  0E00               	movlw	0
  1357   002662  EC98  F015         	call	___xxtofl
  1358   002666  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1359   00266A  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1360   00266E  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1361   002672  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1362   002676  EC3F  F00D         	call	___flmul	;wreg free
  1363   00267A  C01B  F05D         	movff	?___flmul,___fltol@f1
  1364   00267E  C01C  F05E         	movff	?___flmul+1,___fltol@f1+1
  1365   002682  C01D  F05F         	movff	?___flmul+2,___fltol@f1+2
  1366   002686  C01E  F060         	movff	?___flmul+3,___fltol@f1+3
  1367   00268A  ECE2  F01A         	call	___fltol	;wreg free
  1368   00268E  C05D  F06B         	movff	?___fltol,_temp
  1369   002692  C05E  F06C         	movff	?___fltol+1,_temp+1
  1370   002696                     
  1371                           ;application.c: 67:         temp /= 10;
  1372   002696  C06B  F00D         	movff	_temp,___lwdiv@dividend
  1373   00269A  C06C  F00E         	movff	_temp+1,___lwdiv@dividend+1
  1374   00269E  0E00               	movlw	0
  1375   0026A0  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  1376   0026A2  0E0A               	movlw	10
  1377   0026A4  6E0F               	movwf	___lwdiv@divisor^0,c
  1378   0026A6  EC79  F01F         	call	___lwdiv	;wreg free
  1379   0026AA  C00D  F06B         	movff	?___lwdiv,_temp
  1380   0026AE  C00E  F06C         	movff	?___lwdiv+1,_temp+1
  1381   0026B2                     
  1382                           ;application.c: 69:         ret = convert_short_to_string(temp,Temp_value);
  1383   0026B2  C06B  F061         	movff	_temp,convert_short_to_string@value
  1384   0026B6  C06C  F062         	movff	_temp+1,convert_short_to_string@value+1
  1385   0026BA  0E31               	movlw	low _Temp_value
  1386   0026BC  6E63               	movwf	convert_short_to_string@str^0,c
  1387   0026BE  0E01               	movlw	high _Temp_value
  1388   0026C0  6E64               	movwf	(convert_short_to_string@str+1)^0,c
  1389   0026C2  ECFB  F01C         	call	_convert_short_to_string	;wreg free
  1390   0026C6  0100               	movlb	0	; () banked
  1391   0026C8  6FFF               	movwf	_ret& (0+255),b
  1392   0026CA                     
  1393                           ; BSR set to: 0
  1394                           ;application.c: 70:         ret = lcd_8bit_send_string_pos(&lcd_1,1,15,Temp_value);
  1395   0026CA  0EE0               	movlw	low _lcd_1
  1396   0026CC  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1397   0026CE  0E00               	movlw	high _lcd_1
  1398   0026D0  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1399   0026D2  0E01               	movlw	1
  1400   0026D4  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1401   0026D6  0E0F               	movlw	15
  1402   0026D8  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1403   0026DA  0E31               	movlw	low _Temp_value
  1404   0026DC  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1405   0026DE  0E01               	movlw	high _Temp_value
  1406   0026E0  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1407   0026E2  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1408   0026E6  0100               	movlb	0	; () banked
  1409   0026E8  6FFF               	movwf	_ret& (0+255),b
  1410   0026EA                     
  1411                           ; BSR set to: 0
  1412                           ;application.c: 72:         if(temp>=90)
  1413   0026EA  506C               	movf	(_temp+1)^0,w,c
  1414   0026EC  E109               	bnz	u10790
  1415   0026EE  0E5A               	movlw	90
  1416   0026F0  5C6B               	subwf	_temp^0,w,c
  1417   0026F2  A0D8               	btfss	status,0,c
  1418   0026F4  EF7E  F013         	goto	u10791
  1419   0026F8  EF80  F013         	goto	u10790
  1420   0026FC                     u10791:
  1421   0026FC  EFA4  F013         	goto	l10071
  1422   002700                     u10790:
  1423   002700                     
  1424                           ; BSR set to: 0
  1425                           ;application.c: 73:         {;application.c: 74:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,100);
  1426   002700  0ED0               	movlw	low _ccp_obj
  1427   002702  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1428   002704  0E00               	movlw	high _ccp_obj
  1429   002706  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1430   002708  0E64               	movlw	100
  1431   00270A  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1432   00270C  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1433   002710  0100               	movlb	0	; () banked
  1434   002712  6FFF               	movwf	_ret& (0+255),b
  1435   002714                     
  1436                           ; BSR set to: 0
  1437                           ;application.c: 75:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 5");
  1438   002714  0EE0               	movlw	low _lcd_1
  1439   002716  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1440   002718  0E00               	movlw	high _lcd_1
  1441   00271A  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1442   00271C  0E04               	movlw	4
  1443   00271E  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1444   002720  0E01               	movlw	1
  1445   002722  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1446   002724  0E4A               	movlw	low STR_6
  1447   002726  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1448   002728  0E10               	movlw	high STR_6
  1449   00272A  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1450   00272C  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1451   002730  0100               	movlb	0	; () banked
  1452   002732  6FFF               	movwf	_ret& (0+255),b
  1453   002734                     l10069:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;application.c: 76:             ret = CCP_PWM_Start(&ccp_obj);
  1457   002734  0ED0               	movlw	low _ccp_obj
  1458   002736  6E0D               	movwf	CCP_PWM_Start@ccp_obj^0,c
  1459   002738  0E00               	movlw	high _ccp_obj
  1460   00273A  6E0E               	movwf	(CCP_PWM_Start@ccp_obj+1)^0,c
  1461   00273C  ECEA  F01F         	call	_CCP_PWM_Start	;wreg free
  1462   002740  0100               	movlb	0	; () banked
  1463   002742  6FFF               	movwf	_ret& (0+255),b
  1464                           
  1465                           ;application.c: 77:         }
  1466   002744  EF0E  F013         	goto	l10049
  1467   002748                     l10071:
  1468                           
  1469                           ; BSR set to: 0
  1470   002748  506C               	movf	(_temp+1)^0,w,c
  1471   00274A  E109               	bnz	u10800
  1472   00274C  0E46               	movlw	70
  1473   00274E  5C6B               	subwf	_temp^0,w,c
  1474   002750  A0D8               	btfss	status,0,c
  1475   002752  EFAD  F013         	goto	u10801
  1476   002756  EFAF  F013         	goto	u10800
  1477   00275A                     u10801:
  1478   00275A  EFCB  F013         	goto	l10079
  1479   00275E                     u10800:
  1480   00275E                     
  1481                           ; BSR set to: 0
  1482                           ;application.c: 79:         {;application.c: 80:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,80);
  1483   00275E  0ED0               	movlw	low _ccp_obj
  1484   002760  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1485   002762  0E00               	movlw	high _ccp_obj
  1486   002764  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1487   002766  0E50               	movlw	80
  1488   002768  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1489   00276A  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1490   00276E  0100               	movlb	0	; () banked
  1491   002770  6FFF               	movwf	_ret& (0+255),b
  1492   002772                     
  1493                           ; BSR set to: 0
  1494                           ;application.c: 81:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 4");
  1495   002772  0EE0               	movlw	low _lcd_1
  1496   002774  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1497   002776  0E00               	movlw	high _lcd_1
  1498   002778  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1499   00277A  0E04               	movlw	4
  1500   00277C  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1501   00277E  0E01               	movlw	1
  1502   002780  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1503   002782  0E42               	movlw	low STR_7
  1504   002784  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1505   002786  0E10               	movlw	high STR_7
  1506   002788  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1507   00278A  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1508   00278E  0100               	movlb	0	; () banked
  1509   002790  6FFF               	movwf	_ret& (0+255),b
  1510   002792  EF9A  F013         	goto	l10069
  1511   002796                     l10079:
  1512                           
  1513                           ; BSR set to: 0
  1514   002796  506C               	movf	(_temp+1)^0,w,c
  1515   002798  E109               	bnz	u10810
  1516   00279A  0E32               	movlw	50
  1517   00279C  5C6B               	subwf	_temp^0,w,c
  1518   00279E  A0D8               	btfss	status,0,c
  1519   0027A0  EFD4  F013         	goto	u10811
  1520   0027A4  EFD6  F013         	goto	u10810
  1521   0027A8                     u10811:
  1522   0027A8  EFF2  F013         	goto	l10087
  1523   0027AC                     u10810:
  1524   0027AC                     
  1525                           ; BSR set to: 0
  1526                           ;application.c: 85:         {;application.c: 86:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,60);
  1527   0027AC  0ED0               	movlw	low _ccp_obj
  1528   0027AE  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1529   0027B0  0E00               	movlw	high _ccp_obj
  1530   0027B2  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1531   0027B4  0E3C               	movlw	60
  1532   0027B6  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1533   0027B8  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1534   0027BC  0100               	movlb	0	; () banked
  1535   0027BE  6FFF               	movwf	_ret& (0+255),b
  1536   0027C0                     
  1537                           ; BSR set to: 0
  1538                           ;application.c: 87:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 3");
  1539   0027C0  0EE0               	movlw	low _lcd_1
  1540   0027C2  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1541   0027C4  0E00               	movlw	high _lcd_1
  1542   0027C6  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1543   0027C8  0E04               	movlw	4
  1544   0027CA  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1545   0027CC  0E01               	movlw	1
  1546   0027CE  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1547   0027D0  0E3A               	movlw	low STR_8
  1548   0027D2  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1549   0027D4  0E10               	movlw	high STR_8
  1550   0027D6  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1551   0027D8  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1552   0027DC  0100               	movlb	0	; () banked
  1553   0027DE  6FFF               	movwf	_ret& (0+255),b
  1554   0027E0  EF9A  F013         	goto	l10069
  1555   0027E4                     l10087:
  1556                           
  1557                           ; BSR set to: 0
  1558   0027E4  506C               	movf	(_temp+1)^0,w,c
  1559   0027E6  E109               	bnz	u10820
  1560   0027E8  0E1E               	movlw	30
  1561   0027EA  5C6B               	subwf	_temp^0,w,c
  1562   0027EC  A0D8               	btfss	status,0,c
  1563   0027EE  EFFB  F013         	goto	u10821
  1564   0027F2  EFFD  F013         	goto	u10820
  1565   0027F6                     u10821:
  1566   0027F6  EF19  F014         	goto	l10095
  1567   0027FA                     u10820:
  1568   0027FA                     
  1569                           ; BSR set to: 0
  1570                           ;application.c: 91:         {;application.c: 92:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,40);
  1571   0027FA  0ED0               	movlw	low _ccp_obj
  1572   0027FC  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1573   0027FE  0E00               	movlw	high _ccp_obj
  1574   002800  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1575   002802  0E28               	movlw	40
  1576   002804  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1577   002806  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1578   00280A  0100               	movlb	0	; () banked
  1579   00280C  6FFF               	movwf	_ret& (0+255),b
  1580   00280E                     
  1581                           ; BSR set to: 0
  1582                           ;application.c: 93:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 2");
  1583   00280E  0EE0               	movlw	low _lcd_1
  1584   002810  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1585   002812  0E00               	movlw	high _lcd_1
  1586   002814  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1587   002816  0E04               	movlw	4
  1588   002818  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1589   00281A  0E01               	movlw	1
  1590   00281C  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1591   00281E  0E32               	movlw	low STR_9
  1592   002820  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1593   002822  0E10               	movlw	high STR_9
  1594   002824  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1595   002826  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1596   00282A  0100               	movlb	0	; () banked
  1597   00282C  6FFF               	movwf	_ret& (0+255),b
  1598   00282E  EF9A  F013         	goto	l10069
  1599   002832                     l10095:
  1600                           
  1601                           ; BSR set to: 0
  1602   002832  506C               	movf	(_temp+1)^0,w,c
  1603   002834  E109               	bnz	u10830
  1604   002836  0E16               	movlw	22
  1605   002838  5C6B               	subwf	_temp^0,w,c
  1606   00283A  A0D8               	btfss	status,0,c
  1607   00283C  EF22  F014         	goto	u10831
  1608   002840  EF24  F014         	goto	u10830
  1609   002844                     u10831:
  1610   002844  EF40  F014         	goto	l10103
  1611   002848                     u10830:
  1612   002848                     
  1613                           ; BSR set to: 0
  1614                           ;application.c: 97:         {;application.c: 98:             ret = CCP_PWM_set_DutyCycle
      +                          (&ccp_obj,20);
  1615   002848  0ED0               	movlw	low _ccp_obj
  1616   00284A  6FF3               	movwf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),b
  1617   00284C  0E00               	movlw	high _ccp_obj
  1618   00284E  6FF4               	movwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),b
  1619   002850  0E14               	movlw	20
  1620   002852  6FF5               	movwf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),b
  1621   002854  EC5C  F014         	call	_CCP_PWM_set_DutyCycle	;wreg free
  1622   002858  0100               	movlb	0	; () banked
  1623   00285A  6FFF               	movwf	_ret& (0+255),b
  1624   00285C                     
  1625                           ; BSR set to: 0
  1626                           ;application.c: 99:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Level 1");
  1627   00285C  0EE0               	movlw	low _lcd_1
  1628   00285E  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1629   002860  0E00               	movlw	high _lcd_1
  1630   002862  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1631   002864  0E04               	movlw	4
  1632   002866  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1633   002868  0E01               	movlw	1
  1634   00286A  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1635   00286C  0E2A               	movlw	low STR_10
  1636   00286E  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1637   002870  0E10               	movlw	high STR_10
  1638   002872  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1639   002874  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1640   002878  0100               	movlb	0	; () banked
  1641   00287A  6FFF               	movwf	_ret& (0+255),b
  1642   00287C  EF9A  F013         	goto	l10069
  1643   002880                     l10103:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;application.c: 103:         {;application.c: 104:             ret = CCP_PWM_Stop(&ccp_o
      +                          bj);
  1647   002880  0ED0               	movlw	low _ccp_obj
  1648   002882  6E0D               	movwf	CCP_PWM_Stop@ccp_obj^0,c
  1649   002884  0E00               	movlw	high _ccp_obj
  1650   002886  6E0E               	movwf	(CCP_PWM_Stop@ccp_obj+1)^0,c
  1651   002888  EC57  F020         	call	_CCP_PWM_Stop	;wreg free
  1652   00288C  0100               	movlb	0	; () banked
  1653   00288E  6FFF               	movwf	_ret& (0+255),b
  1654   002890                     
  1655                           ; BSR set to: 0
  1656                           ;application.c: 105:             ret = lcd_8bit_send_string_pos(&lcd_1,4,1,"Fan OFF");
  1657   002890  0EE0               	movlw	low _lcd_1
  1658   002892  6E29               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1659   002894  0E00               	movlw	high _lcd_1
  1660   002896  6E2A               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1661   002898  0E04               	movlw	4
  1662   00289A  6E2B               	movwf	lcd_8bit_send_string_pos@row^0,c
  1663   00289C  0E01               	movlw	1
  1664   00289E  6E2C               	movwf	lcd_8bit_send_string_pos@column^0,c
  1665   0028A0  0E52               	movlw	low STR_11
  1666   0028A2  6E2D               	movwf	lcd_8bit_send_string_pos@string^0,c
  1667   0028A4  0E10               	movlw	high STR_11
  1668   0028A6  6E2E               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1669   0028A8  ECB8  F020         	call	_lcd_8bit_send_string_pos	;wreg free
  1670   0028AC  0100               	movlb	0	; () banked
  1671   0028AE  6FFF               	movwf	_ret& (0+255),b
  1672   0028B0  EF0E  F013         	goto	l10049
  1673   0028B4  EF07  F000         	goto	start
  1674   0028B8                     __end_of_main:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _lcd_8bit_send_string_pos *****************
  1678 ;; Defined at:
  1679 ;;		line 374 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  lcd_obj         2   40[COMRAM] PTR const struct .
  1682 ;;		 -> lcd_1(10), 
  1683 ;;  row             1   42[COMRAM] unsigned char 
  1684 ;;  column          1   43[COMRAM] unsigned char 
  1685 ;;  string          2   44[COMRAM] PTR unsigned char 
  1686 ;;		 -> STR_11(8), STR_10(8), STR_9(8), STR_8(8), 
  1687 ;;		 -> STR_7(8), STR_6(8), Temp_value(11), STR_5(14), 
  1688 ;;		 -> STR_4(15), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  ret             1   46[COMRAM] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      unsigned char 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1700 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;Total ram usage:        7 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 8
  1707 ;; This function calls:
  1708 ;;		_lcd_8bit_send_string
  1709 ;;		_lcd_8bit_set_cursor
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text1
  1716   004170                     __ptext1:
  1717                           	callstack 0
  1718   004170                     _lcd_8bit_send_string_pos:
  1719                           	callstack 22
  1720   004170                     
  1721                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 377:     if((lcd_obj == ((void*)0))||(string==((void*
      +                          )0)))
  1722   004170  5029               	movf	lcd_8bit_send_string_pos@lcd_obj^0,w,c
  1723   004172  102A               	iorwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,w,c
  1724   004174  B4D8               	btfsc	status,2,c
  1725   004176  EFBF  F020         	goto	u10211
  1726   00417A  EFC1  F020         	goto	u10210
  1727   00417E                     u10211:
  1728   00417E  EFCA  F020         	goto	l9499
  1729   004182                     u10210:
  1730   004182  502D               	movf	lcd_8bit_send_string_pos@string^0,w,c
  1731   004184  102E               	iorwf	(lcd_8bit_send_string_pos@string+1)^0,w,c
  1732   004186  A4D8               	btfss	status,2,c
  1733   004188  EFC8  F020         	goto	u10221
  1734   00418C  EFCA  F020         	goto	u10220
  1735   004190                     u10221:
  1736   004190  EFCE  F020         	goto	l9501
  1737   004194                     u10220:
  1738   004194                     l9499:
  1739                           
  1740                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 378:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 379:    
      +                               ret = (Std_ReturnType)0x00;
  1741   004194  0E00               	movlw	0
  1742   004196  6E2F               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1743                           
  1744                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 380:     }
  1745   004198  EFE3  F020         	goto	l9505
  1746   00419C                     l9501:
  1747   00419C  C029  F022         	movff	lcd_8bit_send_string_pos@lcd_obj,lcd_8bit_set_cursor@lcd_obj
  1748   0041A0  C02A  F023         	movff	lcd_8bit_send_string_pos@lcd_obj+1,lcd_8bit_set_cursor@lcd_obj+1
  1749   0041A4  C02B  F024         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1750   0041A8  C02C  F025         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
  1751   0041AC  EC9A  F01C         	call	_lcd_8bit_set_cursor	;wreg free
  1752   0041B0                     
  1753                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 384:         ret = lcd_8bit_send_string(lcd_obj,strin
      +                          g);
  1754   0041B0  C029  F022         	movff	lcd_8bit_send_string_pos@lcd_obj,lcd_8bit_send_string@lcd_obj
  1755   0041B4  C02A  F023         	movff	lcd_8bit_send_string_pos@lcd_obj+1,lcd_8bit_send_string@lcd_obj+1
  1756   0041B8  C02D  F024         	movff	lcd_8bit_send_string_pos@string,lcd_8bit_send_string@string
  1757   0041BC  C02E  F025         	movff	lcd_8bit_send_string_pos@string+1,lcd_8bit_send_string@string+1
  1758   0041C0  EC58  F01E         	call	_lcd_8bit_send_string	;wreg free
  1759   0041C4  6E2F               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1760   0041C6                     l9505:
  1761                           
  1762                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 387:     return ret;
  1763   0041C6  502F               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1764   0041C8  0012               	return		;funcret
  1765   0041CA                     __end_of_lcd_8bit_send_string_pos:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _lcd_8bit_set_cursor *****************
  1769 ;; Defined at:
  1770 ;;		line 551 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  lcd_obj         2   33[COMRAM] PTR const struct .
  1773 ;;		 -> lcd_1(10), 
  1774 ;;  row             1   35[COMRAM] unsigned char 
  1775 ;;  column          1   36[COMRAM] unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  ret             1   39[COMRAM] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      unsigned char 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;Total ram usage:        7 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 7
  1794 ;; This function calls:
  1795 ;;		_lcd_8bit_send_command
  1796 ;; This function is called by:
  1797 ;;		_lcd_8bit_send_string_pos
  1798 ;;		_lcd_8bit_send_char_pos
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text2
  1803   003934                     __ptext2:
  1804                           	callstack 0
  1805   003934                     _lcd_8bit_set_cursor:
  1806                           	callstack 22
  1807   003934                     
  1808                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 551: static Std_ReturnType lcd_8bit_set_cursor(const 
      +                          lcd_8bit_t *lcd_obj,uint8 row,uint8 column);ECU_layer/Char_lCD/ecu_chr_lcd.c: 552: {;ECU
      +                          _layer/Char_lCD/ecu_chr_lcd.c: 553:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1809   003934  0E01               	movlw	1
  1810   003936  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1811   003938                     
  1812                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 554:     if(lcd_obj == ((void*)0))
  1813   003938  5022               	movf	lcd_8bit_set_cursor@lcd_obj^0,w,c
  1814   00393A  1023               	iorwf	(lcd_8bit_set_cursor@lcd_obj+1)^0,w,c
  1815   00393C  A4D8               	btfss	status,2,c
  1816   00393E  EFA3  F01C         	goto	u9911
  1817   003942  EFA5  F01C         	goto	u9910
  1818   003946                     u9911:
  1819   003946  EFA9  F01C         	goto	l9205
  1820   00394A                     u9910:
  1821   00394A                     
  1822                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 555:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 556:    
      +                               ret = (Std_ReturnType)0x00;
  1823   00394A  0E00               	movlw	0
  1824   00394C  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1825                           
  1826                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 557:     }
  1827   00394E  EFF9  F01C         	goto	l9217
  1828   003952                     l9205:
  1829                           
  1830                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 559:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 560:    
      +                               column--;
  1831   003952  0625               	decf	lcd_8bit_set_cursor@column^0,f,c
  1832                           
  1833                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 561:         switch (row)
  1834   003954  EFDC  F01C         	goto	l9215
  1835   003958                     l9207:
  1836                           
  1837                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 564:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0x80 + column));
  1838   003958  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1839   00395C  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1840   003960  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1841   003962  0F80               	addlw	128
  1842   003964  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1843   003966  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1844   00396A  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1845                           
  1846                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 565:             break;
  1847   00396C  EFF9  F01C         	goto	l9217
  1848   003970                     l9209:
  1849                           
  1850                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 567:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0xC0 + column));
  1851   003970  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1852   003974  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1853   003978  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1854   00397A  0FC0               	addlw	192
  1855   00397C  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1856   00397E  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1857   003982  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1858                           
  1859                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 568:             break;
  1860   003984  EFF9  F01C         	goto	l9217
  1861   003988                     l9211:
  1862                           
  1863                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 570:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0x94 + column));
  1864   003988  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1865   00398C  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1866   003990  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1867   003992  0F94               	addlw	148
  1868   003994  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1869   003996  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1870   00399A  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1871                           
  1872                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 571:             break;
  1873   00399C  EFF9  F01C         	goto	l9217
  1874   0039A0                     l9213:
  1875                           
  1876                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 573:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0xD4 + column));
  1877   0039A0  C022  F01A         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1878   0039A4  C023  F01B         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1879   0039A8  5025               	movf	lcd_8bit_set_cursor@column^0,w,c
  1880   0039AA  0FD4               	addlw	212
  1881   0039AC  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  1882   0039AE  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  1883   0039B2  6E28               	movwf	lcd_8bit_set_cursor@ret^0,c
  1884                           
  1885                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 574:             break;
  1886   0039B4  EFF9  F01C         	goto	l9217
  1887   0039B8                     l9215:
  1888   0039B8  5024               	movf	lcd_8bit_set_cursor@row^0,w,c
  1889   0039BA  6E26               	movwf	??_lcd_8bit_set_cursor^0,c
  1890   0039BC  6A27               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1891                           
  1892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1893                           ; Switch size 1, requested type "simple"
  1894                           ; Number of cases is 1, Range of values is 0 to 0
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte            4     3 (average)
  1898                           ;	Chosen strategy is simple_byte
  1899   0039BE  5027               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1900   0039C0  0A00               	xorlw	0	; case 0
  1901   0039C2  B4D8               	btfsc	status,2,c
  1902   0039C4  EFE6  F01C         	goto	l10327
  1903   0039C8  EFF9  F01C         	goto	l9217
  1904   0039CC                     l10327:
  1905                           
  1906                           ; Switch size 1, requested type "simple"
  1907                           ; Number of cases is 4, Range of values is 1 to 4
  1908                           ; switch strategies available:
  1909                           ; Name         Instructions Cycles
  1910                           ; simple_byte           13     7 (average)
  1911                           ;	Chosen strategy is simple_byte
  1912   0039CC  5026               	movf	??_lcd_8bit_set_cursor^0,w,c
  1913   0039CE  0A01               	xorlw	1	; case 1
  1914   0039D0  B4D8               	btfsc	status,2,c
  1915   0039D2  EFAC  F01C         	goto	l9207
  1916   0039D6  0A03               	xorlw	3	; case 2
  1917   0039D8  B4D8               	btfsc	status,2,c
  1918   0039DA  EFB8  F01C         	goto	l9209
  1919   0039DE  0A01               	xorlw	1	; case 3
  1920   0039E0  B4D8               	btfsc	status,2,c
  1921   0039E2  EFC4  F01C         	goto	l9211
  1922   0039E6  0A07               	xorlw	7	; case 4
  1923   0039E8  B4D8               	btfsc	status,2,c
  1924   0039EA  EFD0  F01C         	goto	l9213
  1925   0039EE  EFF9  F01C         	goto	l9217
  1926   0039F2                     l9217:
  1927                           
  1928                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 580:     return ret;
  1929   0039F2  5028               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1930   0039F4  0012               	return		;funcret
  1931   0039F6                     __end_of_lcd_8bit_set_cursor:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _lcd_8bit_send_string *****************
  1935 ;; Defined at:
  1936 ;;		line 346 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  lcd_obj         2   33[COMRAM] PTR const struct .
  1939 ;;		 -> lcd_1(10), 
  1940 ;;  string          2   35[COMRAM] PTR unsigned char 
  1941 ;;		 -> STR_11(8), STR_10(8), STR_9(8), STR_8(8), 
  1942 ;;		 -> STR_7(8), STR_6(8), Temp_value(11), STR_5(14), 
  1943 ;;		 -> STR_4(15), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  ret             1   37[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      unsigned char 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;Total ram usage:        5 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 7
  1962 ;; This function calls:
  1963 ;;		_lcd_8bit_send_char
  1964 ;; This function is called by:
  1965 ;;		_lcd_8bit_send_string_pos
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text3
  1970   003CB0                     __ptext3:
  1971                           	callstack 0
  1972   003CB0                     _lcd_8bit_send_string:
  1973                           	callstack 22
  1974   003CB0                     
  1975                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 346: Std_ReturnType lcd_8bit_send_string(const lcd_8b
      +                          it_t *lcd_obj,uint8 *string);ECU_layer/Char_lCD/ecu_chr_lcd.c: 347: {;ECU_layer/Char_lCD
      +                          /ecu_chr_lcd.c: 348:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1976   003CB0  0E01               	movlw	1
  1977   003CB2  6E26               	movwf	lcd_8bit_send_string@ret^0,c
  1978   003CB4                     
  1979                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 349:     if((lcd_obj == ((void*)0))||(string==((void*
      +                          )0)))
  1980   003CB4  5022               	movf	lcd_8bit_send_string@lcd_obj^0,w,c
  1981   003CB6  1023               	iorwf	(lcd_8bit_send_string@lcd_obj+1)^0,w,c
  1982   003CB8  B4D8               	btfsc	status,2,c
  1983   003CBA  EF61  F01E         	goto	u9921
  1984   003CBE  EF63  F01E         	goto	u9920
  1985   003CC2                     u9921:
  1986   003CC2  EF6C  F01E         	goto	l9231
  1987   003CC6                     u9920:
  1988   003CC6  5024               	movf	lcd_8bit_send_string@string^0,w,c
  1989   003CC8  1025               	iorwf	(lcd_8bit_send_string@string+1)^0,w,c
  1990   003CCA  A4D8               	btfss	status,2,c
  1991   003CCC  EF6A  F01E         	goto	u9931
  1992   003CD0  EF6C  F01E         	goto	u9930
  1993   003CD4                     u9931:
  1994   003CD4  EF8B  F01E         	goto	l9237
  1995   003CD8                     u9930:
  1996   003CD8                     l9231:
  1997                           
  1998                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 350:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 351:    
      +                               ret = (Std_ReturnType)0x00;
  1999   003CD8  0E00               	movlw	0
  2000   003CDA  6E26               	movwf	lcd_8bit_send_string@ret^0,c
  2001                           
  2002                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 352:     }
  2003   003CDC  EFA4  F01E         	goto	l9239
  2004   003CE0                     l9233:
  2005                           
  2006                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 356:         {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 357:
      +                                       ret = lcd_8bit_send_char(lcd_obj,*string++);
  2007   003CE0  C022  F01A         	movff	lcd_8bit_send_string@lcd_obj,lcd_8bit_send_char@lcd_obj
  2008   003CE4  C023  F01B         	movff	lcd_8bit_send_string@lcd_obj+1,lcd_8bit_send_char@lcd_obj+1
  2009   003CE8  C024  FFF6         	movff	lcd_8bit_send_string@string,tblptrl
  2010   003CEC  C025  FFF7         	movff	lcd_8bit_send_string@string+1,tblptrh
  2011   003CF0  0E00               	movlw	low (__smallconst shr (0+16))
  2012   003CF2  6EF8               	movwf	tblptru,c
  2013   003CF4  0E0F               	movlw	(high __ramtop+-1)
  2014   003CF6  64F7               	cpfsgt	tblptrh,c
  2015   003CF8  D003               	bra	u9947
  2016   003CFA  0008               	tblrd		*
  2017   003CFC  50F5               	movf	tablat,w,c
  2018   003CFE  D005               	bra	u9940
  2019   003D00                     u9947:
  2020   003D00  CFF6 FFE9          	movff	tblptrl,fsr0l
  2021   003D04  CFF7 FFEA          	movff	tblptrh,fsr0h
  2022   003D08  50EF               	movf	indf0,w,c
  2023   003D0A                     u9940:
  2024   003D0A  6E1C               	movwf	lcd_8bit_send_char@chr^0,c
  2025   003D0C  ECA6  F01E         	call	_lcd_8bit_send_char	;wreg free
  2026   003D10  6E26               	movwf	lcd_8bit_send_string@ret^0,c
  2027   003D12  4A24               	infsnz	lcd_8bit_send_string@string^0,f,c
  2028   003D14  2A25               	incf	(lcd_8bit_send_string@string+1)^0,f,c
  2029   003D16                     l9237:
  2030                           
  2031                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 355:         while(*string)
  2032   003D16  C024  FFF6         	movff	lcd_8bit_send_string@string,tblptrl
  2033   003D1A  C025  FFF7         	movff	lcd_8bit_send_string@string+1,tblptrh
  2034   003D1E  0E00               	movlw	low (__smallconst shr (0+16))
  2035   003D20  6EF8               	movwf	tblptru,c
  2036   003D22  0E0F               	movlw	(high __ramtop+-1)
  2037   003D24  64F7               	cpfsgt	tblptrh,c
  2038   003D26  D003               	bra	u9957
  2039   003D28  0008               	tblrd		*
  2040   003D2A  50F5               	movf	tablat,w,c
  2041   003D2C  D005               	bra	u9950
  2042   003D2E                     u9957:
  2043   003D2E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2044   003D32  CFF7 FFEA          	movff	tblptrh,fsr0h
  2045   003D36  50EF               	movf	indf0,w,c
  2046   003D38                     u9950:
  2047   003D38  0900               	iorlw	0
  2048   003D3A  A4D8               	btfss	status,2,c
  2049   003D3C  EFA2  F01E         	goto	u9961
  2050   003D40  EFA4  F01E         	goto	u9960
  2051   003D44                     u9961:
  2052   003D44  EF70  F01E         	goto	l9233
  2053   003D48                     u9960:
  2054   003D48                     l9239:
  2055                           
  2056                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 361:     return ret;
  2057   003D48  5026               	movf	lcd_8bit_send_string@ret^0,w,c
  2058   003D4A  0012               	return		;funcret
  2059   003D4C                     __end_of_lcd_8bit_send_string:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _lcd_8bit_send_char *****************
  2063 ;; Defined at:
  2064 ;;		line 294 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  lcd_obj         2   25[COMRAM] PTR const struct .
  2067 ;;		 -> lcd_1(10), 
  2068 ;;  chr             1   27[COMRAM] unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  i               2   31[COMRAM] int 
  2071 ;;  ret             1   30[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      unsigned char 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2081 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;Total ram usage:        8 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 6
  2088 ;; This function calls:
  2089 ;;		_gpio_pin_write_logic
  2090 ;;		_lcd_8bit_send_enable
  2091 ;; This function is called by:
  2092 ;;		_lcd_8bit_send_string
  2093 ;;		_lcd_8bit_send_char_pos
  2094 ;;		_lcd_8bit_send_custome_chr
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text4
  2099   003D4C                     __ptext4:
  2100                           	callstack 0
  2101   003D4C                     _lcd_8bit_send_char:
  2102                           	callstack 22
  2103   003D4C                     
  2104                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 297:     if(lcd_obj == ((void*)0))
  2105   003D4C  501A               	movf	lcd_8bit_send_char@lcd_obj^0,w,c
  2106   003D4E  101B               	iorwf	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  2107   003D50  A4D8               	btfss	status,2,c
  2108   003D52  EFAD  F01E         	goto	u8831
  2109   003D56  EFAF  F01E         	goto	u8830
  2110   003D5A                     u8831:
  2111   003D5A  EFB3  F01E         	goto	l8541
  2112   003D5E                     u8830:
  2113   003D5E                     
  2114                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 298:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 299:    
      +                               ret = (Std_ReturnType)0x00;
  2115   003D5E  0E00               	movlw	0
  2116   003D60  6E1F               	movwf	lcd_8bit_send_char@ret^0,c
  2117                           
  2118                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 300:     }
  2119   003D62  EFEF  F01E         	goto	l8557
  2120   003D66                     l8541:
  2121   003D66  0E09               	movlw	9
  2122   003D68  241A               	addwf	lcd_8bit_send_char@lcd_obj^0,w,c
  2123   003D6A  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  2124   003D6C  0E00               	movlw	0
  2125   003D6E  201B               	addwfc	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  2126   003D70  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2127   003D72  0E01               	movlw	1
  2128   003D74  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2129   003D76  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2130   003D7A                     
  2131                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 304:         for(int i=0;i<8;i++)
  2132   003D7A  0E00               	movlw	0
  2133   003D7C  6E21               	movwf	(lcd_8bit_send_char@i+1)^0,c
  2134   003D7E  0E00               	movlw	0
  2135   003D80  6E20               	movwf	lcd_8bit_send_char@i^0,c
  2136   003D82                     l8549:
  2137   003D82  5020               	movf	lcd_8bit_send_char@i^0,w,c
  2138   003D84  241A               	addwf	lcd_8bit_send_char@lcd_obj^0,w,c
  2139   003D86  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  2140   003D88  5021               	movf	(lcd_8bit_send_char@i+1)^0,w,c
  2141   003D8A  201B               	addwfc	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  2142   003D8C  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2143   003D8E  C020  F01D         	movff	lcd_8bit_send_char@i,??_lcd_8bit_send_char
  2144   003D92  C01C  F01E         	movff	lcd_8bit_send_char@chr,??_lcd_8bit_send_char+1
  2145   003D96  2A1D               	incf	??_lcd_8bit_send_char^0,f,c
  2146   003D98  EFD0  F01E         	goto	u8844
  2147   003D9C                     u8845:
  2148   003D9C  90D8               	bcf	status,0,c
  2149   003D9E  321E               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
  2150   003DA0                     u8844:
  2151   003DA0  2E1D               	decfsz	??_lcd_8bit_send_char^0,f,c
  2152   003DA2  EFCE  F01E         	goto	u8845
  2153   003DA6  501E               	movf	(??_lcd_8bit_send_char+1)^0,w,c
  2154   003DA8  0B01               	andlw	1
  2155   003DAA  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2156   003DAC  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2157   003DB0                     
  2158                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 307:         }
  2159   003DB0  4A20               	infsnz	lcd_8bit_send_char@i^0,f,c
  2160   003DB2  2A21               	incf	(lcd_8bit_send_char@i+1)^0,f,c
  2161   003DB4  BE21               	btfsc	(lcd_8bit_send_char@i+1)^0,7,c
  2162   003DB6  EFE6  F01E         	goto	u8851
  2163   003DBA  5021               	movf	(lcd_8bit_send_char@i+1)^0,w,c
  2164   003DBC  E109               	bnz	u8850
  2165   003DBE  0E08               	movlw	8
  2166   003DC0  5C20               	subwf	lcd_8bit_send_char@i^0,w,c
  2167   003DC2  A0D8               	btfss	status,0,c
  2168   003DC4  EFE6  F01E         	goto	u8851
  2169   003DC8  EFE8  F01E         	goto	u8850
  2170   003DCC                     u8851:
  2171   003DCC  EFC1  F01E         	goto	l8549
  2172   003DD0                     u8850:
  2173   003DD0                     
  2174                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 308:         ret = lcd_8bit_send_enable(lcd_obj);
  2175   003DD0  C01A  F017         	movff	lcd_8bit_send_char@lcd_obj,lcd_8bit_send_enable@lcd_obj
  2176   003DD4  C01B  F018         	movff	lcd_8bit_send_char@lcd_obj+1,lcd_8bit_send_enable@lcd_obj+1
  2177   003DD8  EC0D  F021         	call	_lcd_8bit_send_enable	;wreg free
  2178   003DDC  6E1F               	movwf	lcd_8bit_send_char@ret^0,c
  2179   003DDE                     l8557:
  2180                           
  2181                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 310:     return ret;
  2182   003DDE  501F               	movf	lcd_8bit_send_char@ret^0,w,c
  2183   003DE0  0012               	return		;funcret
  2184   003DE2                     __end_of_lcd_8bit_send_char:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _dc_motor_move_right *****************
  2188 ;; Defined at:
  2189 ;;		line 44 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  dc_motor        2   22[COMRAM] PTR const struct .
  2192 ;;		 -> motor_1(2), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  ret             1   24[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        3 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 5
  2211 ;; This function calls:
  2212 ;;		_gpio_pin_write_logic
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text5
  2219   0042B4                     __ptext5:
  2220                           	callstack 0
  2221   0042B4                     _dc_motor_move_right:
  2222                           	callstack 25
  2223   0042B4                     
  2224                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 47:     if(dc_motor == ((void*)0))
  2225   0042B4  5017               	movf	dc_motor_move_right@dc_motor^0,w,c
  2226   0042B6  1018               	iorwf	(dc_motor_move_right@dc_motor+1)^0,w,c
  2227   0042B8  A4D8               	btfss	status,2,c
  2228   0042BA  EF61  F021         	goto	u10261
  2229   0042BE  EF63  F021         	goto	u10260
  2230   0042C2                     u10261:
  2231   0042C2  EF67  F021         	goto	l9541
  2232   0042C6                     u10260:
  2233   0042C6                     
  2234                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 48:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 49:    
      +                               ret = (Std_ReturnType)0x00;
  2235   0042C6  0E00               	movlw	0
  2236   0042C8  6E19               	movwf	dc_motor_move_right@ret^0,c
  2237                           
  2238                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 50:     }
  2239   0042CA  EF7B  F021         	goto	l9543
  2240   0042CE                     l9541:
  2241                           
  2242                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 52:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 54:    
      +                               ret = gpio_pin_write_logic(&(dc_motor->dc_motor_pin[0]),GPIO_HIGH);
  2243   0042CE  C017  F00D         	movff	dc_motor_move_right@dc_motor,gpio_pin_write_logic@pin
  2244   0042D2  C018  F00E         	movff	dc_motor_move_right@dc_motor+1,gpio_pin_write_logic@pin+1
  2245   0042D6  0E01               	movlw	1
  2246   0042D8  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2247   0042DA  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2248   0042DE  6E19               	movwf	dc_motor_move_right@ret^0,c
  2249                           
  2250                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 55:         ret = gpio_pin_write_logic(&(dc_motor->d
      +                          c_motor_pin[1]),GPIO_LOW);
  2251   0042E0  0E01               	movlw	1
  2252   0042E2  2417               	addwf	dc_motor_move_right@dc_motor^0,w,c
  2253   0042E4  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  2254   0042E6  0E00               	movlw	0
  2255   0042E8  2018               	addwfc	(dc_motor_move_right@dc_motor+1)^0,w,c
  2256   0042EA  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2257   0042EC  0E00               	movlw	0
  2258   0042EE  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  2259   0042F0  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  2260   0042F4  6E19               	movwf	dc_motor_move_right@ret^0,c
  2261   0042F6                     l9543:
  2262                           
  2263                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 57:     return ret;
  2264   0042F6  5019               	movf	dc_motor_move_right@ret^0,w,c
  2265   0042F8  0012               	return		;funcret
  2266   0042FA                     __end_of_dc_motor_move_right:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _convert_short_to_string *****************
  2270 ;; Defined at:
  2271 ;;		line 447 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  value           2   96[COMRAM] unsigned short 
  2274 ;;  str             2   98[COMRAM] PTR unsigned char 
  2275 ;;		 -> Temp_value(11), 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  Temp_String     6    0[BANK0 ] unsigned char [6]
  2278 ;;  DataCounter     1    7[BANK0 ] unsigned char 
  2279 ;;  ret             1    6[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      unsigned char 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;Total ram usage:       12 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 12
  2296 ;; This function calls:
  2297 ;;		_memset
  2298 ;;		_sprintf
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text6
  2305   0039F6                     __ptext6:
  2306                           	callstack 0
  2307   0039F6                     _convert_short_to_string:
  2308                           	callstack 18
  2309   0039F6                     
  2310                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 447: Std_ReturnType convert_short_to_string(uint16 va
      +                          lue,uint8 *str);ECU_layer/Char_lCD/ecu_chr_lcd.c: 448: {;ECU_layer/Char_lCD/ecu_chr_lcd.
      +                          c: 449:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2311   0039F6  0E01               	movlw	1
  2312   0039F8  0100               	movlb	0	; () banked
  2313   0039FA  6FF9               	movwf	convert_short_to_string@ret& (0+255),b
  2314   0039FC                     
  2315                           ; BSR set to: 0
  2316                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 450:     uint8 Temp_String[6] = {0};
  2317   0039FC  EE20  F0F3         	lfsr	2,convert_short_to_string@Temp_String
  2318   003A00  0E05               	movlw	5
  2319   003A02                     u10231:
  2320   003A02  6ADE               	clrf	postinc2,c
  2321   003A04  06E8               	decf	wreg,f,c
  2322   003A06  E2FD               	bc	u10231
  2323   003A08                     
  2324                           ; BSR set to: 0
  2325                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 451:     uint8 DataCounter = 0;
  2326   003A08  0E00               	movlw	0
  2327   003A0A  6FFA               	movwf	convert_short_to_string@DataCounter& (0+255),b
  2328   003A0C                     
  2329                           ; BSR set to: 0
  2330                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 452:     if(str == ((void*)0))
  2331   003A0C  5063               	movf	convert_short_to_string@str^0,w,c
  2332   003A0E  1064               	iorwf	(convert_short_to_string@str+1)^0,w,c
  2333   003A10  A4D8               	btfss	status,2,c
  2334   003A12  EF0D  F01D         	goto	u10241
  2335   003A16  EF0F  F01D         	goto	u10240
  2336   003A1A                     u10241:
  2337   003A1A  EF13  F01D         	goto	l9519
  2338   003A1E                     u10240:
  2339   003A1E                     
  2340                           ; BSR set to: 0
  2341                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 453:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 454:    
      +                               ret = (Std_ReturnType)0x00;
  2342   003A1E  0E00               	movlw	0
  2343   003A20  6FF9               	movwf	convert_short_to_string@ret& (0+255),b
  2344                           
  2345                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 455:     }
  2346   003A22  EF56  F01D         	goto	l9531
  2347   003A26                     l9519:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 457:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 458:    
      +                               memset(str, ' ', 5);
  2351   003A26  C063  F00D         	movff	convert_short_to_string@str,memset@dest
  2352   003A2A  C064  F00E         	movff	convert_short_to_string@str+1,memset@dest+1
  2353   003A2E  0E00               	movlw	0
  2354   003A30  6E10               	movwf	(memset@c+1)^0,c
  2355   003A32  0E20               	movlw	32
  2356   003A34  6E0F               	movwf	memset@c^0,c
  2357   003A36  0E00               	movlw	0
  2358   003A38  6E12               	movwf	(memset@n+1)^0,c
  2359   003A3A  0E05               	movlw	5
  2360   003A3C  6E11               	movwf	memset@n^0,c
  2361   003A3E  EC3D  F017         	call	_memset	;wreg free
  2362   003A42                     
  2363                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 459:         str[5] = '\0';
  2364   003A42  EE20 F005          	lfsr	2,5
  2365   003A46  5063               	movf	convert_short_to_string@str^0,w,c
  2366   003A48  26D9               	addwf	fsr2l,f,c
  2367   003A4A  5064               	movf	(convert_short_to_string@str+1)^0,w,c
  2368   003A4C  22DA               	addwfc	fsr2h,f,c
  2369   003A4E  6ADF               	clrf	indf2,c
  2370   003A50                     
  2371                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 460:         sprintf((char *)Temp_String, "%i", value
      +                          );
  2372   003A50  0EF3               	movlw	low convert_short_to_string@Temp_String
  2373   003A52  6E4B               	movwf	sprintf@s^0,c
  2374   003A54  0E00               	movlw	high convert_short_to_string@Temp_String
  2375   003A56  6E4C               	movwf	(sprintf@s+1)^0,c
  2376   003A58  0E5A               	movlw	low STR_1
  2377   003A5A  6E4D               	movwf	sprintf@fmt^0,c
  2378   003A5C  0E10               	movlw	high STR_1
  2379   003A5E  6E4E               	movwf	(sprintf@fmt+1)^0,c
  2380   003A60  C061  F04F         	movff	convert_short_to_string@value,?_sprintf+4
  2381   003A64  C062  F050         	movff	convert_short_to_string@value+1,?_sprintf+5
  2382   003A68  EC34  F021         	call	_sprintf	;wreg free
  2383                           
  2384                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 461:         while(Temp_String[DataCounter] != '\0'){
  2385   003A6C  EF47  F01D         	goto	l9529
  2386   003A70                     l9525:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 462:             str[DataCounter] = Temp_String[DataC
      +                          ounter];
  2390   003A70  0EF3               	movlw	low convert_short_to_string@Temp_String
  2391   003A72  25FA               	addwf	convert_short_to_string@DataCounter& (0+255),w,b
  2392   003A74  6ED9               	movwf	fsr2l,c
  2393   003A76  6ADA               	clrf	fsr2h,c
  2394   003A78  0E00               	movlw	high convert_short_to_string@Temp_String
  2395   003A7A  22DA               	addwfc	fsr2h,f,c
  2396   003A7C  51FA               	movf	convert_short_to_string@DataCounter& (0+255),w,b
  2397   003A7E  2463               	addwf	convert_short_to_string@str^0,w,c
  2398   003A80  6EE1               	movwf	fsr1l,c
  2399   003A82  0E00               	movlw	0
  2400   003A84  2064               	addwfc	(convert_short_to_string@str+1)^0,w,c
  2401   003A86  6EE2               	movwf	fsr1h,c
  2402   003A88  CFDF FFE7          	movff	indf2,indf1
  2403   003A8C                     
  2404                           ; BSR set to: 0
  2405                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 463:             DataCounter++;
  2406   003A8C  2BFA               	incf	convert_short_to_string@DataCounter& (0+255),f,b
  2407   003A8E                     l9529:
  2408                           
  2409                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 461:         while(Temp_String[DataCounter] != '\0'){
  2410   003A8E  0EF3               	movlw	low convert_short_to_string@Temp_String
  2411   003A90  0100               	movlb	0	; () banked
  2412   003A92  25FA               	addwf	convert_short_to_string@DataCounter& (0+255),w,b
  2413   003A94  6ED9               	movwf	fsr2l,c
  2414   003A96  6ADA               	clrf	fsr2h,c
  2415   003A98  0E00               	movlw	high convert_short_to_string@Temp_String
  2416   003A9A  22DA               	addwfc	fsr2h,f,c
  2417   003A9C  50DF               	movf	indf2,w,c
  2418   003A9E  A4D8               	btfss	status,2,c
  2419   003AA0  EF54  F01D         	goto	u10251
  2420   003AA4  EF56  F01D         	goto	u10250
  2421   003AA8                     u10251:
  2422   003AA8  EF38  F01D         	goto	l9525
  2423   003AAC                     u10250:
  2424   003AAC                     l9531:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 467:     return ret;
  2428   003AAC  51F9               	movf	convert_short_to_string@ret& (0+255),w,b
  2429   003AAE                     
  2430                           ; BSR set to: 0
  2431   003AAE  0012               	return		;funcret
  2432   003AB0                     __end_of_convert_short_to_string:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _sprintf *****************
  2436 ;; Defined at:
  2437 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  s               2   74[COMRAM] PTR unsigned char 
  2440 ;;		 -> convert_int_to_string@Temp_String(11), convert_short_to_string@Temp_String(6), 
  2441 ;;  fmt             2   76[COMRAM] PTR const unsigned char 
  2442 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  f              12   84[COMRAM] struct _IO_FILE
  2445 ;;  ap              2   82[COMRAM] PTR void [1]
  2446 ;;		 -> ?_sprintf(2), 
  2447 ;;  ret             2    0        int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2   74[COMRAM] int 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2457 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;Total ram usage:       22 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 11
  2464 ;; This function calls:
  2465 ;;		_vfprintf
  2466 ;; This function is called by:
  2467 ;;		_convert_short_to_string
  2468 ;;		_convert_byte_to_string
  2469 ;;		_convert_int_to_string
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text7
  2474   004268                     __ptext7:
  2475                           	callstack 0
  2476   004268                     _sprintf:
  2477                           	callstack 18
  2478   004268  0E4F               	movlw	low (?_sprintf+4)
  2479   00426A  6E53               	movwf	sprintf@ap^0,c
  2480   00426C  0E00               	movlw	high (?_sprintf+4)
  2481   00426E  6E54               	movwf	(sprintf@ap+1)^0,c
  2482   004270  C04B  F055         	movff	sprintf@s,sprintf@f
  2483   004274  C04C  F056         	movff	sprintf@s+1,sprintf@f+1
  2484   004278  0E00               	movlw	0
  2485   00427A  6E59               	movwf	(sprintf@f+4)^0,c
  2486   00427C  0E00               	movlw	0
  2487   00427E  6E58               	movwf	(sprintf@f+3)^0,c
  2488   004280  0E00               	movlw	0
  2489   004282  6E60               	movwf	(sprintf@f+11)^0,c
  2490   004284  0E00               	movlw	0
  2491   004286  6E5F               	movwf	(sprintf@f+10)^0,c
  2492   004288  0E55               	movlw	low sprintf@f
  2493   00428A  6E43               	movwf	vfprintf@fp^0,c
  2494   00428C  0E00               	movlw	high sprintf@f
  2495   00428E  6E44               	movwf	(vfprintf@fp+1)^0,c
  2496   004290  C04D  F045         	movff	sprintf@fmt,vfprintf@fmt
  2497   004294  C04E  F046         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2498   004298  0E53               	movlw	low sprintf@ap
  2499   00429A  6E47               	movwf	vfprintf@ap^0,c
  2500   00429C  0E00               	movlw	high sprintf@ap
  2501   00429E  6E48               	movwf	(vfprintf@ap+1)^0,c
  2502   0042A0  ECE5  F020         	call	_vfprintf	;wreg free
  2503   0042A4  5058               	movf	(sprintf@f+3)^0,w,c
  2504   0042A6  244B               	addwf	sprintf@s^0,w,c
  2505   0042A8  6ED9               	movwf	fsr2l,c
  2506   0042AA  5059               	movf	(sprintf@f+4)^0,w,c
  2507   0042AC  204C               	addwfc	(sprintf@s+1)^0,w,c
  2508   0042AE  6EDA               	movwf	fsr2h,c
  2509   0042B0  6ADF               	clrf	indf2,c
  2510   0042B2  0012               	return		;funcret
  2511   0042B4                     __end_of_sprintf:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _vfprintf *****************
  2515 ;; Defined at:
  2516 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2519 ;;		 -> sprintf@f(12), 
  2520 ;;  fmt             2   68[COMRAM] PTR const unsigned char 
  2521 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2522 ;;  ap              2   70[COMRAM] PTR PTR void 
  2523 ;;		 -> sprintf@ap(2), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  cfmt            2   72[COMRAM] PTR unsigned char 
  2526 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2   66[COMRAM] int 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        8 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 10
  2543 ;; This function calls:
  2544 ;;		_vfpfcnvrt
  2545 ;; This function is called by:
  2546 ;;		_sprintf
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text8
  2551   0041CA                     __ptext8:
  2552                           	callstack 0
  2553   0041CA                     _vfprintf:
  2554                           	callstack 18
  2555   0041CA                     
  2556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2557   0041CA  C045  F049         	movff	vfprintf@fmt,vfprintf@cfmt
  2558   0041CE  C046  F04A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2561   0041D2  EFF9  F020         	goto	l9145
  2562   0041D6                     l9143:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2565   0041D6  C043  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2566   0041DA  C044  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2567   0041DE  0E49               	movlw	low vfprintf@cfmt
  2568   0041E0  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2569   0041E2  0E00               	movlw	high vfprintf@cfmt
  2570   0041E4  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2571   0041E6  C047  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2572   0041EA  C048  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2573   0041EE  EC33  F019         	call	_vfpfcnvrt	;wreg free
  2574   0041F2                     l9145:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2577   0041F2  C049  FFF6         	movff	vfprintf@cfmt,tblptrl
  2578   0041F6  C04A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2579   0041FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2580   0041FA  6AF8               	clrf	tblptru,c
  2581   0041FC                     	endif
  2582   0041FC                     	if	0	;tblptru may be non-zero
  2583   0041FC                     	endif
  2584   0041FC  0008               	tblrd		*
  2585   0041FE  50F5               	movf	tablat,w,c
  2586   004200  0900               	iorlw	0
  2587   004202  A4D8               	btfss	status,2,c
  2588   004204  EF06  F021         	goto	u9851
  2589   004208  EF08  F021         	goto	u9850
  2590   00420C                     u9851:
  2591   00420C  EFEB  F020         	goto	l9143
  2592   004210                     u9850:
  2593   004210                     
  2594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2595   004210  0E00               	movlw	0
  2596   004212  6E44               	movwf	(?_vfprintf+1)^0,c
  2597   004214  0E00               	movlw	0
  2598   004216  6E43               	movwf	?_vfprintf^0,c
  2599   004218  0012               	return		;funcret
  2600   00421A                     __end_of_vfprintf:
  2601                           	callstack 0
  2602                           
  2603 ;; *************** function _vfpfcnvrt *****************
  2604 ;; Defined at:
  2605 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2608 ;;		 -> sprintf@f(12), 
  2609 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2610 ;;		 -> vfprintf@cfmt(2), 
  2611 ;;  ap              2   56[COMRAM] PTR PTR void 
  2612 ;;		 -> sprintf@ap(2), 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  convarg         4   60[COMRAM] struct .
  2615 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2616 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2617 ;;  i               2    0        int 
  2618 ;;  done            2    0        int 
  2619 ;;  c               1    0        unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2629 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;Total ram usage:       14 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 9
  2636 ;; This function calls:
  2637 ;;		_dtoa
  2638 ;;		_fputc
  2639 ;; This function is called by:
  2640 ;;		_vfprintf
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text9
  2645   003266                     __ptext9:
  2646                           	callstack 0
  2647   003266                     _vfpfcnvrt:
  2648                           	callstack 18
  2649   003266                     
  2650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2651   003266  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2652   00326A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2653   00326E  CFDE FFF6          	movff	postinc2,tblptrl
  2654   003272  CFDD FFF7          	movff	postdec2,tblptrh
  2655   003276                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2656   003276  6AF8               	clrf	tblptru,c
  2657   003278                     	endif
  2658   003278                     	if	0	;tblptru may be non-zero
  2659   003278                     	endif
  2660   003278  0008               	tblrd		*
  2661   00327A  50F5               	movf	tablat,w,c
  2662   00327C  0A25               	xorlw	37
  2663   00327E  A4D8               	btfss	status,2,c
  2664   003280  EF44  F019         	goto	u8781
  2665   003284  EF46  F019         	goto	u8780
  2666   003288                     u8781:
  2667   003288  EFB3  F019         	goto	l8483
  2668   00328C                     u8780:
  2669   00328C                     
  2670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2671   00328C  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2672   003290  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2673   003294  2ADE               	incf	postinc2,f,c
  2674   003296  0E00               	movlw	0
  2675   003298  22DD               	addwfc	postdec2,f,c
  2676   00329A                     
  2677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2678   00329A  0E00               	movlw	0
  2679   00329C  0100               	movlb	0	; () banked
  2680   00329E  6F97               	movwf	(_width+1)& (0+255),b
  2681   0032A0  0E00               	movlw	0
  2682   0032A2  6F96               	movwf	_width& (0+255),b
  2683   0032A4  C096  F0B0         	movff	_width,_flags
  2684   0032A8                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2687   0032A8  6998               	setf	_prec& (0+255),b
  2688   0032AA  6999               	setf	(_prec+1)& (0+255),b
  2689   0032AC                     
  2690                           ; BSR set to: 0
  2691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2692   0032AC  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2693   0032B0  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2694   0032B4  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  2695   0032B8  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  2696   0032BC                     
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2699   0032BC  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2700   0032C0  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2701   0032C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2702   0032C4  6AF8               	clrf	tblptru,c
  2703   0032C6                     	endif
  2704   0032C6                     	if	0	;tblptru may be non-zero
  2705   0032C6                     	endif
  2706   0032C6  0008               	tblrd		*
  2707   0032C8  50F5               	movf	tablat,w,c
  2708   0032CA  0A64               	xorlw	100
  2709   0032CC  B4D8               	btfsc	status,2,c
  2710   0032CE  EF6B  F019         	goto	u8791
  2711   0032D2  EF6D  F019         	goto	u8790
  2712   0032D6                     u8791:
  2713   0032D6  EF7C  F019         	goto	l8473
  2714   0032DA                     u8790:
  2715   0032DA                     
  2716                           ; BSR set to: 0
  2717   0032DA  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2718   0032DE  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2719   0032E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2720   0032E2  6AF8               	clrf	tblptru,c
  2721   0032E4                     	endif
  2722   0032E4                     	if	0	;tblptru may be non-zero
  2723   0032E4                     	endif
  2724   0032E4  0008               	tblrd		*
  2725   0032E6  50F5               	movf	tablat,w,c
  2726   0032E8  0A69               	xorlw	105
  2727   0032EA  A4D8               	btfss	status,2,c
  2728   0032EC  EF7A  F019         	goto	u8801
  2729   0032F0  EF7C  F019         	goto	u8800
  2730   0032F4                     u8801:
  2731   0032F4  EFAA  F019         	goto	l8479
  2732   0032F8                     u8800:
  2733   0032F8                     l8473:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2737   0032F8  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2738   0032FC  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2739   003300  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2740   003304  0E02               	movlw	2
  2741   003306  26DE               	addwf	postinc2,f,c
  2742   003308  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2743   00330C  0E00               	movlw	0
  2744   00330E  22DD               	addwfc	postdec2,f,c
  2745   003310  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2746   003314  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2747   003318  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg
  2748   00331C  CFDD F03E          	movff	postdec2,vfpfcnvrt@convarg+1
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2751   003320  0E01               	movlw	1
  2752   003322  2441               	addwf	vfpfcnvrt@cp^0,w,c
  2753   003324  6E3B               	movwf	??_vfpfcnvrt^0,c
  2754   003326  0E00               	movlw	0
  2755   003328  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2756   00332A  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2757   00332C  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2758   003330  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2759   003334  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2760   003338  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2761   00333C                     
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2764   00333C  C035  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  2765   003340  C036  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2766   003344  C03D  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  2767   003348  C03E  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2768   00334C  EC72  F016         	call	_dtoa	;wreg free
  2769   003350  EFC8  F019         	goto	l2091
  2770   003354                     l8479:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2773   003354  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2774   003358  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2775   00335C  2ADE               	incf	postinc2,f,c
  2776   00335E  0E00               	movlw	0
  2777   003360  22DD               	addwfc	postdec2,f,c
  2778   003362  EFC8  F019         	goto	l2091
  2779   003366                     l8483:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2782   003366  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2783   00336A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2784   00336E  CFDE FFF6          	movff	postinc2,tblptrl
  2785   003372  CFDD FFF7          	movff	postdec2,tblptrh
  2786   003376                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2787   003376  6AF8               	clrf	tblptru,c
  2788   003378                     	endif
  2789   003378                     	if	0	;tblptru may be non-zero
  2790   003378                     	endif
  2791   003378  0008               	tblrd		*
  2792   00337A  50F5               	movf	tablat,w,c
  2793   00337C  6E0D               	movwf	fputc@c^0,c
  2794   00337E  6A0E               	clrf	(fputc@c+1)^0,c
  2795   003380  C035  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2796   003384  C036  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2797   003388  ECD3  F01B         	call	_fputc	;wreg free
  2798   00338C  EFAA  F019         	goto	l8479
  2799   003390                     l2091:
  2800   003390  0012               	return		;funcret
  2801   003392                     __end_of_vfpfcnvrt:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _dtoa *****************
  2805 ;; Defined at:
  2806 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2809 ;;		 -> sprintf@f(12), 
  2810 ;;  d               2   41[COMRAM] int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  i               2   50[COMRAM] int 
  2813 ;;  w               2   47[COMRAM] int 
  2814 ;;  p               2   45[COMRAM] int 
  2815 ;;  s               1   49[COMRAM] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:       13 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 8
  2832 ;; This function calls:
  2833 ;;		___awdiv
  2834 ;;		___awmod
  2835 ;;		_abs
  2836 ;;		_pad
  2837 ;; This function is called by:
  2838 ;;		_vfpfcnvrt
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text10
  2843   002CE4                     __ptext10:
  2844                           	callstack 0
  2845   002CE4                     _dtoa:
  2846                           	callstack 18
  2847   002CE4                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2849   002CE4  BE2B               	btfsc	(dtoa@d+1)^0,7,c
  2850   002CE6  EF77  F016         	goto	u8631
  2851   002CEA  EF7A  F016         	goto	u8630
  2852   002CEE                     u8631:
  2853   002CEE  0E01               	movlw	1
  2854   002CF0  EF7B  F016         	goto	u8640
  2855   002CF4                     u8630:
  2856   002CF4  0E00               	movlw	0
  2857   002CF6                     u8640:
  2858   002CF6  6E32               	movwf	dtoa@s^0,c
  2859   002CF8                     
  2860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2861   002CF8  5032               	movf	dtoa@s^0,w,c
  2862   002CFA  B4D8               	btfsc	status,2,c
  2863   002CFC  EF82  F016         	goto	u8651
  2864   002D00  EF84  F016         	goto	u8650
  2865   002D04                     u8651:
  2866   002D04  EF88  F016         	goto	l8375
  2867   002D08                     u8650:
  2868   002D08                     
  2869                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2870   002D08  6C2A               	negf	dtoa@d^0,c
  2871   002D0A  1E2B               	comf	(dtoa@d+1)^0,f,c
  2872   002D0C  B0D8               	btfsc	status,0,c
  2873   002D0E  2A2B               	incf	(dtoa@d+1)^0,f,c
  2874   002D10                     l8375:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2877   002D10  0100               	movlb	0	; () banked
  2878   002D12  BF99               	btfsc	(_prec+1)& (0+255),7,b
  2879   002D14  EF90  F016         	goto	u8660
  2880   002D18  EF8E  F016         	goto	u8661
  2881   002D1C                     u8661:
  2882   002D1C  EF96  F016         	goto	l2070
  2883   002D20                     u8660:
  2884   002D20                     
  2885                           ; BSR set to: 0
  2886   002D20  0E00               	movlw	0
  2887   002D22  6E2F               	movwf	(dtoa@p+1)^0,c
  2888   002D24  0E01               	movlw	1
  2889   002D26  6E2E               	movwf	dtoa@p^0,c
  2890   002D28  EF9A  F016         	goto	l2072
  2891   002D2C                     l2070:
  2892                           
  2893                           ; BSR set to: 0
  2894   002D2C  C098  F02E         	movff	_prec,dtoa@p
  2895   002D30  C099  F02F         	movff	_prec+1,dtoa@p+1
  2896   002D34                     l2072:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2900   002D34  C096  F030         	movff	_width,dtoa@w
  2901   002D38  C097  F031         	movff	_width+1,dtoa@w+1
  2902   002D3C                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2905   002D3C  5032               	movf	dtoa@s^0,w,c
  2906   002D3E  B4D8               	btfsc	status,2,c
  2907   002D40  EFA4  F016         	goto	u8671
  2908   002D44  EFA6  F016         	goto	u8670
  2909   002D48                     u8671:
  2910   002D48  EFBD  F016         	goto	l2073
  2911   002D4C                     u8670:
  2912   002D4C                     
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2915   002D4C  0630               	decf	dtoa@w^0,f,c
  2916   002D4E  A0D8               	btfss	status,0,c
  2917   002D50  0631               	decf	(dtoa@w+1)^0,f,c
  2918   002D52                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2921   002D52  5032               	movf	dtoa@s^0,w,c
  2922   002D54  A4D8               	btfss	status,2,c
  2923   002D56  EFAF  F016         	goto	u8681
  2924   002D5A  EFB1  F016         	goto	u8680
  2925   002D5E                     u8681:
  2926   002D5E  EFB7  F016         	goto	l8387
  2927   002D62                     u8680:
  2928   002D62                     
  2929                           ; BSR set to: 0
  2930   002D62  0E00               	movlw	0
  2931   002D64  6E2D               	movwf	(_dtoa$3742+1)^0,c
  2932   002D66  0E2B               	movlw	43
  2933   002D68  6E2C               	movwf	_dtoa$3742^0,c
  2934   002D6A  EFBB  F016         	goto	l8389
  2935   002D6E                     l8387:
  2936                           
  2937                           ; BSR set to: 0
  2938   002D6E  0E00               	movlw	0
  2939   002D70  6E2D               	movwf	(_dtoa$3742+1)^0,c
  2940   002D72  0E2D               	movlw	45
  2941   002D74  6E2C               	movwf	_dtoa$3742^0,c
  2942   002D76                     l8389:
  2943                           
  2944                           ; BSR set to: 0
  2945   002D76  C02C  F032         	movff	_dtoa$3742,dtoa@s
  2946   002D7A                     l2073:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2950   002D7A  0E00               	movlw	0
  2951   002D7C  6E34               	movwf	(dtoa@i+1)^0,c
  2952   002D7E  0E1F               	movlw	31
  2953   002D80  6E33               	movwf	dtoa@i^0,c
  2954   002D82                     
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2957   002D82  0E00               	movlw	0
  2958   002D84  0101               	movlb	1	; () banked
  2959   002D86  6F30               	movwf	(_dbuf+31)& (0+255),b
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2962   002D88  EFF6  F016         	goto	l8403
  2963   002D8C                     l8393:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2966   002D8C  0633               	decf	dtoa@i^0,f,c
  2967   002D8E  A0D8               	btfss	status,0,c
  2968   002D90  0634               	decf	(dtoa@i+1)^0,f,c
  2969   002D92                     
  2970                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2971   002D92  0E11               	movlw	low _dbuf
  2972   002D94  2433               	addwf	dtoa@i^0,w,c
  2973   002D96  6ED9               	movwf	fsr2l,c
  2974   002D98  0E01               	movlw	high _dbuf
  2975   002D9A  2034               	addwfc	(dtoa@i+1)^0,w,c
  2976   002D9C  6EDA               	movwf	fsr2h,c
  2977   002D9E  C02A  F00D         	movff	dtoa@d,___awmod@dividend
  2978   002DA2  C02B  F00E         	movff	dtoa@d+1,___awmod@dividend+1
  2979   002DA6  0E00               	movlw	0
  2980   002DA8  6E10               	movwf	(___awmod@divisor+1)^0,c
  2981   002DAA  0E0A               	movlw	10
  2982   002DAC  6E0F               	movwf	___awmod@divisor^0,c
  2983   002DAE  EC58  F01D         	call	___awmod	;wreg free
  2984   002DB2  C00D  F013         	movff	?___awmod,abs@a
  2985   002DB6  C00E  F014         	movff	?___awmod+1,abs@a+1
  2986   002DBA  ECC0  F021         	call	_abs	;wreg free
  2987   002DBE  5013               	movf	?_abs^0,w,c
  2988   002DC0  0F30               	addlw	48
  2989   002DC2  6EDF               	movwf	indf2,c
  2990   002DC4                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2992   002DC4  062E               	decf	dtoa@p^0,f,c
  2993   002DC6  A0D8               	btfss	status,0,c
  2994   002DC8  062F               	decf	(dtoa@p+1)^0,f,c
  2995   002DCA                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2997   002DCA  0630               	decf	dtoa@w^0,f,c
  2998   002DCC  A0D8               	btfss	status,0,c
  2999   002DCE  0631               	decf	(dtoa@w+1)^0,f,c
  3000   002DD0                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3002   002DD0  C02A  F00D         	movff	dtoa@d,___awdiv@dividend
  3003   002DD4  C02B  F00E         	movff	dtoa@d+1,___awdiv@dividend+1
  3004   002DD8  0E00               	movlw	0
  3005   002DDA  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3006   002DDC  0E0A               	movlw	10
  3007   002DDE  6E0F               	movwf	___awdiv@divisor^0,c
  3008   002DE0  EC38  F01C         	call	___awdiv	;wreg free
  3009   002DE4  C00D  F02A         	movff	?___awdiv,dtoa@d
  3010   002DE8  C00E  F02B         	movff	?___awdiv+1,dtoa@d+1
  3011   002DEC                     l8403:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3014   002DEC  BE34               	btfsc	(dtoa@i+1)^0,7,c
  3015   002DEE  EF01  F017         	goto	u8691
  3016   002DF2  5034               	movf	(dtoa@i+1)^0,w,c
  3017   002DF4  E108               	bnz	u8690
  3018   002DF6  0433               	decf	dtoa@i^0,w,c
  3019   002DF8  A0D8               	btfss	status,0,c
  3020   002DFA  EF01  F017         	goto	u8691
  3021   002DFE  EF03  F017         	goto	u8690
  3022   002E02                     u8691:
  3023   002E02  EF19  F017         	goto	l8409
  3024   002E06                     u8690:
  3025   002E06  502A               	movf	dtoa@d^0,w,c
  3026   002E08  102B               	iorwf	(dtoa@d+1)^0,w,c
  3027   002E0A  A4D8               	btfss	status,2,c
  3028   002E0C  EF0A  F017         	goto	u8701
  3029   002E10  EF0C  F017         	goto	u8700
  3030   002E14                     u8701:
  3031   002E14  EFC6  F016         	goto	l8393
  3032   002E18                     u8700:
  3033   002E18  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  3034   002E1A  EF19  F017         	goto	u8710
  3035   002E1E  502F               	movf	(dtoa@p+1)^0,w,c
  3036   002E20  E106               	bnz	u8711
  3037   002E22  042E               	decf	dtoa@p^0,w,c
  3038   002E24  B0D8               	btfsc	status,0,c
  3039   002E26  EF17  F017         	goto	u8711
  3040   002E2A  EF19  F017         	goto	u8710
  3041   002E2E                     u8711:
  3042   002E2E  EFC6  F016         	goto	l8393
  3043   002E32                     u8710:
  3044   002E32                     l8409:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3047   002E32  5032               	movf	dtoa@s^0,w,c
  3048   002E34  B4D8               	btfsc	status,2,c
  3049   002E36  EF1F  F017         	goto	u8721
  3050   002E3A  EF21  F017         	goto	u8720
  3051   002E3E                     u8721:
  3052   002E3E  EF2C  F017         	goto	l8415
  3053   002E42                     u8720:
  3054   002E42                     
  3055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3056   002E42  0633               	decf	dtoa@i^0,f,c
  3057   002E44  A0D8               	btfss	status,0,c
  3058   002E46  0634               	decf	(dtoa@i+1)^0,f,c
  3059   002E48                     
  3060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3061   002E48  0E11               	movlw	low _dbuf
  3062   002E4A  2433               	addwf	dtoa@i^0,w,c
  3063   002E4C  6ED9               	movwf	fsr2l,c
  3064   002E4E  0E01               	movlw	high _dbuf
  3065   002E50  2034               	addwfc	(dtoa@i+1)^0,w,c
  3066   002E52  6EDA               	movwf	fsr2h,c
  3067   002E54  C032  FFDF         	movff	dtoa@s,indf2
  3068   002E58                     l8415:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3071   002E58  C028  F01D         	movff	dtoa@fp,pad@fp
  3072   002E5C  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  3073   002E60  0E11               	movlw	low _dbuf
  3074   002E62  2433               	addwf	dtoa@i^0,w,c
  3075   002E64  6E1F               	movwf	pad@buf^0,c
  3076   002E66  0E01               	movlw	high _dbuf
  3077   002E68  2034               	addwfc	(dtoa@i+1)^0,w,c
  3078   002E6A  6E20               	movwf	(pad@buf+1)^0,c
  3079   002E6C  C030  F021         	movff	dtoa@w,pad@p
  3080   002E70  C031  F022         	movff	dtoa@w+1,pad@p+1
  3081   002E74  EC3C  F01F         	call	_pad	;wreg free
  3082   002E78  0012               	return		;funcret
  3083   002E7A                     __end_of_dtoa:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _pad *****************
  3087 ;; Defined at:
  3088 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3091 ;;		 -> sprintf@f(12), 
  3092 ;;  buf             2   30[COMRAM] PTR unsigned char 
  3093 ;;		 -> dbuf(32), 
  3094 ;;  p               2   32[COMRAM] int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  w               2   37[COMRAM] int 
  3097 ;;  i               2   35[COMRAM] int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3107 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;Total ram usage:       11 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 7
  3114 ;; This function calls:
  3115 ;;		_fputc
  3116 ;;		_fputs
  3117 ;; This function is called by:
  3118 ;;		_dtoa
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text11
  3123   003E78                     __ptext11:
  3124                           	callstack 0
  3125   003E78                     _pad:
  3126                           	callstack 18
  3127   003E78                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3129   003E78  BE22               	btfsc	(pad@p+1)^0,7,c
  3130   003E7A  EF41  F01F         	goto	u8531
  3131   003E7E  EF43  F01F         	goto	u8530
  3132   003E82                     u8531:
  3133   003E82  EF49  F01F         	goto	l8317
  3134   003E86                     u8530:
  3135   003E86  C021  F026         	movff	pad@p,pad@w
  3136   003E8A  C022  F027         	movff	pad@p+1,pad@w+1
  3137   003E8E  EF4D  F01F         	goto	l2061
  3138   003E92                     l8317:
  3139   003E92  0E00               	movlw	0
  3140   003E94  6E27               	movwf	(pad@w+1)^0,c
  3141   003E96  0E00               	movlw	0
  3142   003E98  6E26               	movwf	pad@w^0,c
  3143   003E9A                     l2061:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3146   003E9A  0E00               	movlw	0
  3147   003E9C  6E25               	movwf	(pad@i+1)^0,c
  3148   003E9E  0E00               	movlw	0
  3149   003EA0  6E24               	movwf	pad@i^0,c
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3152   003EA2  EF5F  F01F         	goto	l8323
  3153   003EA6                     l8319:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3156   003EA6  0E00               	movlw	0
  3157   003EA8  6E0E               	movwf	(fputc@c+1)^0,c
  3158   003EAA  0E20               	movlw	32
  3159   003EAC  6E0D               	movwf	fputc@c^0,c
  3160   003EAE  C01D  F00F         	movff	pad@fp,fputc@fp
  3161   003EB2  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  3162   003EB6  ECD3  F01B         	call	_fputc	;wreg free
  3163   003EBA                     
  3164                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3165   003EBA  4A24               	infsnz	pad@i^0,f,c
  3166   003EBC  2A25               	incf	(pad@i+1)^0,f,c
  3167   003EBE                     l8323:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3170   003EBE  5026               	movf	pad@w^0,w,c
  3171   003EC0  5C24               	subwf	pad@i^0,w,c
  3172   003EC2  5025               	movf	(pad@i+1)^0,w,c
  3173   003EC4  0A80               	xorlw	128
  3174   003EC6  6E23               	movwf	??_pad^0,c
  3175   003EC8  5027               	movf	(pad@w+1)^0,w,c
  3176   003ECA  0A80               	xorlw	128
  3177   003ECC  5823               	subwfb	??_pad^0,w,c
  3178   003ECE  A0D8               	btfss	status,0,c
  3179   003ED0  EF6C  F01F         	goto	u8541
  3180   003ED4  EF6E  F01F         	goto	u8540
  3181   003ED8                     u8541:
  3182   003ED8  EF53  F01F         	goto	l8319
  3183   003EDC                     u8540:
  3184   003EDC                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3186   003EDC  C01F  F016         	movff	pad@buf,fputs@s
  3187   003EE0  C020  F017         	movff	pad@buf+1,fputs@s+1
  3188   003EE4  C01D  F018         	movff	pad@fp,fputs@fp
  3189   003EE8  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  3190   003EEC  EC7D  F021         	call	_fputs	;wreg free
  3191   003EF0  0012               	return		;funcret
  3192   003EF2                     __end_of_pad:
  3193                           	callstack 0
  3194                           
  3195 ;; *************** function _fputs *****************
  3196 ;; Defined at:
  3197 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  s               2   21[COMRAM] PTR const unsigned char 
  3200 ;;		 -> dbuf(32), 
  3201 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3202 ;;		 -> sprintf@f(12), 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  i               2   26[COMRAM] int 
  3205 ;;  c               1   25[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2   21[COMRAM] int 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        7 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 6
  3222 ;; This function calls:
  3223 ;;		_fputc
  3224 ;; This function is called by:
  3225 ;;		_pad
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text12
  3230   0042FA                     __ptext12:
  3231                           	callstack 0
  3232   0042FA                     _fputs:
  3233                           	callstack 18
  3234   0042FA  0E00               	movlw	0
  3235   0042FC  6E1C               	movwf	(fputs@i+1)^0,c
  3236   0042FE  0E00               	movlw	0
  3237   004300  6E1B               	movwf	fputs@i^0,c
  3238   004302  EF8E  F021         	goto	l8207
  3239   004306                     l8203:
  3240   004306  C01A  F00D         	movff	fputs@c,fputc@c
  3241   00430A  6A0E               	clrf	(fputc@c+1)^0,c
  3242   00430C  C018  F00F         	movff	fputs@fp,fputc@fp
  3243   004310  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  3244   004314  ECD3  F01B         	call	_fputc	;wreg free
  3245   004318  4A1B               	infsnz	fputs@i^0,f,c
  3246   00431A  2A1C               	incf	(fputs@i+1)^0,f,c
  3247   00431C                     l8207:
  3248   00431C  501B               	movf	fputs@i^0,w,c
  3249   00431E  2416               	addwf	fputs@s^0,w,c
  3250   004320  6ED9               	movwf	fsr2l,c
  3251   004322  501C               	movf	(fputs@i+1)^0,w,c
  3252   004324  2017               	addwfc	(fputs@s+1)^0,w,c
  3253   004326  6EDA               	movwf	fsr2h,c
  3254   004328  50DF               	movf	indf2,w,c
  3255   00432A  6E1A               	movwf	fputs@c^0,c
  3256   00432C  501A               	movf	fputs@c^0,w,c
  3257   00432E  A4D8               	btfss	status,2,c
  3258   004330  EF9C  F021         	goto	u8361
  3259   004334  EF9E  F021         	goto	u8360
  3260   004338                     u8361:
  3261   004338  EF83  F021         	goto	l8203
  3262   00433C                     u8360:
  3263   00433C  0012               	return		;funcret
  3264   00433E                     __end_of_fputs:
  3265                           	callstack 0
  3266                           
  3267 ;; *************** function _fputc *****************
  3268 ;; Defined at:
  3269 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  c               2   12[COMRAM] int 
  3272 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  3273 ;;		 -> sprintf@f(12), 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  2   12[COMRAM] int 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;Total ram usage:        9 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 5
  3292 ;; This function calls:
  3293 ;;		_putch
  3294 ;; This function is called by:
  3295 ;;		_pad
  3296 ;;		_vfpfcnvrt
  3297 ;;		_fputs
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text13
  3302   0037A6                     __ptext13:
  3303                           	callstack 0
  3304   0037A6                     _fputc:
  3305                           	callstack 21
  3306   0037A6  500F               	movf	fputc@fp^0,w,c
  3307   0037A8  1010               	iorwf	(fputc@fp+1)^0,w,c
  3308   0037AA  B4D8               	btfsc	status,2,c
  3309   0037AC  EFDA  F01B         	goto	u8321
  3310   0037B0  EFDC  F01B         	goto	u8320
  3311   0037B4                     u8321:
  3312   0037B4  EFE5  F01B         	goto	l8191
  3313   0037B8                     u8320:
  3314   0037B8  500F               	movf	fputc@fp^0,w,c
  3315   0037BA  1010               	iorwf	(fputc@fp+1)^0,w,c
  3316   0037BC  A4D8               	btfss	status,2,c
  3317   0037BE  EFE3  F01B         	goto	u8331
  3318   0037C2  EFE5  F01B         	goto	u8330
  3319   0037C6                     u8331:
  3320   0037C6  EFEA  F01B         	goto	l8193
  3321   0037CA                     u8330:
  3322   0037CA                     l8191:
  3323   0037CA  500D               	movf	fputc@c^0,w,c
  3324   0037CC  ECF9  F022         	call	_putch
  3325   0037D0  EF37  F01C         	goto	l2116
  3326   0037D4                     l8193:
  3327   0037D4  EE20 F00A          	lfsr	2,10
  3328   0037D8  500F               	movf	fputc@fp^0,w,c
  3329   0037DA  26D9               	addwf	fsr2l,f,c
  3330   0037DC  5010               	movf	(fputc@fp+1)^0,w,c
  3331   0037DE  22DA               	addwfc	fsr2h,f,c
  3332   0037E0  50DE               	movf	postinc2,w,c
  3333   0037E2  10DE               	iorwf	postinc2,w,c
  3334   0037E4  B4D8               	btfsc	status,2,c
  3335   0037E6  EFF7  F01B         	goto	u8341
  3336   0037EA  EFF9  F01B         	goto	u8340
  3337   0037EE                     u8341:
  3338   0037EE  EF14  F01C         	goto	l8197
  3339   0037F2                     u8340:
  3340   0037F2  EE20 F00A          	lfsr	2,10
  3341   0037F6  500F               	movf	fputc@fp^0,w,c
  3342   0037F8  26D9               	addwf	fsr2l,f,c
  3343   0037FA  5010               	movf	(fputc@fp+1)^0,w,c
  3344   0037FC  22DA               	addwfc	fsr2h,f,c
  3345   0037FE  EE10 F003          	lfsr	1,3
  3346   003802  500F               	movf	fputc@fp^0,w,c
  3347   003804  26E1               	addwf	fsr1l,f,c
  3348   003806  5010               	movf	(fputc@fp+1)^0,w,c
  3349   003808  22E2               	addwfc	fsr1h,f,c
  3350   00380A  50DE               	movf	postinc2,w,c
  3351   00380C  5CE6               	subwf	postinc1,w,c
  3352   00380E  50E6               	movf	postinc1,w,c
  3353   003810  0A80               	xorlw	128
  3354   003812  6E15               	movwf	(??_fputc+4)^0,c
  3355   003814  50DE               	movf	postinc2,w,c
  3356   003816  0A80               	xorlw	128
  3357   003818  5815               	subwfb	(??_fputc+4)^0,w,c
  3358   00381A  B0D8               	btfsc	status,0,c
  3359   00381C  EF12  F01C         	goto	u8351
  3360   003820  EF14  F01C         	goto	u8350
  3361   003824                     u8351:
  3362   003824  EF37  F01C         	goto	l2116
  3363   003828                     u8350:
  3364   003828                     l8197:
  3365   003828  EE20 F003          	lfsr	2,3
  3366   00382C  500F               	movf	fputc@fp^0,w,c
  3367   00382E  26D9               	addwf	fsr2l,f,c
  3368   003830  5010               	movf	(fputc@fp+1)^0,w,c
  3369   003832  22DA               	addwfc	fsr2h,f,c
  3370   003834  CFDE F011          	movff	postinc2,??_fputc
  3371   003838  CFDD F012          	movff	postdec2,??_fputc+1
  3372   00383C  C00F  FFD9         	movff	fputc@fp,fsr2l
  3373   003840  C010  FFDA         	movff	fputc@fp+1,fsr2h
  3374   003844  CFDE F013          	movff	postinc2,??_fputc+2
  3375   003848  CFDD F014          	movff	postdec2,??_fputc+3
  3376   00384C  5011               	movf	??_fputc^0,w,c
  3377   00384E  2413               	addwf	(??_fputc+2)^0,w,c
  3378   003850  6ED9               	movwf	fsr2l,c
  3379   003852  5012               	movf	(??_fputc+1)^0,w,c
  3380   003854  2014               	addwfc	(??_fputc+3)^0,w,c
  3381   003856  6EDA               	movwf	fsr2h,c
  3382   003858  C00D  FFDF         	movff	fputc@c,indf2
  3383   00385C  EE20 F003          	lfsr	2,3
  3384   003860  500F               	movf	fputc@fp^0,w,c
  3385   003862  26D9               	addwf	fsr2l,f,c
  3386   003864  5010               	movf	(fputc@fp+1)^0,w,c
  3387   003866  22DA               	addwfc	fsr2h,f,c
  3388   003868  2ADE               	incf	postinc2,f,c
  3389   00386A  0E00               	movlw	0
  3390   00386C  22DD               	addwfc	postdec2,f,c
  3391   00386E                     l2116:
  3392   00386E  0012               	return		;funcret
  3393   003870                     __end_of_fputc:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _putch *****************
  3397 ;; Defined at:
  3398 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  c               1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  c               1    0[COMRAM] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 4
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_fputc
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text14
  3427   0045F2                     __ptext14:
  3428                           	callstack 0
  3429   0045F2                     _putch:
  3430                           	callstack 21
  3431   0045F2  0012               	return		;funcret
  3432   0045F4                     __end_of_putch:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _abs *****************
  3436 ;; Defined at:
  3437 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  a               2   18[COMRAM] int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2   18[COMRAM] int 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:        4 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 4
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_dtoa
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text15
  3466   004380                     __ptext15:
  3467                           	callstack 0
  3468   004380                     _abs:
  3469                           	callstack 21
  3470   004380  BE14               	btfsc	(abs@a+1)^0,7,c
  3471   004382  EFCD  F021         	goto	u8550
  3472   004386  5014               	movf	(abs@a+1)^0,w,c
  3473   004388  E106               	bnz	u8551
  3474   00438A  0413               	decf	abs@a^0,w,c
  3475   00438C  B0D8               	btfsc	status,0,c
  3476   00438E  EFCB  F021         	goto	u8551
  3477   004392  EFCD  F021         	goto	u8550
  3478   004396                     u8551:
  3479   004396  EFDB  F021         	goto	l2101
  3480   00439A                     u8550:
  3481   00439A  C013  F015         	movff	abs@a,??_abs
  3482   00439E  C014  F016         	movff	abs@a+1,??_abs+1
  3483   0043A2  1E15               	comf	??_abs^0,f,c
  3484   0043A4  1E16               	comf	(??_abs+1)^0,f,c
  3485   0043A6  4A15               	infsnz	??_abs^0,f,c
  3486   0043A8  2A16               	incf	(??_abs+1)^0,f,c
  3487   0043AA  C015  F013         	movff	??_abs,?_abs
  3488   0043AE  C016  F014         	movff	??_abs+1,?_abs+1
  3489   0043B2  EFDF  F021         	goto	l2104
  3490   0043B6                     l2101:
  3491   0043B6  C013  F013         	movff	abs@a,?_abs
  3492   0043BA  C014  F014         	movff	abs@a+1,?_abs+1
  3493   0043BE                     l2104:
  3494   0043BE  0012               	return		;funcret
  3495   0043C0                     __end_of_abs:
  3496                           	callstack 0
  3497                           
  3498 ;; *************** function ___awmod *****************
  3499 ;; Defined at:
  3500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  dividend        2   12[COMRAM] int 
  3503 ;;  divisor         2   14[COMRAM] int 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  sign            1   17[COMRAM] unsigned char 
  3506 ;;  counter         1   16[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  2   12[COMRAM] int 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        6 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 4
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_dtoa
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text16
  3531   003AB0                     __ptext16:
  3532                           	callstack 0
  3533   003AB0                     ___awmod:
  3534                           	callstack 21
  3535   003AB0  0E00               	movlw	0
  3536   003AB2  6E12               	movwf	___awmod@sign^0,c
  3537   003AB4  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3538   003AB6  EF61  F01D         	goto	u8470
  3539   003ABA  EF5F  F01D         	goto	u8471
  3540   003ABE                     u8471:
  3541   003ABE  EF67  F01D         	goto	l8285
  3542   003AC2                     u8470:
  3543   003AC2  6C0D               	negf	___awmod@dividend^0,c
  3544   003AC4  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3545   003AC6  B0D8               	btfsc	status,0,c
  3546   003AC8  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3547   003ACA  0E01               	movlw	1
  3548   003ACC  6E12               	movwf	___awmod@sign^0,c
  3549   003ACE                     l8285:
  3550   003ACE  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3551   003AD0  EF6E  F01D         	goto	u8480
  3552   003AD4  EF6C  F01D         	goto	u8481
  3553   003AD8                     u8481:
  3554   003AD8  EF72  F01D         	goto	l8289
  3555   003ADC                     u8480:
  3556   003ADC  6C0F               	negf	___awmod@divisor^0,c
  3557   003ADE  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3558   003AE0  B0D8               	btfsc	status,0,c
  3559   003AE2  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3560   003AE4                     l8289:
  3561   003AE4  500F               	movf	___awmod@divisor^0,w,c
  3562   003AE6  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3563   003AE8  B4D8               	btfsc	status,2,c
  3564   003AEA  EF79  F01D         	goto	u8491
  3565   003AEE  EF7B  F01D         	goto	u8490
  3566   003AF2                     u8491:
  3567   003AF2  EF9F  F01D         	goto	l8305
  3568   003AF6                     u8490:
  3569   003AF6  0E01               	movlw	1
  3570   003AF8  6E11               	movwf	___awmod@counter^0,c
  3571   003AFA  EF83  F01D         	goto	l8295
  3572   003AFE                     l8293:
  3573   003AFE  90D8               	bcf	status,0,c
  3574   003B00  360F               	rlcf	___awmod@divisor^0,f,c
  3575   003B02  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3576   003B04  2A11               	incf	___awmod@counter^0,f,c
  3577   003B06                     l8295:
  3578   003B06  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3579   003B08  EF88  F01D         	goto	u8501
  3580   003B0C  EF8A  F01D         	goto	u8500
  3581   003B10                     u8501:
  3582   003B10  EF7F  F01D         	goto	l8293
  3583   003B14                     u8500:
  3584   003B14                     l8297:
  3585   003B14  500F               	movf	___awmod@divisor^0,w,c
  3586   003B16  5C0D               	subwf	___awmod@dividend^0,w,c
  3587   003B18  5010               	movf	(___awmod@divisor+1)^0,w,c
  3588   003B1A  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3589   003B1C  A0D8               	btfss	status,0,c
  3590   003B1E  EF93  F01D         	goto	u8511
  3591   003B22  EF95  F01D         	goto	u8510
  3592   003B26                     u8511:
  3593   003B26  EF99  F01D         	goto	l8301
  3594   003B2A                     u8510:
  3595   003B2A  500F               	movf	___awmod@divisor^0,w,c
  3596   003B2C  5E0D               	subwf	___awmod@dividend^0,f,c
  3597   003B2E  5010               	movf	(___awmod@divisor+1)^0,w,c
  3598   003B30  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3599   003B32                     l8301:
  3600   003B32  90D8               	bcf	status,0,c
  3601   003B34  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3602   003B36  320F               	rrcf	___awmod@divisor^0,f,c
  3603   003B38  2E11               	decfsz	___awmod@counter^0,f,c
  3604   003B3A  EF8A  F01D         	goto	l8297
  3605   003B3E                     l8305:
  3606   003B3E  5012               	movf	___awmod@sign^0,w,c
  3607   003B40  B4D8               	btfsc	status,2,c
  3608   003B42  EFA5  F01D         	goto	u8521
  3609   003B46  EFA7  F01D         	goto	u8520
  3610   003B4A                     u8521:
  3611   003B4A  EFAB  F01D         	goto	l8309
  3612   003B4E                     u8520:
  3613   003B4E  6C0D               	negf	___awmod@dividend^0,c
  3614   003B50  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3615   003B52  B0D8               	btfsc	status,0,c
  3616   003B54  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3617   003B56                     l8309:
  3618   003B56  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3619   003B5A  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3620   003B5E  0012               	return		;funcret
  3621   003B60                     __end_of___awmod:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function ___awdiv *****************
  3625 ;; Defined at:
  3626 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  dividend        2   12[COMRAM] int 
  3629 ;;  divisor         2   14[COMRAM] int 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  quotient        2   18[COMRAM] int 
  3632 ;;  sign            1   17[COMRAM] unsigned char 
  3633 ;;  counter         1   16[COMRAM] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  2   12[COMRAM] int 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;Total ram usage:        8 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 4
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_dtoa
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text17
  3658   003870                     __ptext17:
  3659                           	callstack 0
  3660   003870                     ___awdiv:
  3661                           	callstack 21
  3662   003870  0E00               	movlw	0
  3663   003872  6E12               	movwf	___awdiv@sign^0,c
  3664   003874  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3665   003876  EF41  F01C         	goto	u8410
  3666   00387A  EF3F  F01C         	goto	u8411
  3667   00387E                     u8411:
  3668   00387E  EF47  F01C         	goto	l8241
  3669   003882                     u8410:
  3670   003882  6C0F               	negf	___awdiv@divisor^0,c
  3671   003884  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3672   003886  B0D8               	btfsc	status,0,c
  3673   003888  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3674   00388A  0E01               	movlw	1
  3675   00388C  6E12               	movwf	___awdiv@sign^0,c
  3676   00388E                     l8241:
  3677   00388E  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3678   003890  EF4E  F01C         	goto	u8420
  3679   003894  EF4C  F01C         	goto	u8421
  3680   003898                     u8421:
  3681   003898  EF54  F01C         	goto	l8247
  3682   00389C                     u8420:
  3683   00389C  6C0D               	negf	___awdiv@dividend^0,c
  3684   00389E  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3685   0038A0  B0D8               	btfsc	status,0,c
  3686   0038A2  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3687   0038A4  0E01               	movlw	1
  3688   0038A6  1A12               	xorwf	___awdiv@sign^0,f,c
  3689   0038A8                     l8247:
  3690   0038A8  0E00               	movlw	0
  3691   0038AA  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3692   0038AC  0E00               	movlw	0
  3693   0038AE  6E13               	movwf	___awdiv@quotient^0,c
  3694   0038B0  500F               	movf	___awdiv@divisor^0,w,c
  3695   0038B2  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3696   0038B4  B4D8               	btfsc	status,2,c
  3697   0038B6  EF5F  F01C         	goto	u8431
  3698   0038BA  EF61  F01C         	goto	u8430
  3699   0038BE                     u8431:
  3700   0038BE  EF89  F01C         	goto	l8269
  3701   0038C2                     u8430:
  3702   0038C2  0E01               	movlw	1
  3703   0038C4  6E11               	movwf	___awdiv@counter^0,c
  3704   0038C6  EF69  F01C         	goto	l8255
  3705   0038CA                     l8253:
  3706   0038CA  90D8               	bcf	status,0,c
  3707   0038CC  360F               	rlcf	___awdiv@divisor^0,f,c
  3708   0038CE  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3709   0038D0  2A11               	incf	___awdiv@counter^0,f,c
  3710   0038D2                     l8255:
  3711   0038D2  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3712   0038D4  EF6E  F01C         	goto	u8441
  3713   0038D8  EF70  F01C         	goto	u8440
  3714   0038DC                     u8441:
  3715   0038DC  EF65  F01C         	goto	l8253
  3716   0038E0                     u8440:
  3717   0038E0                     l8257:
  3718   0038E0  90D8               	bcf	status,0,c
  3719   0038E2  3613               	rlcf	___awdiv@quotient^0,f,c
  3720   0038E4  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3721   0038E6  500F               	movf	___awdiv@divisor^0,w,c
  3722   0038E8  5C0D               	subwf	___awdiv@dividend^0,w,c
  3723   0038EA  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3724   0038EC  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3725   0038EE  A0D8               	btfss	status,0,c
  3726   0038F0  EF7C  F01C         	goto	u8451
  3727   0038F4  EF7E  F01C         	goto	u8450
  3728   0038F8                     u8451:
  3729   0038F8  EF83  F01C         	goto	l8265
  3730   0038FC                     u8450:
  3731   0038FC  500F               	movf	___awdiv@divisor^0,w,c
  3732   0038FE  5E0D               	subwf	___awdiv@dividend^0,f,c
  3733   003900  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3734   003902  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3735   003904  8013               	bsf	___awdiv@quotient^0,0,c
  3736   003906                     l8265:
  3737   003906  90D8               	bcf	status,0,c
  3738   003908  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3739   00390A  320F               	rrcf	___awdiv@divisor^0,f,c
  3740   00390C  2E11               	decfsz	___awdiv@counter^0,f,c
  3741   00390E  EF70  F01C         	goto	l8257
  3742   003912                     l8269:
  3743   003912  5012               	movf	___awdiv@sign^0,w,c
  3744   003914  B4D8               	btfsc	status,2,c
  3745   003916  EF8F  F01C         	goto	u8461
  3746   00391A  EF91  F01C         	goto	u8460
  3747   00391E                     u8461:
  3748   00391E  EF95  F01C         	goto	l8273
  3749   003922                     u8460:
  3750   003922  6C13               	negf	___awdiv@quotient^0,c
  3751   003924  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3752   003926  B0D8               	btfsc	status,0,c
  3753   003928  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3754   00392A                     l8273:
  3755   00392A  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3756   00392E  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3757   003932  0012               	return		;funcret
  3758   003934                     __end_of___awdiv:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _memset *****************
  3762 ;; Defined at:
  3763 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  dest            2   12[COMRAM] PTR void 
  3766 ;;		 -> Temp_value(11), 
  3767 ;;  c               2   14[COMRAM] int 
  3768 ;;  n               2   16[COMRAM] unsigned int 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  s               2   22[COMRAM] PTR unsigned char 
  3771 ;;		 -> Temp_value(11), 
  3772 ;;  k               2   20[COMRAM] unsigned int 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2   12[COMRAM] PTR void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3782 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;Total ram usage:       12 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 4
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_convert_short_to_string
  3793 ;;		_convert_byte_to_string
  3794 ;;		_convert_int_to_string
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text18
  3799   002E7A                     __ptext18:
  3800                           	callstack 0
  3801   002E7A                     _memset:
  3802                           	callstack 25
  3803   002E7A  C00D  F017         	movff	memset@dest,memset@s
  3804   002E7E  C00E  F018         	movff	memset@dest+1,memset@s+1
  3805   002E82  5011               	movf	memset@n^0,w,c
  3806   002E84  1012               	iorwf	(memset@n+1)^0,w,c
  3807   002E86  A4D8               	btfss	status,2,c
  3808   002E88  EF48  F017         	goto	u9971
  3809   002E8C  EF4A  F017         	goto	u9970
  3810   002E90                     u9971:
  3811   002E90  EF4C  F017         	goto	l9247
  3812   002E94                     u9970:
  3813   002E94  EFF7  F017         	goto	l2026
  3814   002E98                     l9247:
  3815   002E98  C017  FFD9         	movff	memset@s,fsr2l
  3816   002E9C  C018  FFDA         	movff	memset@s+1,fsr2h
  3817   002EA0  C00F  FFDF         	movff	memset@c,indf2
  3818   002EA4  5011               	movf	memset@n^0,w,c
  3819   002EA6  2417               	addwf	memset@s^0,w,c
  3820   002EA8  6E13               	movwf	??_memset^0,c
  3821   002EAA  5012               	movf	(memset@n+1)^0,w,c
  3822   002EAC  2018               	addwfc	(memset@s+1)^0,w,c
  3823   002EAE  6E14               	movwf	(??_memset+1)^0,c
  3824   002EB0  0EFF               	movlw	255
  3825   002EB2  2413               	addwf	??_memset^0,w,c
  3826   002EB4  6ED9               	movwf	fsr2l,c
  3827   002EB6  0EFF               	movlw	255
  3828   002EB8  2014               	addwfc	(??_memset+1)^0,w,c
  3829   002EBA  6EDA               	movwf	fsr2h,c
  3830   002EBC  C00F  FFDF         	movff	memset@c,indf2
  3831   002EC0  5012               	movf	(memset@n+1)^0,w,c
  3832   002EC2  E107               	bnz	u9981
  3833   002EC4  0E03               	movlw	3
  3834   002EC6  5C11               	subwf	memset@n^0,w,c
  3835   002EC8  B0D8               	btfsc	status,0,c
  3836   002ECA  EF69  F017         	goto	u9981
  3837   002ECE  EF6B  F017         	goto	u9980
  3838   002ED2                     u9981:
  3839   002ED2  EF6D  F017         	goto	l9253
  3840   002ED6                     u9980:
  3841   002ED6  EFF7  F017         	goto	l2026
  3842   002EDA                     l9253:
  3843   002EDA  EE20 F001          	lfsr	2,1
  3844   002EDE  5017               	movf	memset@s^0,w,c
  3845   002EE0  26D9               	addwf	fsr2l,f,c
  3846   002EE2  5018               	movf	(memset@s+1)^0,w,c
  3847   002EE4  22DA               	addwfc	fsr2h,f,c
  3848   002EE6  C00F  FFDF         	movff	memset@c,indf2
  3849   002EEA  EE20 F002          	lfsr	2,2
  3850   002EEE  5017               	movf	memset@s^0,w,c
  3851   002EF0  26D9               	addwf	fsr2l,f,c
  3852   002EF2  5018               	movf	(memset@s+1)^0,w,c
  3853   002EF4  22DA               	addwfc	fsr2h,f,c
  3854   002EF6  C00F  FFDF         	movff	memset@c,indf2
  3855   002EFA  5011               	movf	memset@n^0,w,c
  3856   002EFC  2417               	addwf	memset@s^0,w,c
  3857   002EFE  6E13               	movwf	??_memset^0,c
  3858   002F00  5012               	movf	(memset@n+1)^0,w,c
  3859   002F02  2018               	addwfc	(memset@s+1)^0,w,c
  3860   002F04  6E14               	movwf	(??_memset+1)^0,c
  3861   002F06  0EFE               	movlw	254
  3862   002F08  2413               	addwf	??_memset^0,w,c
  3863   002F0A  6ED9               	movwf	fsr2l,c
  3864   002F0C  0EFF               	movlw	255
  3865   002F0E  2014               	addwfc	(??_memset+1)^0,w,c
  3866   002F10  6EDA               	movwf	fsr2h,c
  3867   002F12  C00F  FFDF         	movff	memset@c,indf2
  3868   002F16  5011               	movf	memset@n^0,w,c
  3869   002F18  2417               	addwf	memset@s^0,w,c
  3870   002F1A  6E13               	movwf	??_memset^0,c
  3871   002F1C  5012               	movf	(memset@n+1)^0,w,c
  3872   002F1E  2018               	addwfc	(memset@s+1)^0,w,c
  3873   002F20  6E14               	movwf	(??_memset+1)^0,c
  3874   002F22  0EFD               	movlw	253
  3875   002F24  2413               	addwf	??_memset^0,w,c
  3876   002F26  6ED9               	movwf	fsr2l,c
  3877   002F28  0EFF               	movlw	255
  3878   002F2A  2014               	addwfc	(??_memset+1)^0,w,c
  3879   002F2C  6EDA               	movwf	fsr2h,c
  3880   002F2E  C00F  FFDF         	movff	memset@c,indf2
  3881   002F32  5012               	movf	(memset@n+1)^0,w,c
  3882   002F34  E107               	bnz	u9991
  3883   002F36  0E07               	movlw	7
  3884   002F38  5C11               	subwf	memset@n^0,w,c
  3885   002F3A  B0D8               	btfsc	status,0,c
  3886   002F3C  EFA2  F017         	goto	u9991
  3887   002F40  EFA4  F017         	goto	u9990
  3888   002F44                     u9991:
  3889   002F44  EFA6  F017         	goto	l9259
  3890   002F48                     u9990:
  3891   002F48  EFF7  F017         	goto	l2026
  3892   002F4C                     l9259:
  3893   002F4C  EE20 F003          	lfsr	2,3
  3894   002F50  5017               	movf	memset@s^0,w,c
  3895   002F52  26D9               	addwf	fsr2l,f,c
  3896   002F54  5018               	movf	(memset@s+1)^0,w,c
  3897   002F56  22DA               	addwfc	fsr2h,f,c
  3898   002F58  C00F  FFDF         	movff	memset@c,indf2
  3899   002F5C  5011               	movf	memset@n^0,w,c
  3900   002F5E  2417               	addwf	memset@s^0,w,c
  3901   002F60  6E13               	movwf	??_memset^0,c
  3902   002F62  5012               	movf	(memset@n+1)^0,w,c
  3903   002F64  2018               	addwfc	(memset@s+1)^0,w,c
  3904   002F66  6E14               	movwf	(??_memset+1)^0,c
  3905   002F68  0EFC               	movlw	252
  3906   002F6A  2413               	addwf	??_memset^0,w,c
  3907   002F6C  6ED9               	movwf	fsr2l,c
  3908   002F6E  0EFF               	movlw	255
  3909   002F70  2014               	addwfc	(??_memset+1)^0,w,c
  3910   002F72  6EDA               	movwf	fsr2h,c
  3911   002F74  C00F  FFDF         	movff	memset@c,indf2
  3912   002F78  5012               	movf	(memset@n+1)^0,w,c
  3913   002F7A  E107               	bnz	u10001
  3914   002F7C  0E09               	movlw	9
  3915   002F7E  5C11               	subwf	memset@n^0,w,c
  3916   002F80  B0D8               	btfsc	status,0,c
  3917   002F82  EFC5  F017         	goto	u10001
  3918   002F86  EFC7  F017         	goto	u10000
  3919   002F8A                     u10001:
  3920   002F8A  EFC9  F017         	goto	l9265
  3921   002F8E                     u10000:
  3922   002F8E  EFF7  F017         	goto	l2026
  3923   002F92                     l9265:
  3924   002F92  C017  F013         	movff	memset@s,??_memset
  3925   002F96  C018  F014         	movff	memset@s+1,??_memset+1
  3926   002F9A  1E13               	comf	??_memset^0,f,c
  3927   002F9C  1E14               	comf	(??_memset+1)^0,f,c
  3928   002F9E  4A13               	infsnz	??_memset^0,f,c
  3929   002FA0  2A14               	incf	(??_memset+1)^0,f,c
  3930   002FA2  0E03               	movlw	3
  3931   002FA4  1413               	andwf	??_memset^0,w,c
  3932   002FA6  6E15               	movwf	memset@k^0,c
  3933   002FA8  6A16               	clrf	(memset@k+1)^0,c
  3934   002FAA  5015               	movf	memset@k^0,w,c
  3935   002FAC  2617               	addwf	memset@s^0,f,c
  3936   002FAE  5016               	movf	(memset@k+1)^0,w,c
  3937   002FB0  2218               	addwfc	(memset@s+1)^0,f,c
  3938   002FB2  5015               	movf	memset@k^0,w,c
  3939   002FB4  5E11               	subwf	memset@n^0,f,c
  3940   002FB6  5016               	movf	(memset@k+1)^0,w,c
  3941   002FB8  5A12               	subwfb	(memset@n+1)^0,f,c
  3942   002FBA  0EFC               	movlw	252
  3943   002FBC  1611               	andwf	memset@n^0,f,c
  3944   002FBE  0EFF               	movlw	255
  3945   002FC0  1612               	andwf	(memset@n+1)^0,f,c
  3946   002FC2  EFEE  F017         	goto	l9273
  3947   002FC6                     l9267:
  3948   002FC6  C017  FFD9         	movff	memset@s,fsr2l
  3949   002FCA  C018  FFDA         	movff	memset@s+1,fsr2h
  3950   002FCE  C00F  FFDF         	movff	memset@c,indf2
  3951   002FD2  0611               	decf	memset@n^0,f,c
  3952   002FD4  A0D8               	btfss	status,0,c
  3953   002FD6  0612               	decf	(memset@n+1)^0,f,c
  3954   002FD8  4A17               	infsnz	memset@s^0,f,c
  3955   002FDA  2A18               	incf	(memset@s+1)^0,f,c
  3956   002FDC                     l9273:
  3957   002FDC  5011               	movf	memset@n^0,w,c
  3958   002FDE  1012               	iorwf	(memset@n+1)^0,w,c
  3959   002FE0  A4D8               	btfss	status,2,c
  3960   002FE2  EFF5  F017         	goto	u10011
  3961   002FE6  EFF7  F017         	goto	u10010
  3962   002FEA                     u10011:
  3963   002FEA  EFE3  F017         	goto	l9267
  3964   002FEE                     u10010:
  3965   002FEE                     l2026:
  3966   002FEE  0012               	return		;funcret
  3967   002FF0                     __end_of_memset:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _application_initialize *****************
  3971 ;; Defined at:
  3972 ;;		line 113 in file "application.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        0 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 9
  3993 ;; This function calls:
  3994 ;;		_ADC_init
  3995 ;;		_CCP_Init
  3996 ;;		_Timer2_init
  3997 ;;		_ecu_initialize
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text19
  4004   004470                     __ptext19:
  4005                           	callstack 0
  4006   004470                     _application_initialize:
  4007                           	callstack 21
  4008   004470                     
  4009                           ;application.c: 115:     ret = ADC_init(&Lm35);
  4010   004470  0EEA               	movlw	low _Lm35
  4011   004472  6E10               	movwf	ADC_init@ADC_obj^0,c
  4012   004474  0E00               	movlw	high _Lm35
  4013   004476  6E11               	movwf	(ADC_init@ADC_obj+1)^0,c
  4014   004478  EC5F  F01A         	call	_ADC_init	;wreg free
  4015   00447C  0100               	movlb	0	; () banked
  4016   00447E  6FFF               	movwf	_ret& (0+255),b
  4017   004480                     
  4018                           ; BSR set to: 0
  4019                           ;application.c: 116:     ret = CCP_Init(&ccp_obj);
  4020   004480  0ED0               	movlw	low _ccp_obj
  4021   004482  6FF3               	movwf	CCP_Init@ccp_obj& (0+255),b
  4022   004484  0E00               	movlw	high _ccp_obj
  4023   004486  6FF4               	movwf	(CCP_Init@ccp_obj+1)& (0+255),b
  4024   004488  EC2F  F008         	call	_CCP_Init	;wreg free
  4025   00448C  0100               	movlb	0	; () banked
  4026   00448E  6FFF               	movwf	_ret& (0+255),b
  4027   004490                     
  4028                           ; BSR set to: 0
  4029                           ;application.c: 117:     ret = Timer2_init(&timer2);
  4030   004490  0EB5               	movlw	low _timer2
  4031   004492  6E0D               	movwf	Timer2_init@TM2_obj^0,c
  4032   004494  0E00               	movlw	high _timer2
  4033   004496  6E0E               	movwf	(Timer2_init@TM2_obj+1)^0,c
  4034   004498  EC08  F01E         	call	_Timer2_init	;wreg free
  4035   00449C  0100               	movlb	0	; () banked
  4036   00449E  6FFF               	movwf	_ret& (0+255),b
  4037                           
  4038                           ;application.c: 118:     ecu_initialize();
  4039   0044A0  EC8C  F022         	call	_ecu_initialize	;wreg free
  4040   0044A4  0012               	return		;funcret
  4041   0044A6                     __end_of_application_initialize:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function _ecu_initialize *****************
  4045 ;; Defined at:
  4046 ;;		line 100 in file "ECU_layer/ecu_initialize.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  ret             1    0        unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 8
  4067 ;; This function calls:
  4068 ;;		_dc_motor_initialize
  4069 ;;		_lcd_8bit_initialize
  4070 ;; This function is called by:
  4071 ;;		_application_initialize
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text20
  4076   004518                     __ptext20:
  4077                           	callstack 0
  4078   004518                     _ecu_initialize:
  4079                           	callstack 21
  4080   004518  0EF1               	movlw	low _motor_1
  4081   00451A  6E1B               	movwf	dc_motor_initialize@dc_motor^0,c
  4082   00451C  0E00               	movlw	high _motor_1
  4083   00451E  6E1C               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
  4084   004520  ECE0  F021         	call	_dc_motor_initialize	;wreg free
  4085   004524  0EE0               	movlw	low _lcd_1
  4086   004526  6E22               	movwf	lcd_8bit_initialize@lcd_obj^0,c
  4087   004528  0E00               	movlw	high _lcd_1
  4088   00452A  6E23               	movwf	(lcd_8bit_initialize@lcd_obj+1)^0,c
  4089   00452C  EC9A  F018         	call	_lcd_8bit_initialize	;wreg free
  4090   004530  0012               	return		;funcret
  4091   004532                     __end_of_ecu_initialize:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _lcd_8bit_initialize *****************
  4095 ;; Defined at:
  4096 ;;		line 226 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  lcd_obj         2   33[COMRAM] PTR const struct .
  4099 ;;		 -> lcd_1(10), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  i               2   36[COMRAM] int 
  4102 ;;  ret             1   38[COMRAM] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      unsigned char 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        6 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 7
  4119 ;; This function calls:
  4120 ;;		_gpio_pin_initialize
  4121 ;;		_lcd_8bit_send_command
  4122 ;; This function is called by:
  4123 ;;		_ecu_initialize
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text21
  4128   003134                     __ptext21:
  4129                           	callstack 0
  4130   003134                     _lcd_8bit_initialize:
  4131                           	callstack 21
  4132   003134                     
  4133                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 229:     if(lcd_obj == ((void*)0))
  4134   003134  5022               	movf	lcd_8bit_initialize@lcd_obj^0,w,c
  4135   003136  1023               	iorwf	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4136   003138  A4D8               	btfss	status,2,c
  4137   00313A  EFA1  F018         	goto	u8811
  4138   00313E  EFA3  F018         	goto	u8810
  4139   003142                     u8811:
  4140   003142  EFA7  F018         	goto	l8495
  4141   003146                     u8810:
  4142   003146                     
  4143                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 230:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 231:    
      +                               ret = (Std_ReturnType)0x00;
  4144   003146  0E00               	movlw	0
  4145   003148  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4146                           
  4147                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 232:     }
  4148   00314A  EF31  F019         	goto	l8531
  4149   00314E                     l8495:
  4150                           
  4151                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 234:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 235:    
      +                               ret = gpio_pin_initialize(&(lcd_obj->lcd_enable));
  4152   00314E  0E08               	movlw	8
  4153   003150  2422               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  4154   003152  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4155   003154  0E00               	movlw	0
  4156   003156  2023               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4157   003158  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4158   00315A  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4159   00315E  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4160                           
  4161                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 236:         ret = gpio_pin_initialize(&(lcd_obj->lcd
      +                          _rs));
  4162   003160  0E09               	movlw	9
  4163   003162  2422               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  4164   003164  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4165   003166  0E00               	movlw	0
  4166   003168  2023               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4167   00316A  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4168   00316C  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4169   003170  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4170   003172                     
  4171                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 238:         for(int i=0;i<8;i++)
  4172   003172  0E00               	movlw	0
  4173   003174  6E26               	movwf	(lcd_8bit_initialize@i+1)^0,c
  4174   003176  0E00               	movlw	0
  4175   003178  6E25               	movwf	lcd_8bit_initialize@i^0,c
  4176   00317A                     l8503:
  4177   00317A  5025               	movf	lcd_8bit_initialize@i^0,w,c
  4178   00317C  2422               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  4179   00317E  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4180   003180  5026               	movf	(lcd_8bit_initialize@i+1)^0,w,c
  4181   003182  2023               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  4182   003184  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4183   003186  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4184   00318A                     
  4185                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 241:         }
  4186   00318A  4A25               	infsnz	lcd_8bit_initialize@i^0,f,c
  4187   00318C  2A26               	incf	(lcd_8bit_initialize@i+1)^0,f,c
  4188   00318E  BE26               	btfsc	(lcd_8bit_initialize@i+1)^0,7,c
  4189   003190  EFD3  F018         	goto	u8821
  4190   003194  5026               	movf	(lcd_8bit_initialize@i+1)^0,w,c
  4191   003196  E109               	bnz	u8820
  4192   003198  0E08               	movlw	8
  4193   00319A  5C25               	subwf	lcd_8bit_initialize@i^0,w,c
  4194   00319C  A0D8               	btfss	status,0,c
  4195   00319E  EFD3  F018         	goto	u8821
  4196   0031A2  EFD5  F018         	goto	u8820
  4197   0031A6                     u8821:
  4198   0031A6  EFBD  F018         	goto	l8503
  4199   0031AA                     u8820:
  4200   0031AA                     
  4201                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 243:         _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
  4202   0031AA  0E1A               	movlw	26
  4203   0031AC  6E24               	movwf	??_lcd_8bit_initialize^0,c
  4204   0031AE  0EF8               	movlw	248
  4205   0031B0                     u10847:
  4206   0031B0  2EE8               	decfsz	wreg,f,c
  4207   0031B2  D7FE               	bra	u10847
  4208   0031B4  2E24               	decfsz	??_lcd_8bit_initialize^0,f,c
  4209   0031B6  D7FC               	bra	u10847
  4210   0031B8  D000               	nop2	
  4211   0031BA  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4212   0031BE  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4213   0031C2  0E38               	movlw	56
  4214   0031C4  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4215   0031C6  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4216   0031CA                     
  4217                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 245:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00.0)));
  4218   0031CA  0E07               	movlw	7
  4219   0031CC  6E24               	movwf	??_lcd_8bit_initialize^0,c
  4220   0031CE  0E7D               	movlw	125
  4221   0031D0                     u10857:
  4222   0031D0  2EE8               	decfsz	wreg,f,c
  4223   0031D2  D7FE               	bra	u10857
  4224   0031D4  2E24               	decfsz	??_lcd_8bit_initialize^0,f,c
  4225   0031D6  D7FC               	bra	u10857
  4226   0031D8  F000               	nop	
  4227   0031DA  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4228   0031DE  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4229   0031E2  0E38               	movlw	56
  4230   0031E4  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4231   0031E6  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4232   0031EA                     
  4233                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 247:         _delay((unsigned long)((150)*(4000000UL/
      +                          4000000.0)));
  4234   0031EA  0E32               	movlw	50
  4235   0031EC                     u10867:
  4236   0031EC  2EE8               	decfsz	wreg,f,c
  4237   0031EE  D7FE               	bra	u10867
  4238   0031F0  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4239   0031F4  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4240   0031F8  0E38               	movlw	56
  4241   0031FA  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4242   0031FC  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4243   003200  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4244   003204  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4245   003208  0E01               	movlw	1
  4246   00320A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4247   00320C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4248   003210  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4249   003214  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4250   003218  0E02               	movlw	2
  4251   00321A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4252   00321C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4253   003220  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4254   003224  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4255   003228  0E06               	movlw	6
  4256   00322A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4257   00322C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4258   003230  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4259   003234  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4260   003238  0E0C               	movlw	12
  4261   00323A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4262   00323C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4263   003240  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4264   003244  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4265   003248  0E38               	movlw	56
  4266   00324A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4267   00324C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4268   003250                     
  4269                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 254:         ret = lcd_8bit_send_command(lcd_obj,0x80
      +                          );
  4270   003250  C022  F01A         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4271   003254  C023  F01B         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4272   003258  0E80               	movlw	128
  4273   00325A  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  4274   00325C  ECF1  F01E         	call	_lcd_8bit_send_command	;wreg free
  4275   003260  6E27               	movwf	lcd_8bit_initialize@ret^0,c
  4276   003262                     l8531:
  4277                           
  4278                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 256:     return ret;
  4279   003262  5027               	movf	lcd_8bit_initialize@ret^0,w,c
  4280   003264  0012               	return		;funcret
  4281   003266                     __end_of_lcd_8bit_initialize:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _lcd_8bit_send_command *****************
  4285 ;; Defined at:
  4286 ;;		line 267 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  lcd_obj         2   25[COMRAM] PTR const struct .
  4289 ;;		 -> lcd_1(10), 
  4290 ;;  command         1   27[COMRAM] unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  i               2   31[COMRAM] int 
  4293 ;;  ret             1   30[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        8 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 6
  4310 ;; This function calls:
  4311 ;;		_gpio_pin_write_logic
  4312 ;;		_lcd_8bit_send_enable
  4313 ;; This function is called by:
  4314 ;;		_lcd_8bit_initialize
  4315 ;;		_lcd_8bit_set_cursor
  4316 ;;		_lcd_8bit_send_custome_chr
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text22
  4321   003DE2                     __ptext22:
  4322                           	callstack 0
  4323   003DE2                     _lcd_8bit_send_command:
  4324                           	callstack 22
  4325   003DE2                     
  4326                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 270:     if(lcd_obj == ((void*)0))
  4327   003DE2  501A               	movf	lcd_8bit_send_command@lcd_obj^0,w,c
  4328   003DE4  101B               	iorwf	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4329   003DE6  A4D8               	btfss	status,2,c
  4330   003DE8  EFF8  F01E         	goto	u8751
  4331   003DEC  EFFA  F01E         	goto	u8750
  4332   003DF0                     u8751:
  4333   003DF0  EFFE  F01E         	goto	l8439
  4334   003DF4                     u8750:
  4335   003DF4                     
  4336                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 271:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 272:    
      +                               ret = (Std_ReturnType)0x00;
  4337   003DF4  0E00               	movlw	0
  4338   003DF6  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4339                           
  4340                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 273:     }
  4341   003DF8  EF3A  F01F         	goto	l8455
  4342   003DFC                     l8439:
  4343   003DFC  0E09               	movlw	9
  4344   003DFE  241A               	addwf	lcd_8bit_send_command@lcd_obj^0,w,c
  4345   003E00  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4346   003E02  0E00               	movlw	0
  4347   003E04  201B               	addwfc	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4348   003E06  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4349   003E08  0E00               	movlw	0
  4350   003E0A  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4351   003E0C  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4352   003E10                     
  4353                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 277:         for(int i=0;i<8;i++)
  4354   003E10  0E00               	movlw	0
  4355   003E12  6E21               	movwf	(lcd_8bit_send_command@i+1)^0,c
  4356   003E14  0E00               	movlw	0
  4357   003E16  6E20               	movwf	lcd_8bit_send_command@i^0,c
  4358   003E18                     l8447:
  4359   003E18  5020               	movf	lcd_8bit_send_command@i^0,w,c
  4360   003E1A  241A               	addwf	lcd_8bit_send_command@lcd_obj^0,w,c
  4361   003E1C  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4362   003E1E  5021               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  4363   003E20  201B               	addwfc	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4364   003E22  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4365   003E24  C020  F01D         	movff	lcd_8bit_send_command@i,??_lcd_8bit_send_command
  4366   003E28  C01C  F01E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  4367   003E2C  2A1D               	incf	??_lcd_8bit_send_command^0,f,c
  4368   003E2E  EF1B  F01F         	goto	u8764
  4369   003E32                     u8765:
  4370   003E32  90D8               	bcf	status,0,c
  4371   003E34  321E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  4372   003E36                     u8764:
  4373   003E36  2E1D               	decfsz	??_lcd_8bit_send_command^0,f,c
  4374   003E38  EF19  F01F         	goto	u8765
  4375   003E3C  501E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  4376   003E3E  0B01               	andlw	1
  4377   003E40  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4378   003E42  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4379   003E46                     
  4380                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 280:         }
  4381   003E46  4A20               	infsnz	lcd_8bit_send_command@i^0,f,c
  4382   003E48  2A21               	incf	(lcd_8bit_send_command@i+1)^0,f,c
  4383   003E4A  BE21               	btfsc	(lcd_8bit_send_command@i+1)^0,7,c
  4384   003E4C  EF31  F01F         	goto	u8771
  4385   003E50  5021               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  4386   003E52  E109               	bnz	u8770
  4387   003E54  0E08               	movlw	8
  4388   003E56  5C20               	subwf	lcd_8bit_send_command@i^0,w,c
  4389   003E58  A0D8               	btfss	status,0,c
  4390   003E5A  EF31  F01F         	goto	u8771
  4391   003E5E  EF33  F01F         	goto	u8770
  4392   003E62                     u8771:
  4393   003E62  EF0C  F01F         	goto	l8447
  4394   003E66                     u8770:
  4395   003E66                     
  4396                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 281:         ret = lcd_8bit_send_enable(lcd_obj);
  4397   003E66  C01A  F017         	movff	lcd_8bit_send_command@lcd_obj,lcd_8bit_send_enable@lcd_obj
  4398   003E6A  C01B  F018         	movff	lcd_8bit_send_command@lcd_obj+1,lcd_8bit_send_enable@lcd_obj+1
  4399   003E6E  EC0D  F021         	call	_lcd_8bit_send_enable	;wreg free
  4400   003E72  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4401   003E74                     l8455:
  4402                           
  4403                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 283:     return ret;
  4404   003E74  501F               	movf	lcd_8bit_send_command@ret^0,w,c
  4405   003E76  0012               	return		;funcret
  4406   003E78                     __end_of_lcd_8bit_send_command:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _lcd_8bit_send_enable *****************
  4410 ;; Defined at:
  4411 ;;		line 534 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  lcd_obj         2   22[COMRAM] PTR const struct .
  4414 ;;		 -> lcd_1(10), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  ret             1   24[COMRAM] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      unsigned char 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;Total ram usage:        3 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 5
  4433 ;; This function calls:
  4434 ;;		_gpio_pin_write_logic
  4435 ;; This function is called by:
  4436 ;;		_lcd_8bit_send_command
  4437 ;;		_lcd_8bit_send_char
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text23
  4442   00421A                     __ptext23:
  4443                           	callstack 0
  4444   00421A                     _lcd_8bit_send_enable:
  4445                           	callstack 22
  4446   00421A                     
  4447                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 537:     if(lcd_obj == ((void*)0))
  4448   00421A  5017               	movf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4449   00421C  1018               	iorwf	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4450   00421E  A4D8               	btfss	status,2,c
  4451   004220  EF14  F021         	goto	u8561
  4452   004224  EF16  F021         	goto	u8560
  4453   004228                     u8561:
  4454   004228  EF1A  F021         	goto	l8337
  4455   00422C                     u8560:
  4456   00422C                     
  4457                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 538:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 539:    
      +                               ret = (Std_ReturnType)0x00;
  4458   00422C  0E00               	movlw	0
  4459   00422E  6E19               	movwf	lcd_8bit_send_enable@ret^0,c
  4460                           
  4461                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 540:     }
  4462   004230  EF32  F021         	goto	l8341
  4463   004234                     l8337:
  4464   004234  0E08               	movlw	8
  4465   004236  2417               	addwf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4466   004238  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4467   00423A  0E00               	movlw	0
  4468   00423C  2018               	addwfc	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4469   00423E  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4470   004240  0E01               	movlw	1
  4471   004242  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4472   004244  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4473   004248                     
  4474                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 544:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  4475   004248  D000               	nop2		;2 cycle nop
  4476   00424A  D000               	nop2		;2 cycle nop
  4477   00424C  F000               	nop	
  4478                           
  4479                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 545:         ret = gpio_pin_write_logic(&(lcd_obj->lc
      +                          d_enable),GPIO_LOW);
  4480   00424E  0E08               	movlw	8
  4481   004250  2417               	addwf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4482   004252  6E0D               	movwf	gpio_pin_write_logic@pin^0,c
  4483   004254  0E00               	movlw	0
  4484   004256  2018               	addwfc	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4485   004258  6E0E               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4486   00425A  0E00               	movlw	0
  4487   00425C  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  4488   00425E  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  4489   004262  6E19               	movwf	lcd_8bit_send_enable@ret^0,c
  4490   004264                     l8341:
  4491                           
  4492                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 548:     return ret;
  4493   004264  5019               	movf	lcd_8bit_send_enable@ret^0,w,c
  4494   004266  0012               	return		;funcret
  4495   004268                     __end_of_lcd_8bit_send_enable:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _dc_motor_initialize *****************
  4499 ;; Defined at:
  4500 ;;		line 20 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  dc_motor        2   26[COMRAM] PTR const struct .
  4503 ;;		 -> motor_1(2), 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  ret             1   28[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      unsigned char 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:        3 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 6
  4522 ;; This function calls:
  4523 ;;		_gpio_pin_initialize
  4524 ;; This function is called by:
  4525 ;;		_ecu_initialize
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text24
  4530   0043C0                     __ptext24:
  4531                           	callstack 0
  4532   0043C0                     _dc_motor_initialize:
  4533                           	callstack 22
  4534   0043C0                     
  4535                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 23:     if(dc_motor == ((void*)0))
  4536   0043C0  501B               	movf	dc_motor_initialize@dc_motor^0,w,c
  4537   0043C2  101C               	iorwf	(dc_motor_initialize@dc_motor+1)^0,w,c
  4538   0043C4  A4D8               	btfss	status,2,c
  4539   0043C6  EFE7  F021         	goto	u8861
  4540   0043CA  EFE9  F021         	goto	u8860
  4541   0043CE                     u8861:
  4542   0043CE  EFED  F021         	goto	l8567
  4543   0043D2                     u8860:
  4544   0043D2                     
  4545                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 24:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 25:    
      +                               ret = (Std_ReturnType)0x00;
  4546   0043D2  0E00               	movlw	0
  4547   0043D4  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4548                           
  4549                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 26:     }
  4550   0043D6  EFFD  F021         	goto	l8569
  4551   0043DA                     l8567:
  4552                           
  4553                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 28:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 31:    
      +                               ret = gpio_pin_initialize(&(dc_motor->dc_motor_pin[0]));
  4554   0043DA  C01B  F017         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialize@pin
  4555   0043DE  C01C  F018         	movff	dc_motor_initialize@dc_motor+1,gpio_pin_initialize@pin+1
  4556   0043E2  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4557   0043E6  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4558                           
  4559                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 32:         ret = gpio_pin_initialize(&(dc_motor->dc
      +                          _motor_pin[1]));
  4560   0043E8  0E01               	movlw	1
  4561   0043EA  241B               	addwf	dc_motor_initialize@dc_motor^0,w,c
  4562   0043EC  6E17               	movwf	gpio_pin_initialize@pin^0,c
  4563   0043EE  0E00               	movlw	0
  4564   0043F0  201C               	addwfc	(dc_motor_initialize@dc_motor+1)^0,w,c
  4565   0043F2  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4566   0043F4  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  4567   0043F8  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4568   0043FA                     l8569:
  4569                           
  4570                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 34:     return ret;
  4571   0043FA  501D               	movf	dc_motor_initialize@ret^0,w,c
  4572   0043FC  0012               	return		;funcret
  4573   0043FE                     __end_of_dc_motor_initialize:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _Timer2_init *****************
  4577 ;; Defined at:
  4578 ;;		line 16 in file "MCAL_layer/Timer2/Timer2.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  TM2_obj         2   12[COMRAM] PTR const struct .
  4581 ;;		 -> timer2(5), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  ret             1   15[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;Total ram usage:        4 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 4
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_application_initialize
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text25
  4608   003C10                     __ptext25:
  4609                           	callstack 0
  4610   003C10                     _Timer2_init:
  4611                           	callstack 25
  4612   003C10                     
  4613                           ;MCAL_layer/Timer2/Timer2.c: 16: Std_ReturnType Timer2_init(const Timer2_t *TM2_obj);MCA
      +                          L_layer/Timer2/Timer2.c: 17: {;MCAL_layer/Timer2/Timer2.c: 18:     Std_ReturnType ret = 
      +                          (Std_ReturnType)0x01;
  4614   003C10  0E01               	movlw	1
  4615   003C12  6E10               	movwf	Timer2_init@ret^0,c
  4616   003C14                     
  4617                           ;MCAL_layer/Timer2/Timer2.c: 19:     if(TM2_obj == ((void*)0))
  4618   003C14  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4619   003C16  100E               	iorwf	(Timer2_init@TM2_obj+1)^0,w,c
  4620   003C18  A4D8               	btfss	status,2,c
  4621   003C1A  EF11  F01E         	goto	u6311
  4622   003C1E  EF13  F01E         	goto	u6310
  4623   003C22                     u6311:
  4624   003C22  EF17  F01E         	goto	l1209
  4625   003C26                     u6310:
  4626   003C26                     
  4627                           ;MCAL_layer/Timer2/Timer2.c: 20:     {;MCAL_layer/Timer2/Timer2.c: 21:         ret = (St
      +                          d_ReturnType)0x00;
  4628   003C26  0E00               	movlw	0
  4629   003C28  6E10               	movwf	Timer2_init@ret^0,c
  4630                           
  4631                           ;MCAL_layer/Timer2/Timer2.c: 22:     }
  4632   003C2A  EF56  F01E         	goto	l6641
  4633   003C2E                     l1209:
  4634                           
  4635                           ;MCAL_layer/Timer2/Timer2.c: 24:     {;MCAL_layer/Timer2/Timer2.c: 25:         (T2CONbit
      +                          s.TMR2ON = 0);
  4636   003C2E  94CA               	bcf	202,2,c	;volatile
  4637   003C30                     
  4638                           ;MCAL_layer/Timer2/Timer2.c: 26:         (T2CONbits.T2CKPS = TM2_obj->prescaler_value);
  4639   003C30  EE20 F004          	lfsr	2,4
  4640   003C34  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4641   003C36  26D9               	addwf	fsr2l,f,c
  4642   003C38  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4643   003C3A  22DA               	addwfc	fsr2h,f,c
  4644   003C3C  50DF               	movf	223,w,c
  4645   003C3E  0B03               	andlw	3
  4646   003C40  6E0F               	movwf	??_Timer2_init^0,c
  4647   003C42  50CA               	movf	202,w,c	;volatile
  4648   003C44  180F               	xorwf	??_Timer2_init^0,w,c
  4649   003C46  0BFC               	andlw	-4
  4650   003C48  180F               	xorwf	??_Timer2_init^0,w,c
  4651   003C4A  6ECA               	movwf	202,c	;volatile
  4652                           
  4653                           ;MCAL_layer/Timer2/Timer2.c: 27:         (T2CONbits.TOUTPS = TM2_obj->postcaler_value);
  4654   003C4C  EE20 F004          	lfsr	2,4
  4655   003C50  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4656   003C52  26D9               	addwf	fsr2l,f,c
  4657   003C54  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4658   003C56  22DA               	addwfc	fsr2h,f,c
  4659   003C58  30DF               	rrcf	223,w,c
  4660   003C5A  32E8               	rrcf	wreg,f,c
  4661   003C5C  0B0F               	andlw	15
  4662   003C5E  6E0F               	movwf	??_Timer2_init^0,c
  4663   003C60  460F               	rlncf	??_Timer2_init^0,f,c
  4664   003C62  460F               	rlncf	??_Timer2_init^0,f,c
  4665   003C64  460F               	rlncf	??_Timer2_init^0,f,c
  4666   003C66  50CA               	movf	202,w,c	;volatile
  4667   003C68  180F               	xorwf	??_Timer2_init^0,w,c
  4668   003C6A  0B87               	andlw	-121
  4669   003C6C  180F               	xorwf	??_Timer2_init^0,w,c
  4670   003C6E  6ECA               	movwf	202,c	;volatile
  4671                           
  4672                           ;MCAL_layer/Timer2/Timer2.c: 28:         TMR2 = TM2_obj->preload_value;
  4673   003C70  EE20 F003          	lfsr	2,3
  4674   003C74  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4675   003C76  26D9               	addwf	fsr2l,f,c
  4676   003C78  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4677   003C7A  22DA               	addwfc	fsr2h,f,c
  4678   003C7C  50DF               	movf	indf2,w,c
  4679   003C7E  6ECC               	movwf	204,c	;volatile
  4680                           
  4681                           ;MCAL_layer/Timer2/Timer2.c: 29:         timer2_preload = TM2_obj->preload_value;
  4682   003C80  EE20 F003          	lfsr	2,3
  4683   003C84  500D               	movf	Timer2_init@TM2_obj^0,w,c
  4684   003C86  26D9               	addwf	fsr2l,f,c
  4685   003C88  500E               	movf	(Timer2_init@TM2_obj+1)^0,w,c
  4686   003C8A  22DA               	addwfc	fsr2h,f,c
  4687   003C8C  50DF               	movf	indf2,w,c
  4688   003C8E  0100               	movlb	0	; () banked
  4689   003C90  6FB1               	movwf	_timer2_preload& (0+255),b
  4690   003C92                     
  4691                           ; BSR set to: 0
  4692                           ;MCAL_layer/Timer2/Timer2.c: 31:         (PIE1bits.TMR2IE = 1);
  4693   003C92  829D               	bsf	157,1,c	;volatile
  4694   003C94                     
  4695                           ; BSR set to: 0
  4696                           ;MCAL_layer/Timer2/Timer2.c: 32:         (PIR1bits.TMR2IF = 0);
  4697   003C94  929E               	bcf	158,1,c	;volatile
  4698   003C96                     
  4699                           ; BSR set to: 0
  4700                           ;MCAL_layer/Timer2/Timer2.c: 49:         (INTCONbits.GIE = 1);
  4701   003C96  8EF2               	bsf	242,7,c	;volatile
  4702   003C98                     
  4703                           ; BSR set to: 0
  4704                           ;MCAL_layer/Timer2/Timer2.c: 50:         (INTCONbits.PEIE = 1);
  4705   003C98  8CF2               	bsf	242,6,c	;volatile
  4706   003C9A                     
  4707                           ; BSR set to: 0
  4708                           ;MCAL_layer/Timer2/Timer2.c: 52:         Timer2InterruptHandeler = TM2_obj->Timer2CallBa
      +                          ck;
  4709   003C9A  C00D  FFD9         	movff	Timer2_init@TM2_obj,fsr2l
  4710   003C9E  C00E  FFDA         	movff	Timer2_init@TM2_obj+1,fsr2h
  4711   003CA2  CFDE F09E          	movff	postinc2,_Timer2InterruptHandeler
  4712   003CA6  CFDD F09F          	movff	postdec2,_Timer2InterruptHandeler+1
  4713   003CAA                     
  4714                           ; BSR set to: 0
  4715                           ;MCAL_layer/Timer2/Timer2.c: 54:         (T2CONbits.TMR2ON = 1);
  4716   003CAA  84CA               	bsf	202,2,c	;volatile
  4717   003CAC                     l6641:
  4718                           
  4719                           ;MCAL_layer/Timer2/Timer2.c: 56:     return ret;
  4720   003CAC  5010               	movf	Timer2_init@ret^0,w,c
  4721   003CAE  0012               	return		;funcret
  4722   003CB0                     __end_of_Timer2_init:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _CCP_Init *****************
  4726 ;; Defined at:
  4727 ;;		line 19 in file "MCAL_layer/CCP/CCP1.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  ccp_obj         2    0[BANK0 ] PTR const struct .
  4730 ;;		 -> ccp_obj(16), 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  ret             1    8[BANK1 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      unsigned char 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:       13 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 6
  4749 ;; This function calls:
  4750 ;;		_CCP_Timer_config
  4751 ;;		___fladd
  4752 ;;		___fldiv
  4753 ;;		___flmul
  4754 ;;		___fltol
  4755 ;;		___xxtofl
  4756 ;;		_gpio_pin_initialize
  4757 ;; This function is called by:
  4758 ;;		_application_initialize
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text26
  4763   00105E                     __ptext26:
  4764                           	callstack 0
  4765   00105E                     _CCP_Init:
  4766                           	callstack 23
  4767   00105E                     
  4768                           ;MCAL_layer/CCP/CCP1.c: 22:     if(ccp_obj == ((void*)0))
  4769   00105E  0100               	movlb	0	; () banked
  4770   001060  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4771   001062  11F4               	iorwf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4772   001064  A4D8               	btfss	status,2,c
  4773   001066  EF37  F008         	goto	u10021
  4774   00106A  EF39  F008         	goto	u10020
  4775   00106E                     u10021:
  4776   00106E  EF3E  F008         	goto	l9299
  4777   001072                     u10020:
  4778   001072                     
  4779                           ; BSR set to: 0
  4780                           ;MCAL_layer/CCP/CCP1.c: 23:     {;MCAL_layer/CCP/CCP1.c: 24:         ret = (Std_ReturnTy
      +                          pe)0x00;
  4781   001072  0E00               	movlw	0
  4782   001074  0101               	movlb	1	; () banked
  4783   001076  6F55               	movwf	CCP_Init@ret& (0+255),b
  4784                           
  4785                           ;MCAL_layer/CCP/CCP1.c: 25:     }
  4786   001078  EFDC  F00A         	goto	l9411
  4787   00107C                     l9299:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;MCAL_layer/CCP/CCP1.c: 27:     {;MCAL_layer/CCP/CCP1.c: 28:         (CCP1CONbits.CCP1M 
      +                          = (uint8)0);
  4791   00107C  0EF0               	movlw	-16
  4792   00107E  16BD               	andwf	189,f,c	;volatile
  4793   001080                     
  4794                           ; BSR set to: 0
  4795                           ;MCAL_layer/CCP/CCP1.c: 29:         if(ccp_obj->cpp_mode == CCP_CAPTURE_MODE_SELECT)
  4796   001080  C0F3  FFD9         	movff	CCP_Init@ccp_obj,fsr2l
  4797   001084  C0F4  FFDA         	movff	CCP_Init@ccp_obj+1,fsr2h
  4798   001088  04DE               	decf	postinc2,w,c
  4799   00108A  A4D8               	btfss	status,2,c
  4800   00108C  EF4A  F008         	goto	u10031
  4801   001090  EF4C  F008         	goto	u10030
  4802   001094                     u10031:
  4803   001094  EFEB  F008         	goto	l9337
  4804   001098                     u10030:
  4805   001098                     
  4806                           ; BSR set to: 0
  4807                           ;MCAL_layer/CCP/CCP1.c: 30:         {;MCAL_layer/CCP/CCP1.c: 31:             CCP_Timer_c
      +                          onfig(ccp_obj);
  4808   001098  C0F3  F00D         	movff	CCP_Init@ccp_obj,CCP_Timer_config@ccp_obj
  4809   00109C  C0F4  F00E         	movff	CCP_Init@ccp_obj+1,CCP_Timer_config@ccp_obj+1
  4810   0010A0  EC8A  F020         	call	_CCP_Timer_config	;wreg free
  4811   0010A4                     
  4812                           ;MCAL_layer/CCP/CCP1.c: 32:             if(ccp_obj->ccp_inst == CCP1_inst)
  4813   0010A4  0100               	movlb	0	; () banked
  4814   0010A6  EE20 F001          	lfsr	2,1
  4815   0010AA  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4816   0010AC  26D9               	addwf	fsr2l,f,c
  4817   0010AE  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4818   0010B0  22DA               	addwfc	fsr2h,f,c
  4819   0010B2  50DF               	movf	indf2,w,c
  4820   0010B4  A4D8               	btfss	status,2,c
  4821   0010B6  EF5F  F008         	goto	u10041
  4822   0010BA  EF61  F008         	goto	u10040
  4823   0010BE                     u10041:
  4824   0010BE  EFA0  F008         	goto	l9321
  4825   0010C2                     u10040:
  4826   0010C2  EF7D  F008         	goto	l9319
  4827   0010C6                     l9309:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;MCAL_layer/CCP/CCP1.c: 37:                         (CCP1CONbits.CCP1M = (uint8)4);
  4831   0010C6  50BD               	movf	189,w,c	;volatile
  4832   0010C8  0BF0               	andlw	-16
  4833   0010CA  0904               	iorlw	4
  4834   0010CC  6EBD               	movwf	189,c	;volatile
  4835                           
  4836                           ;MCAL_layer/CCP/CCP1.c: 38:                         break;
  4837   0010CE  EF96  F00A         	goto	l9397
  4838   0010D2                     l9311:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;MCAL_layer/CCP/CCP1.c: 40:                         (CCP1CONbits.CCP1M = (uint8)5);
  4842   0010D2  50BD               	movf	189,w,c	;volatile
  4843   0010D4  0BF0               	andlw	-16
  4844   0010D6  0905               	iorlw	5
  4845   0010D8  6EBD               	movwf	189,c	;volatile
  4846                           
  4847                           ;MCAL_layer/CCP/CCP1.c: 41:                         break;
  4848   0010DA  EF96  F00A         	goto	l9397
  4849   0010DE                     l9313:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;MCAL_layer/CCP/CCP1.c: 43:                         (CCP1CONbits.CCP1M = (uint8)6);
  4853   0010DE  50BD               	movf	189,w,c	;volatile
  4854   0010E0  0BF0               	andlw	-16
  4855   0010E2  0906               	iorlw	6
  4856   0010E4  6EBD               	movwf	189,c	;volatile
  4857                           
  4858                           ;MCAL_layer/CCP/CCP1.c: 44:                         break;
  4859   0010E6  EF96  F00A         	goto	l9397
  4860   0010EA                     l9315:
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;MCAL_layer/CCP/CCP1.c: 46:                         (CCP1CONbits.CCP1M = (uint8)7);
  4864   0010EA  50BD               	movf	189,w,c	;volatile
  4865   0010EC  0BF0               	andlw	-16
  4866   0010EE  0907               	iorlw	7
  4867   0010F0  6EBD               	movwf	189,c	;volatile
  4868                           
  4869                           ;MCAL_layer/CCP/CCP1.c: 47:                         break;
  4870   0010F2  EF96  F00A         	goto	l9397
  4871   0010F6                     l9317:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;MCAL_layer/CCP/CCP1.c: 50:                 }
  4875   0010F6  EF96  F00A         	goto	l9397
  4876   0010FA                     l9319:
  4877                           
  4878                           ; BSR set to: 0
  4879   0010FA  EE20 F002          	lfsr	2,2
  4880   0010FE  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4881   001100  26D9               	addwf	fsr2l,f,c
  4882   001102  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4883   001104  22DA               	addwfc	fsr2h,f,c
  4884   001106  50DF               	movf	indf2,w,c
  4885   001108  6FF5               	movwf	??_CCP_Init& (0+255),b
  4886   00110A  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  4887                           
  4888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4889                           ; Switch size 1, requested type "simple"
  4890                           ; Number of cases is 1, Range of values is 0 to 0
  4891                           ; switch strategies available:
  4892                           ; Name         Instructions Cycles
  4893                           ; simple_byte            4     3 (average)
  4894                           ;	Chosen strategy is simple_byte
  4895   00110C  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  4896   00110E  0A00               	xorlw	0	; case 0
  4897   001110  B4D8               	btfsc	status,2,c
  4898   001112  EF8D  F008         	goto	l10329
  4899   001116  EF7B  F008         	goto	l9317
  4900   00111A                     l10329:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ; Switch size 1, requested type "simple"
  4904                           ; Number of cases is 4, Range of values is 4 to 7
  4905                           ; switch strategies available:
  4906                           ; Name         Instructions Cycles
  4907                           ; simple_byte           13     7 (average)
  4908                           ;	Chosen strategy is simple_byte
  4909   00111A  51F5               	movf	??_CCP_Init& (0+255),w,b
  4910   00111C  0A04               	xorlw	4	; case 4
  4911   00111E  B4D8               	btfsc	status,2,c
  4912   001120  EF63  F008         	goto	l9309
  4913   001124  0A01               	xorlw	1	; case 5
  4914   001126  B4D8               	btfsc	status,2,c
  4915   001128  EF69  F008         	goto	l9311
  4916   00112C  0A03               	xorlw	3	; case 6
  4917   00112E  B4D8               	btfsc	status,2,c
  4918   001130  EF6F  F008         	goto	l9313
  4919   001134  0A01               	xorlw	1	; case 7
  4920   001136  B4D8               	btfsc	status,2,c
  4921   001138  EF75  F008         	goto	l9315
  4922   00113C  EF7B  F008         	goto	l9317
  4923   001140                     l9321:
  4924                           
  4925                           ; BSR set to: 0
  4926   001140  EE20 F001          	lfsr	2,1
  4927   001144  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4928   001146  26D9               	addwf	fsr2l,f,c
  4929   001148  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4930   00114A  22DA               	addwfc	fsr2h,f,c
  4931   00114C  04DE               	decf	postinc2,w,c
  4932   00114E  A4D8               	btfss	status,2,c
  4933   001150  EFAC  F008         	goto	u10051
  4934   001154  EFAE  F008         	goto	u10050
  4935   001158                     u10051:
  4936   001158  EF96  F00A         	goto	l9397
  4937   00115C                     u10050:
  4938   00115C  EFC8  F008         	goto	l9335
  4939   001160                     l9325:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;MCAL_layer/CCP/CCP1.c: 57:                         (CCP2CONbits.CCP2M = (uint8)4);
  4943   001160  50BA               	movf	186,w,c	;volatile
  4944   001162  0BF0               	andlw	-16
  4945   001164  0904               	iorlw	4
  4946   001166  6EBA               	movwf	186,c	;volatile
  4947                           
  4948                           ;MCAL_layer/CCP/CCP1.c: 58:                         break;
  4949   001168  EF96  F00A         	goto	l9397
  4950   00116C                     l9327:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;MCAL_layer/CCP/CCP1.c: 60:                         (CCP2CONbits.CCP2M = (uint8)5);
  4954   00116C  50BA               	movf	186,w,c	;volatile
  4955   00116E  0BF0               	andlw	-16
  4956   001170  0905               	iorlw	5
  4957   001172  6EBA               	movwf	186,c	;volatile
  4958                           
  4959                           ;MCAL_layer/CCP/CCP1.c: 61:                         break;
  4960   001174  EF96  F00A         	goto	l9397
  4961   001178                     l9329:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;MCAL_layer/CCP/CCP1.c: 63:                         (CCP2CONbits.CCP2M = (uint8)6);
  4965   001178  50BA               	movf	186,w,c	;volatile
  4966   00117A  0BF0               	andlw	-16
  4967   00117C  0906               	iorlw	6
  4968   00117E  6EBA               	movwf	186,c	;volatile
  4969                           
  4970                           ;MCAL_layer/CCP/CCP1.c: 64:                         break;
  4971   001180  EF96  F00A         	goto	l9397
  4972   001184                     l9331:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;MCAL_layer/CCP/CCP1.c: 66:                         (CCP2CONbits.CCP2M = (uint8)7);
  4976   001184  50BA               	movf	186,w,c	;volatile
  4977   001186  0BF0               	andlw	-16
  4978   001188  0907               	iorlw	7
  4979   00118A  6EBA               	movwf	186,c	;volatile
  4980                           
  4981                           ;MCAL_layer/CCP/CCP1.c: 67:                         break;
  4982   00118C  EF96  F00A         	goto	l9397
  4983   001190                     l9335:
  4984                           
  4985                           ; BSR set to: 0
  4986   001190  EE20 F002          	lfsr	2,2
  4987   001194  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  4988   001196  26D9               	addwf	fsr2l,f,c
  4989   001198  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  4990   00119A  22DA               	addwfc	fsr2h,f,c
  4991   00119C  50DF               	movf	indf2,w,c
  4992   00119E  6FF5               	movwf	??_CCP_Init& (0+255),b
  4993   0011A0  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  4994                           
  4995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4996                           ; Switch size 1, requested type "simple"
  4997                           ; Number of cases is 1, Range of values is 0 to 0
  4998                           ; switch strategies available:
  4999                           ; Name         Instructions Cycles
  5000                           ; simple_byte            4     3 (average)
  5001                           ;	Chosen strategy is simple_byte
  5002   0011A2  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  5003   0011A4  0A00               	xorlw	0	; case 0
  5004   0011A6  B4D8               	btfsc	status,2,c
  5005   0011A8  EFD8  F008         	goto	l10331
  5006   0011AC  EF7B  F008         	goto	l9317
  5007   0011B0                     l10331:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ; Switch size 1, requested type "simple"
  5011                           ; Number of cases is 4, Range of values is 4 to 7
  5012                           ; switch strategies available:
  5013                           ; Name         Instructions Cycles
  5014                           ; simple_byte           13     7 (average)
  5015                           ;	Chosen strategy is simple_byte
  5016   0011B0  51F5               	movf	??_CCP_Init& (0+255),w,b
  5017   0011B2  0A04               	xorlw	4	; case 4
  5018   0011B4  B4D8               	btfsc	status,2,c
  5019   0011B6  EFB0  F008         	goto	l9325
  5020   0011BA  0A01               	xorlw	1	; case 5
  5021   0011BC  B4D8               	btfsc	status,2,c
  5022   0011BE  EFB6  F008         	goto	l9327
  5023   0011C2  0A03               	xorlw	3	; case 6
  5024   0011C4  B4D8               	btfsc	status,2,c
  5025   0011C6  EFBC  F008         	goto	l9329
  5026   0011CA  0A01               	xorlw	1	; case 7
  5027   0011CC  B4D8               	btfsc	status,2,c
  5028   0011CE  EFC2  F008         	goto	l9331
  5029   0011D2  EF7B  F008         	goto	l9317
  5030   0011D6                     l9337:
  5031                           
  5032                           ; BSR set to: 0
  5033   0011D6  C0F3  FFD9         	movff	CCP_Init@ccp_obj,fsr2l
  5034   0011DA  C0F4  FFDA         	movff	CCP_Init@ccp_obj+1,fsr2h
  5035   0011DE  50DF               	movf	indf2,w,c
  5036   0011E0  A4D8               	btfss	status,2,c
  5037   0011E2  EFF5  F008         	goto	u10061
  5038   0011E6  EFF7  F008         	goto	u10060
  5039   0011EA                     u10061:
  5040   0011EA  EFA8  F009         	goto	l9377
  5041   0011EE                     u10060:
  5042   0011EE                     
  5043                           ; BSR set to: 0
  5044                           ;MCAL_layer/CCP/CCP1.c: 75:         {;MCAL_layer/CCP/CCP1.c: 76:             CCP_Timer_c
      +                          onfig(ccp_obj);
  5045   0011EE  C0F3  F00D         	movff	CCP_Init@ccp_obj,CCP_Timer_config@ccp_obj
  5046   0011F2  C0F4  F00E         	movff	CCP_Init@ccp_obj+1,CCP_Timer_config@ccp_obj+1
  5047   0011F6  EC8A  F020         	call	_CCP_Timer_config	;wreg free
  5048   0011FA                     
  5049                           ;MCAL_layer/CCP/CCP1.c: 77:             if(ccp_obj->ccp_inst == CCP1_inst)
  5050   0011FA  0100               	movlb	0	; () banked
  5051   0011FC  EE20 F001          	lfsr	2,1
  5052   001200  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5053   001202  26D9               	addwf	fsr2l,f,c
  5054   001204  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5055   001206  22DA               	addwfc	fsr2h,f,c
  5056   001208  50DF               	movf	indf2,w,c
  5057   00120A  A4D8               	btfss	status,2,c
  5058   00120C  EF0A  F009         	goto	u10071
  5059   001210  EF0C  F009         	goto	u10070
  5060   001214                     u10071:
  5061   001214  EF53  F009         	goto	l9359
  5062   001218                     u10070:
  5063   001218  EF2C  F009         	goto	l9357
  5064   00121C                     l9345:
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;MCAL_layer/CCP/CCP1.c: 82:                         (CCP1CONbits.CCP1M = (uint8)2);
  5068   00121C  50BD               	movf	189,w,c	;volatile
  5069   00121E  0BF0               	andlw	-16
  5070   001220  0902               	iorlw	2
  5071   001222  6EBD               	movwf	189,c	;volatile
  5072                           
  5073                           ;MCAL_layer/CCP/CCP1.c: 83:                         break;
  5074   001224  EF96  F00A         	goto	l9397
  5075   001228                     l9347:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;MCAL_layer/CCP/CCP1.c: 85:                         (CCP1CONbits.CCP1M = (uint8)8);
  5079   001228  50BD               	movf	189,w,c	;volatile
  5080   00122A  0BF0               	andlw	-16
  5081   00122C  0908               	iorlw	8
  5082   00122E  6EBD               	movwf	189,c	;volatile
  5083                           
  5084                           ;MCAL_layer/CCP/CCP1.c: 86:                         break;
  5085   001230  EF96  F00A         	goto	l9397
  5086   001234                     l9349:
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;MCAL_layer/CCP/CCP1.c: 88:                         (CCP1CONbits.CCP1M = (uint8)9);
  5090   001234  50BD               	movf	189,w,c	;volatile
  5091   001236  0BF0               	andlw	-16
  5092   001238  0909               	iorlw	9
  5093   00123A  6EBD               	movwf	189,c	;volatile
  5094                           
  5095                           ;MCAL_layer/CCP/CCP1.c: 89:                         break;
  5096   00123C  EF96  F00A         	goto	l9397
  5097   001240                     l9351:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;MCAL_layer/CCP/CCP1.c: 91:                         (CCP1CONbits.CCP1M = (uint8)10);
  5101   001240  50BD               	movf	189,w,c	;volatile
  5102   001242  0BF0               	andlw	-16
  5103   001244  090A               	iorlw	10
  5104   001246  6EBD               	movwf	189,c	;volatile
  5105                           
  5106                           ;MCAL_layer/CCP/CCP1.c: 92:                         break;
  5107   001248  EF96  F00A         	goto	l9397
  5108   00124C                     l9353:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;MCAL_layer/CCP/CCP1.c: 94:                         (CCP1CONbits.CCP1M = (uint8)11);
  5112   00124C  50BD               	movf	189,w,c	;volatile
  5113   00124E  0BF0               	andlw	-16
  5114   001250  090B               	iorlw	11
  5115   001252  6EBD               	movwf	189,c	;volatile
  5116                           
  5117                           ;MCAL_layer/CCP/CCP1.c: 95:                         break;
  5118   001254  EF96  F00A         	goto	l9397
  5119   001258                     l9357:
  5120                           
  5121                           ; BSR set to: 0
  5122   001258  EE20 F002          	lfsr	2,2
  5123   00125C  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5124   00125E  26D9               	addwf	fsr2l,f,c
  5125   001260  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5126   001262  22DA               	addwfc	fsr2h,f,c
  5127   001264  50DF               	movf	indf2,w,c
  5128   001266  6FF5               	movwf	??_CCP_Init& (0+255),b
  5129   001268  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  5130                           
  5131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5132                           ; Switch size 1, requested type "simple"
  5133                           ; Number of cases is 1, Range of values is 0 to 0
  5134                           ; switch strategies available:
  5135                           ; Name         Instructions Cycles
  5136                           ; simple_byte            4     3 (average)
  5137                           ;	Chosen strategy is simple_byte
  5138   00126A  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  5139   00126C  0A00               	xorlw	0	; case 0
  5140   00126E  B4D8               	btfsc	status,2,c
  5141   001270  EF3C  F009         	goto	l10333
  5142   001274  EF7B  F008         	goto	l9317
  5143   001278                     l10333:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ; Switch size 1, requested type "simple"
  5147                           ; Number of cases is 5, Range of values is 2 to 11
  5148                           ; switch strategies available:
  5149                           ; Name         Instructions Cycles
  5150                           ; simple_byte           16     9 (average)
  5151                           ;	Chosen strategy is simple_byte
  5152   001278  51F5               	movf	??_CCP_Init& (0+255),w,b
  5153   00127A  0A02               	xorlw	2	; case 2
  5154   00127C  B4D8               	btfsc	status,2,c
  5155   00127E  EF0E  F009         	goto	l9345
  5156   001282  0A0A               	xorlw	10	; case 8
  5157   001284  B4D8               	btfsc	status,2,c
  5158   001286  EF14  F009         	goto	l9347
  5159   00128A  0A01               	xorlw	1	; case 9
  5160   00128C  B4D8               	btfsc	status,2,c
  5161   00128E  EF1A  F009         	goto	l9349
  5162   001292  0A03               	xorlw	3	; case 10
  5163   001294  B4D8               	btfsc	status,2,c
  5164   001296  EF20  F009         	goto	l9351
  5165   00129A  0A01               	xorlw	1	; case 11
  5166   00129C  B4D8               	btfsc	status,2,c
  5167   00129E  EF26  F009         	goto	l9353
  5168   0012A2  EF7B  F008         	goto	l9317
  5169   0012A6                     l9359:
  5170                           
  5171                           ; BSR set to: 0
  5172   0012A6  EE20 F001          	lfsr	2,1
  5173   0012AA  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5174   0012AC  26D9               	addwf	fsr2l,f,c
  5175   0012AE  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5176   0012B0  22DA               	addwfc	fsr2h,f,c
  5177   0012B2  04DE               	decf	postinc2,w,c
  5178   0012B4  A4D8               	btfss	status,2,c
  5179   0012B6  EF5F  F009         	goto	u10081
  5180   0012BA  EF61  F009         	goto	u10080
  5181   0012BE                     u10081:
  5182   0012BE  EF96  F00A         	goto	l9397
  5183   0012C2                     u10080:
  5184   0012C2  EF81  F009         	goto	l9375
  5185   0012C6                     l9363:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;MCAL_layer/CCP/CCP1.c: 105:                         (CCP2CONbits.CCP2M = (uint8)2);
  5189   0012C6  50BA               	movf	186,w,c	;volatile
  5190   0012C8  0BF0               	andlw	-16
  5191   0012CA  0902               	iorlw	2
  5192   0012CC  6EBA               	movwf	186,c	;volatile
  5193                           
  5194                           ;MCAL_layer/CCP/CCP1.c: 106:                         break;
  5195   0012CE  EF96  F00A         	goto	l9397
  5196   0012D2                     l9365:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;MCAL_layer/CCP/CCP1.c: 108:                         (CCP2CONbits.CCP2M = (uint8)8);
  5200   0012D2  50BA               	movf	186,w,c	;volatile
  5201   0012D4  0BF0               	andlw	-16
  5202   0012D6  0908               	iorlw	8
  5203   0012D8  6EBA               	movwf	186,c	;volatile
  5204                           
  5205                           ;MCAL_layer/CCP/CCP1.c: 109:                         break;
  5206   0012DA  EF96  F00A         	goto	l9397
  5207   0012DE                     l9367:
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;MCAL_layer/CCP/CCP1.c: 111:                         (CCP2CONbits.CCP2M = (uint8)9);
  5211   0012DE  50BA               	movf	186,w,c	;volatile
  5212   0012E0  0BF0               	andlw	-16
  5213   0012E2  0909               	iorlw	9
  5214   0012E4  6EBA               	movwf	186,c	;volatile
  5215                           
  5216                           ;MCAL_layer/CCP/CCP1.c: 112:                         break;
  5217   0012E6  EF96  F00A         	goto	l9397
  5218   0012EA                     l9369:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;MCAL_layer/CCP/CCP1.c: 114:                         (CCP2CONbits.CCP2M = (uint8)10);
  5222   0012EA  50BA               	movf	186,w,c	;volatile
  5223   0012EC  0BF0               	andlw	-16
  5224   0012EE  090A               	iorlw	10
  5225   0012F0  6EBA               	movwf	186,c	;volatile
  5226                           
  5227                           ;MCAL_layer/CCP/CCP1.c: 115:                         break;
  5228   0012F2  EF96  F00A         	goto	l9397
  5229   0012F6                     l9371:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;MCAL_layer/CCP/CCP1.c: 117:                         (CCP2CONbits.CCP2M = (uint8)11);
  5233   0012F6  50BA               	movf	186,w,c	;volatile
  5234   0012F8  0BF0               	andlw	-16
  5235   0012FA  090B               	iorlw	11
  5236   0012FC  6EBA               	movwf	186,c	;volatile
  5237                           
  5238                           ;MCAL_layer/CCP/CCP1.c: 118:                         break;
  5239   0012FE  EF96  F00A         	goto	l9397
  5240   001302                     l9375:
  5241                           
  5242                           ; BSR set to: 0
  5243   001302  EE20 F002          	lfsr	2,2
  5244   001306  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5245   001308  26D9               	addwf	fsr2l,f,c
  5246   00130A  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5247   00130C  22DA               	addwfc	fsr2h,f,c
  5248   00130E  50DF               	movf	indf2,w,c
  5249   001310  6FF5               	movwf	??_CCP_Init& (0+255),b
  5250   001312  6BF6               	clrf	(??_CCP_Init+1)& (0+255),b
  5251                           
  5252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5253                           ; Switch size 1, requested type "simple"
  5254                           ; Number of cases is 1, Range of values is 0 to 0
  5255                           ; switch strategies available:
  5256                           ; Name         Instructions Cycles
  5257                           ; simple_byte            4     3 (average)
  5258                           ;	Chosen strategy is simple_byte
  5259   001314  51F6               	movf	(??_CCP_Init+1)& (0+255),w,b
  5260   001316  0A00               	xorlw	0	; case 0
  5261   001318  B4D8               	btfsc	status,2,c
  5262   00131A  EF91  F009         	goto	l10335
  5263   00131E  EF7B  F008         	goto	l9317
  5264   001322                     l10335:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ; Switch size 1, requested type "simple"
  5268                           ; Number of cases is 5, Range of values is 2 to 11
  5269                           ; switch strategies available:
  5270                           ; Name         Instructions Cycles
  5271                           ; simple_byte           16     9 (average)
  5272                           ;	Chosen strategy is simple_byte
  5273   001322  51F5               	movf	??_CCP_Init& (0+255),w,b
  5274   001324  0A02               	xorlw	2	; case 2
  5275   001326  B4D8               	btfsc	status,2,c
  5276   001328  EF63  F009         	goto	l9363
  5277   00132C  0A0A               	xorlw	10	; case 8
  5278   00132E  B4D8               	btfsc	status,2,c
  5279   001330  EF69  F009         	goto	l9365
  5280   001334  0A01               	xorlw	1	; case 9
  5281   001336  B4D8               	btfsc	status,2,c
  5282   001338  EF6F  F009         	goto	l9367
  5283   00133C  0A03               	xorlw	3	; case 10
  5284   00133E  B4D8               	btfsc	status,2,c
  5285   001340  EF75  F009         	goto	l9369
  5286   001344  0A01               	xorlw	1	; case 11
  5287   001346  B4D8               	btfsc	status,2,c
  5288   001348  EF7B  F009         	goto	l9371
  5289   00134C  EF7B  F008         	goto	l9317
  5290   001350                     l9377:
  5291                           
  5292                           ; BSR set to: 0
  5293   001350  C0F3  FFD9         	movff	CCP_Init@ccp_obj,fsr2l
  5294   001354  C0F4  FFDA         	movff	CCP_Init@ccp_obj+1,fsr2h
  5295   001358  0E02               	movlw	2
  5296   00135A  18DE               	xorwf	postinc2,w,c
  5297   00135C  A4D8               	btfss	status,2,c
  5298   00135E  EFB3  F009         	goto	u10091
  5299   001362  EFB5  F009         	goto	u10090
  5300   001366                     u10091:
  5301   001366  EF96  F00A         	goto	l9397
  5302   00136A                     u10090:
  5303   00136A                     
  5304                           ; BSR set to: 0
  5305                           ;MCAL_layer/CCP/CCP1.c: 126:         {;MCAL_layer/CCP/CCP1.c: 129:             if(ccp_ob
      +                          j->ccp_spacific_mode == (uint8)12)
  5306   00136A  EE20 F002          	lfsr	2,2
  5307   00136E  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5308   001370  26D9               	addwf	fsr2l,f,c
  5309   001372  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5310   001374  22DA               	addwfc	fsr2h,f,c
  5311   001376  0E0C               	movlw	12
  5312   001378  18DE               	xorwf	postinc2,w,c
  5313   00137A  A4D8               	btfss	status,2,c
  5314   00137C  EFC2  F009         	goto	u10101
  5315   001380  EFC4  F009         	goto	u10100
  5316   001384                     u10101:
  5317   001384  EF7B  F008         	goto	l9317
  5318   001388                     u10100:
  5319   001388                     
  5320                           ; BSR set to: 0
  5321                           ;MCAL_layer/CCP/CCP1.c: 130:             {;MCAL_layer/CCP/CCP1.c: 131:                 i
      +                          f(ccp_obj->ccp_inst == CCP1_inst)
  5322   001388  EE20 F001          	lfsr	2,1
  5323   00138C  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5324   00138E  26D9               	addwf	fsr2l,f,c
  5325   001390  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5326   001392  22DA               	addwfc	fsr2h,f,c
  5327   001394  50DF               	movf	indf2,w,c
  5328   001396  A4D8               	btfss	status,2,c
  5329   001398  EFD0  F009         	goto	u10111
  5330   00139C  EFD2  F009         	goto	u10110
  5331   0013A0                     u10111:
  5332   0013A0  EFD8  F009         	goto	l9385
  5333   0013A4                     u10110:
  5334   0013A4                     
  5335                           ; BSR set to: 0
  5336                           ;MCAL_layer/CCP/CCP1.c: 132:                 {;MCAL_layer/CCP/CCP1.c: 133:              
      +                                 (CCP1CONbits.CCP1M = (uint8)12);
  5337   0013A4  50BD               	movf	189,w,c	;volatile
  5338   0013A6  0BF0               	andlw	-16
  5339   0013A8  090C               	iorlw	12
  5340   0013AA  6EBD               	movwf	189,c	;volatile
  5341                           
  5342                           ;MCAL_layer/CCP/CCP1.c: 134:                 }
  5343   0013AC  EFEA  F009         	goto	l9389
  5344   0013B0                     l9385:
  5345                           
  5346                           ; BSR set to: 0
  5347   0013B0  EE20 F001          	lfsr	2,1
  5348   0013B4  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5349   0013B6  26D9               	addwf	fsr2l,f,c
  5350   0013B8  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5351   0013BA  22DA               	addwfc	fsr2h,f,c
  5352   0013BC  04DE               	decf	postinc2,w,c
  5353   0013BE  A4D8               	btfss	status,2,c
  5354   0013C0  EFE4  F009         	goto	u10121
  5355   0013C4  EFE6  F009         	goto	u10120
  5356   0013C8                     u10121:
  5357   0013C8  EFEA  F009         	goto	l9389
  5358   0013CC                     u10120:
  5359   0013CC                     
  5360                           ; BSR set to: 0
  5361                           ;MCAL_layer/CCP/CCP1.c: 136:                 {;MCAL_layer/CCP/CCP1.c: 137:              
      +                                 (CCP2CONbits.CCP2M = (uint8)12);
  5362   0013CC  50BA               	movf	186,w,c	;volatile
  5363   0013CE  0BF0               	andlw	-16
  5364   0013D0  090C               	iorlw	12
  5365   0013D2  6EBA               	movwf	186,c	;volatile
  5366   0013D4                     l9389:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;MCAL_layer/CCP/CCP1.c: 139:                 PR2 = (uint8)(((float)4000000UL / ((float)c
      +                          cp_obj->PWM_Freq * 4.0 * (float)ccp_obj->Timer2_Prescaler_value *
  5370   0013D4  0E00               	movlw	0
  5371   0013D6  6E1F               	movwf	___flmul@a^0,c
  5372   0013D8  0E00               	movlw	0
  5373   0013DA  6E20               	movwf	(___flmul@a+1)^0,c
  5374   0013DC  0E80               	movlw	128
  5375   0013DE  6E21               	movwf	(___flmul@a+2)^0,c
  5376   0013E0  0E40               	movlw	64
  5377   0013E2  6E22               	movwf	(___flmul@a+3)^0,c
  5378   0013E4  EE20 F00B          	lfsr	2,11
  5379   0013E8  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5380   0013EA  26D9               	addwf	fsr2l,f,c
  5381   0013EC  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5382   0013EE  22DA               	addwfc	fsr2h,f,c
  5383   0013F0  CFDE F00D          	movff	postinc2,___xxtofl@val
  5384   0013F4  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5385   0013F8  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5386   0013FC  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5387   001400  0E00               	movlw	0
  5388   001402  EC98  F015         	call	___xxtofl
  5389   001406  C00D  F01B         	movff	?___xxtofl,___flmul@b
  5390   00140A  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  5391   00140E  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  5392   001412  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  5393   001416  EC3F  F00D         	call	___flmul	;wreg free
  5394   00141A  C01B  F14D         	movff	?___flmul,_CCP_Init$4244
  5395   00141E  C01C  F14E         	movff	?___flmul+1,_CCP_Init$4244+1
  5396   001422  C01D  F14F         	movff	?___flmul+2,_CCP_Init$4244+2
  5397   001426  C01E  F150         	movff	?___flmul+3,_CCP_Init$4244+3
  5398   00142A                     
  5399                           ;MCAL_layer/CCP/CCP1.c: 139:                 PR2 = (uint8)(((float)4000000UL / ((float)c
      +                          cp_obj->PWM_Freq * 4.0 * (float)ccp_obj->Timer2_Prescaler_value *
  5400   00142A  0100               	movlb	0	; () banked
  5401   00142C  EE20 F00F          	lfsr	2,15
  5402   001430  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5403   001432  26D9               	addwf	fsr2l,f,c
  5404   001434  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5405   001436  22DA               	addwfc	fsr2h,f,c
  5406   001438  50DF               	movf	223,w,c
  5407   00143A  0B03               	andlw	3
  5408   00143C  6FF5               	movwf	??_CCP_Init& (0+255),b
  5409   00143E  51F5               	movf	??_CCP_Init& (0+255),w,b
  5410   001440  6E0D               	movwf	___xxtofl@val^0,c
  5411   001442  6A0E               	clrf	(___xxtofl@val+1)^0,c
  5412   001444  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5413   001446  6A10               	clrf	(___xxtofl@val+3)^0,c
  5414   001448  0E00               	movlw	0
  5415   00144A  EC98  F015         	call	___xxtofl
  5416   00144E  C00D  F01F         	movff	?___xxtofl,___flmul@a
  5417   001452  C00E  F020         	movff	?___xxtofl+1,___flmul@a+1
  5418   001456  C00F  F021         	movff	?___xxtofl+2,___flmul@a+2
  5419   00145A  C010  F022         	movff	?___xxtofl+3,___flmul@a+3
  5420   00145E  C14D  F01B         	movff	_CCP_Init$4244,___flmul@b
  5421   001462  C14E  F01C         	movff	_CCP_Init$4244+1,___flmul@b+1
  5422   001466  C14F  F01D         	movff	_CCP_Init$4244+2,___flmul@b+2
  5423   00146A  C150  F01E         	movff	_CCP_Init$4244+3,___flmul@b+3
  5424   00146E  EC3F  F00D         	call	___flmul	;wreg free
  5425   001472  C01B  F151         	movff	?___flmul,_CCP_Init$4245
  5426   001476  C01C  F152         	movff	?___flmul+1,_CCP_Init$4245+1
  5427   00147A  C01D  F153         	movff	?___flmul+2,_CCP_Init$4245+2
  5428   00147E  C01E  F154         	movff	?___flmul+3,_CCP_Init$4245+3
  5429   001482                     
  5430                           ;MCAL_layer/CCP/CCP1.c: 139:                 PR2 = (uint8)(((float)4000000UL / ((float)c
      +                          cp_obj->PWM_Freq * 4.0 * (float)ccp_obj->Timer2_Prescaler_value *
  5431   001482  0E00               	movlw	0
  5432   001484  6E51               	movwf	___fladd@a^0,c
  5433   001486  0E00               	movlw	0
  5434   001488  6E52               	movwf	(___fladd@a+1)^0,c
  5435   00148A  0E80               	movlw	128
  5436   00148C  6E53               	movwf	(___fladd@a+2)^0,c
  5437   00148E  0EBF               	movlw	191
  5438   001490  6E54               	movwf	(___fladd@a+3)^0,c
  5439   001492  0100               	movlb	0	; () banked
  5440   001494  EE20 F00F          	lfsr	2,15
  5441   001498  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5442   00149A  26D9               	addwf	fsr2l,f,c
  5443   00149C  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5444   00149E  22DA               	addwfc	fsr2h,f,c
  5445   0014A0  30DF               	rrcf	223,w,c
  5446   0014A2  32E8               	rrcf	wreg,f,c
  5447   0014A4  0B0F               	andlw	15
  5448   0014A6  6FF5               	movwf	??_CCP_Init& (0+255),b
  5449   0014A8  51F5               	movf	??_CCP_Init& (0+255),w,b
  5450   0014AA  6E0D               	movwf	___xxtofl@val^0,c
  5451   0014AC  6A0E               	clrf	(___xxtofl@val+1)^0,c
  5452   0014AE  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5453   0014B0  6A10               	clrf	(___xxtofl@val+3)^0,c
  5454   0014B2  0E00               	movlw	0
  5455   0014B4  EC98  F015         	call	___xxtofl
  5456   0014B8  C00D  F01F         	movff	?___xxtofl,___flmul@a
  5457   0014BC  C00E  F020         	movff	?___xxtofl+1,___flmul@a+1
  5458   0014C0  C00F  F021         	movff	?___xxtofl+2,___flmul@a+2
  5459   0014C4  C010  F022         	movff	?___xxtofl+3,___flmul@a+3
  5460   0014C8  C151  F01B         	movff	_CCP_Init$4245,___flmul@b
  5461   0014CC  C152  F01C         	movff	_CCP_Init$4245+1,___flmul@b+1
  5462   0014D0  C153  F01D         	movff	_CCP_Init$4245+2,___flmul@b+2
  5463   0014D4  C154  F01E         	movff	_CCP_Init$4245+3,___flmul@b+3
  5464   0014D8  EC3F  F00D         	call	___flmul	;wreg free
  5465   0014DC  C01B  F038         	movff	?___flmul,___fldiv@a
  5466   0014E0  C01C  F039         	movff	?___flmul+1,___fldiv@a+1
  5467   0014E4  C01D  F03A         	movff	?___flmul+2,___fldiv@a+2
  5468   0014E8  C01E  F03B         	movff	?___flmul+3,___fldiv@a+3
  5469   0014EC  0E00               	movlw	0
  5470   0014EE  6E34               	movwf	___fldiv@b^0,c
  5471   0014F0  0E24               	movlw	36
  5472   0014F2  6E35               	movwf	(___fldiv@b+1)^0,c
  5473   0014F4  0E74               	movlw	116
  5474   0014F6  6E36               	movwf	(___fldiv@b+2)^0,c
  5475   0014F8  0E4A               	movlw	74
  5476   0014FA  6E37               	movwf	(___fldiv@b+3)^0,c
  5477   0014FC  EC54  F00F         	call	___fldiv	;wreg free
  5478   001500  C034  F04D         	movff	?___fldiv,___fladd@b
  5479   001504  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  5480   001508  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  5481   00150C  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  5482   001510  ECDF  F00A         	call	___fladd	;wreg free
  5483   001514  C04D  F05D         	movff	?___fladd,___fltol@f1
  5484   001518  C04E  F05E         	movff	?___fladd+1,___fltol@f1+1
  5485   00151C  C04F  F05F         	movff	?___fladd+2,___fltol@f1+2
  5486   001520  C050  F060         	movff	?___fladd+3,___fltol@f1+3
  5487   001524  ECE2  F01A         	call	___fltol	;wreg free
  5488   001528  505D               	movf	?___fltol^0,w,c
  5489   00152A  6ECB               	movwf	203,c	;volatile
  5490   00152C                     l9397:
  5491                           
  5492                           ;MCAL_layer/CCP/CCP1.c: 149:         ret = gpio_pin_initialize(&(ccp_obj->pin));
  5493   00152C  0E03               	movlw	3
  5494   00152E  0100               	movlb	0	; () banked
  5495   001530  25F3               	addwf	CCP_Init@ccp_obj& (0+255),w,b
  5496   001532  6E17               	movwf	gpio_pin_initialize@pin^0,c
  5497   001534  0E00               	movlw	0
  5498   001536  21F4               	addwfc	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5499   001538  6E18               	movwf	(gpio_pin_initialize@pin+1)^0,c
  5500   00153A  EC21  F020         	call	_gpio_pin_initialize	;wreg free
  5501   00153E  0101               	movlb	1	; () banked
  5502   001540  6F55               	movwf	CCP_Init@ret& (0+255),b
  5503   001542                     
  5504                           ; BSR set to: 1
  5505                           ;MCAL_layer/CCP/CCP1.c: 150:         if(ccp_obj->ccp_inst == CCP1_inst)
  5506   001542  0100               	movlb	0	; () banked
  5507   001544  EE20 F001          	lfsr	2,1
  5508   001548  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5509   00154A  26D9               	addwf	fsr2l,f,c
  5510   00154C  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5511   00154E  22DA               	addwfc	fsr2h,f,c
  5512   001550  50DF               	movf	indf2,w,c
  5513   001552  A4D8               	btfss	status,2,c
  5514   001554  EFAE  F00A         	goto	u10131
  5515   001558  EFB0  F00A         	goto	u10130
  5516   00155C                     u10131:
  5517   00155C  EFC0  F00A         	goto	l9405
  5518   001560                     u10130:
  5519   001560                     
  5520                           ; BSR set to: 0
  5521                           ;MCAL_layer/CCP/CCP1.c: 151:         {;MCAL_layer/CCP/CCP1.c: 153:         (PIE1bits.CCP
      +                          1IE = 1);
  5522   001560  849D               	bsf	157,2,c	;volatile
  5523                           
  5524                           ;MCAL_layer/CCP/CCP1.c: 154:         (PIR1bits.CCP1IF = 0);
  5525   001562  949E               	bcf	158,2,c	;volatile
  5526                           
  5527                           ;MCAL_layer/CCP/CCP1.c: 171:         (INTCONbits.GIE = 1);
  5528   001564  8EF2               	bsf	242,7,c	;volatile
  5529                           
  5530                           ;MCAL_layer/CCP/CCP1.c: 172:         (INTCONbits.PEIE = 1);
  5531   001566  8CF2               	bsf	242,6,c	;volatile
  5532   001568                     
  5533                           ; BSR set to: 0
  5534                           ;MCAL_layer/CCP/CCP1.c: 174:         CCP1_InterruptHandeler = ccp_obj->CCP1CallBack;
  5535   001568  EE20 F005          	lfsr	2,5
  5536   00156C  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5537   00156E  26D9               	addwf	fsr2l,f,c
  5538   001570  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5539   001572  22DA               	addwfc	fsr2h,f,c
  5540   001574  CFDE F0AC          	movff	postinc2,_CCP1_InterruptHandeler
  5541   001578  CFDD F0AD          	movff	postdec2,_CCP1_InterruptHandeler+1
  5542                           
  5543                           ;MCAL_layer/CCP/CCP1.c: 176:         }
  5544   00157C  EFDC  F00A         	goto	l9411
  5545   001580                     l9405:
  5546                           
  5547                           ; BSR set to: 0
  5548   001580  EE20 F001          	lfsr	2,1
  5549   001584  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5550   001586  26D9               	addwf	fsr2l,f,c
  5551   001588  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5552   00158A  22DA               	addwfc	fsr2h,f,c
  5553   00158C  04DE               	decf	postinc2,w,c
  5554   00158E  A4D8               	btfss	status,2,c
  5555   001590  EFCC  F00A         	goto	u10141
  5556   001594  EFCE  F00A         	goto	u10140
  5557   001598                     u10141:
  5558   001598  EFDC  F00A         	goto	l9411
  5559   00159C                     u10140:
  5560   00159C                     
  5561                           ; BSR set to: 0
  5562                           ;MCAL_layer/CCP/CCP1.c: 178:         {;MCAL_layer/CCP/CCP1.c: 180:         (PIE2bits.CCP
      +                          2IE = 1);
  5563   00159C  80A0               	bsf	160,0,c	;volatile
  5564                           
  5565                           ;MCAL_layer/CCP/CCP1.c: 181:         (PIR2bits.CCP2IF = 0);
  5566   00159E  90A1               	bcf	161,0,c	;volatile
  5567                           
  5568                           ;MCAL_layer/CCP/CCP1.c: 198:         (INTCONbits.GIE = 1);
  5569   0015A0  8EF2               	bsf	242,7,c	;volatile
  5570                           
  5571                           ;MCAL_layer/CCP/CCP1.c: 199:         (INTCONbits.PEIE = 1);
  5572   0015A2  8CF2               	bsf	242,6,c	;volatile
  5573   0015A4                     
  5574                           ; BSR set to: 0
  5575                           ;MCAL_layer/CCP/CCP1.c: 201:         CCP2_InterruptHandeler = ccp_obj->CCP2CallBack;
  5576   0015A4  EE20 F008          	lfsr	2,8
  5577   0015A8  51F3               	movf	CCP_Init@ccp_obj& (0+255),w,b
  5578   0015AA  26D9               	addwf	fsr2l,f,c
  5579   0015AC  51F4               	movf	(CCP_Init@ccp_obj+1)& (0+255),w,b
  5580   0015AE  22DA               	addwfc	fsr2h,f,c
  5581   0015B0  CFDE F0AA          	movff	postinc2,_CCP2_InterruptHandeler
  5582   0015B4  CFDD F0AB          	movff	postdec2,_CCP2_InterruptHandeler+1
  5583   0015B8                     l9411:
  5584                           
  5585                           ;MCAL_layer/CCP/CCP1.c: 206:     return ret;
  5586   0015B8  0101               	movlb	1	; () banked
  5587   0015BA  5155               	movf	CCP_Init@ret& (0+255),w,b
  5588   0015BC                     
  5589                           ; BSR set to: 1
  5590   0015BC  0012               	return		;funcret
  5591   0015BE                     __end_of_CCP_Init:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function _gpio_pin_initialize *****************
  5595 ;; Defined at:
  5596 ;;		line 146 in file "MCAL_layer/GPIO/hal_gpio.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  pin             2   22[COMRAM] PTR const struct .
  5599 ;;		 -> ccp_obj(16), motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), 
  5600 ;;		 -> lcd_1(10), led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  ret             1   25[COMRAM] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      unsigned char 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;Total ram usage:        4 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; Hardware stack levels required when called: 5
  5619 ;; This function calls:
  5620 ;;		_gpio_pin_direction_initialize
  5621 ;;		_gpio_pin_write_logic
  5622 ;; This function is called by:
  5623 ;;		_lcd_8bit_initialize
  5624 ;;		_dc_motor_initialize
  5625 ;;		_CCP_Init
  5626 ;;		_lcd_4bit_initialize
  5627 ;;		_relay_initialize
  5628 ;;		_keypad_initialize
  5629 ;;		_led_initialize
  5630 ;;		_initialize_seven_segment
  5631 ;;		_Interrupt_RBx_Init
  5632 ;;		_Interrupt_INTx_Pin_init
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text27
  5637   004042                     __ptext27:
  5638                           	callstack 0
  5639   004042                     _gpio_pin_initialize:
  5640                           	callstack 22
  5641   004042                     
  5642                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     if((pin==((void*)0))||(pin->pin>=8))
  5643   004042  5017               	movf	gpio_pin_initialize@pin^0,w,c
  5644   004044  1018               	iorwf	(gpio_pin_initialize@pin+1)^0,w,c
  5645   004046  B4D8               	btfsc	status,2,c
  5646   004048  EF28  F020         	goto	u8731
  5647   00404C  EF2A  F020         	goto	u8730
  5648   004050                     u8731:
  5649   004050  EF3B  F020         	goto	l8425
  5650   004054                     u8730:
  5651   004054  C017  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  5652   004058  C018  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  5653   00405C  30DF               	rrcf	223,w,c
  5654   00405E  32E8               	rrcf	wreg,f,c
  5655   004060  32E8               	rrcf	wreg,f,c
  5656   004062  0B07               	andlw	7
  5657   004064  6E19               	movwf	??_gpio_pin_initialize^0,c
  5658   004066  0E07               	movlw	7
  5659   004068  6419               	cpfsgt	??_gpio_pin_initialize^0,c
  5660   00406A  EF39  F020         	goto	u8741
  5661   00406E  EF3B  F020         	goto	u8740
  5662   004072                     u8741:
  5663   004072  EF3F  F020         	goto	l8427
  5664   004076                     u8740:
  5665   004076                     l8425:
  5666                           
  5667                           ;MCAL_layer/GPIO/hal_gpio.c: 150:     {;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = (
      +                          Std_ReturnType)0x00;
  5668   004076  0E00               	movlw	0
  5669   004078  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  5670                           
  5671                           ;MCAL_layer/GPIO/hal_gpio.c: 152:     }
  5672   00407A  EF55  F020         	goto	l8429
  5673   00407E                     l8427:
  5674                           
  5675                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     {;MCAL_layer/GPIO/hal_gpio.c: 155:         ret = g
      +                          pio_pin_direction_initialize(pin);
  5676   00407E  C017  F00D         	movff	gpio_pin_initialize@pin,gpio_pin_direction_initialize@pin
  5677   004082  C018  F00E         	movff	gpio_pin_initialize@pin+1,gpio_pin_direction_initialize@pin+1
  5678   004086  ECF8  F017         	call	_gpio_pin_direction_initialize	;wreg free
  5679   00408A  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  5680                           
  5681                           ;MCAL_layer/GPIO/hal_gpio.c: 156:         ret = gpio_pin_write_logic(pin,pin->logic);
  5682   00408C  C017  F00D         	movff	gpio_pin_initialize@pin,gpio_pin_write_logic@pin
  5683   004090  C018  F00E         	movff	gpio_pin_initialize@pin+1,gpio_pin_write_logic@pin+1
  5684   004094  C017  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  5685   004098  C018  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  5686   00409C  0E00               	movlw	0
  5687   00409E  BEDF               	btfsc	indf2,7,c
  5688   0040A0  0E01               	movlw	1
  5689   0040A2  6E0F               	movwf	gpio_pin_write_logic@log^0,c
  5690   0040A4  ECC9  F019         	call	_gpio_pin_write_logic	;wreg free
  5691   0040A8  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  5692   0040AA                     l8429:
  5693                           
  5694                           ;MCAL_layer/GPIO/hal_gpio.c: 158:     return ret;
  5695   0040AA  501A               	movf	gpio_pin_initialize@ret^0,w,c
  5696   0040AC  0012               	return		;funcret
  5697   0040AE                     __end_of_gpio_pin_initialize:
  5698                           	callstack 0
  5699                           
  5700 ;; *************** function _gpio_pin_write_logic *****************
  5701 ;; Defined at:
  5702 ;;		line 96 in file "MCAL_layer/GPIO/hal_gpio.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  pin             2   12[COMRAM] PTR const struct .
  5705 ;;		 -> ccp_obj(16), motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), 
  5706 ;;		 -> lcd_1(10), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  5707 ;;		 -> relay_turn_off@relay_pin(1), relay_turn_on@relay_pin(1), relay_initialize@relay_pin(1), 
  5708 ;;  log             1   14[COMRAM] enum E3137
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ret             1   21[COMRAM] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      unsigned char 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:       10 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 4
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_lcd_8bit_send_command
  5731 ;;		_lcd_8bit_send_char
  5732 ;;		_lcd_8bit_send_enable
  5733 ;;		_dc_motor_move_right
  5734 ;;		_gpio_pin_initialize
  5735 ;;		_lcd_4bit_send_command
  5736 ;;		_lcd_4bit_send_char
  5737 ;;		_lcd_send_4bit
  5738 ;;		_lcd_4bit_send_enable
  5739 ;;		_dc_motor_move_left
  5740 ;;		_dc_motor_stop
  5741 ;;		_relay_turn_on
  5742 ;;		_relay_turn_off
  5743 ;;		_keypad_get_value
  5744 ;;		_led_turn_on
  5745 ;;		_led_turn_off
  5746 ;;		_seven_segment_write_number
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text28
  5751   003392                     __ptext28:
  5752                           	callstack 0
  5753   003392                     _gpio_pin_write_logic:
  5754                           	callstack 22
  5755   003392                     
  5756                           ;MCAL_layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_write_logic(const pin_config *p
      +                          in,logic_t log);MCAL_layer/GPIO/hal_gpio.c: 97: {;MCAL_layer/GPIO/hal_gpio.c: 98:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
  5757   003392  0E01               	movlw	1
  5758   003394  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  5759   003396                     
  5760                           ;MCAL_layer/GPIO/hal_gpio.c: 99:     if((pin==((void*)0))||(pin->pin>=8))
  5761   003396  500D               	movf	gpio_pin_write_logic@pin^0,w,c
  5762   003398  100E               	iorwf	(gpio_pin_write_logic@pin+1)^0,w,c
  5763   00339A  B4D8               	btfsc	status,2,c
  5764   00339C  EFD2  F019         	goto	u8371
  5765   0033A0  EFD4  F019         	goto	u8370
  5766   0033A4                     u8371:
  5767   0033A4  EFE5  F019         	goto	l8215
  5768   0033A8                     u8370:
  5769   0033A8  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5770   0033AC  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5771   0033B0  30DF               	rrcf	223,w,c
  5772   0033B2  32E8               	rrcf	wreg,f,c
  5773   0033B4  32E8               	rrcf	wreg,f,c
  5774   0033B6  0B07               	andlw	7
  5775   0033B8  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5776   0033BA  0E07               	movlw	7
  5777   0033BC  6410               	cpfsgt	??_gpio_pin_write_logic^0,c
  5778   0033BE  EFE3  F019         	goto	u8381
  5779   0033C2  EFE5  F019         	goto	u8380
  5780   0033C6                     u8381:
  5781   0033C6  EF48  F01A         	goto	l8223
  5782   0033CA                     u8380:
  5783   0033CA                     l8215:
  5784                           
  5785                           ;MCAL_layer/GPIO/hal_gpio.c: 100:     {;MCAL_layer/GPIO/hal_gpio.c: 101:         ret = (
      +                          Std_ReturnType)0x00;
  5786   0033CA  0E00               	movlw	0
  5787   0033CC  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  5788                           
  5789                           ;MCAL_layer/GPIO/hal_gpio.c: 102:     }
  5790   0033CE  EF5D  F01A         	goto	l8225
  5791   0033D2                     l8217:
  5792                           
  5793                           ;MCAL_layer/GPIO/hal_gpio.c: 108:                 (*lat_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  5794   0033D2  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5795   0033D6  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5796   0033DA  30DF               	rrcf	223,w,c
  5797   0033DC  32E8               	rrcf	wreg,f,c
  5798   0033DE  32E8               	rrcf	wreg,f,c
  5799   0033E0  0B07               	andlw	7
  5800   0033E2  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5801   0033E4  0E01               	movlw	1
  5802   0033E6  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5803   0033E8  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  5804   0033EA  EFF9  F019         	goto	u8394
  5805   0033EE                     u8395:
  5806   0033EE  90D8               	bcf	status,0,c
  5807   0033F0  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5808   0033F2                     u8394:
  5809   0033F2  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  5810   0033F4  EFF7  F019         	goto	u8395
  5811   0033F8  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5812   0033FA  0AFF               	xorlw	255
  5813   0033FC  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5814   0033FE  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5815   003402  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5816   003406  50DF               	movf	223,w,c
  5817   003408  0B07               	andlw	7
  5818   00340A  6E13               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5819   00340C  5013               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5820   00340E  0D02               	mullw	2
  5821   003410  0EBC               	movlw	low _lat_registers
  5822   003412  24F3               	addwf	243,w,c
  5823   003414  6ED9               	movwf	fsr2l,c
  5824   003416  0E00               	movlw	high _lat_registers
  5825   003418  20F4               	addwfc	prodh,w,c
  5826   00341A  6EDA               	movwf	fsr2h,c
  5827   00341C  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+4
  5828   003420  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+5
  5829   003424  C014  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5830   003428  C015  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5831   00342C  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5832   00342E  16DF               	andwf	indf2,f,c
  5833                           
  5834                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                 break;
  5835   003430  EF5D  F01A         	goto	l8225
  5836   003434                     l8219:
  5837                           
  5838                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                 (*lat_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  5839   003434  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5840   003438  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5841   00343C  30DF               	rrcf	223,w,c
  5842   00343E  32E8               	rrcf	wreg,f,c
  5843   003440  32E8               	rrcf	wreg,f,c
  5844   003442  0B07               	andlw	7
  5845   003444  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5846   003446  0E01               	movlw	1
  5847   003448  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5848   00344A  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  5849   00344C  EF2A  F01A         	goto	u8404
  5850   003450                     u8405:
  5851   003450  90D8               	bcf	status,0,c
  5852   003452  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5853   003454                     u8404:
  5854   003454  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  5855   003456  EF28  F01A         	goto	u8405
  5856   00345A  C00D  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  5857   00345E  C00E  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  5858   003462  50DF               	movf	223,w,c
  5859   003464  0B07               	andlw	7
  5860   003466  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5861   003468  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5862   00346A  0D02               	mullw	2
  5863   00346C  0EBC               	movlw	low _lat_registers
  5864   00346E  24F3               	addwf	243,w,c
  5865   003470  6ED9               	movwf	fsr2l,c
  5866   003472  0E00               	movlw	high _lat_registers
  5867   003474  20F4               	addwfc	prodh,w,c
  5868   003476  6EDA               	movwf	fsr2h,c
  5869   003478  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+3
  5870   00347C  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+4
  5871   003480  C013  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5872   003484  C014  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5873   003488  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5874   00348A  12DF               	iorwf	indf2,f,c
  5875                           
  5876                           ;MCAL_layer/GPIO/hal_gpio.c: 112:                 break;
  5877   00348C  EF5D  F01A         	goto	l8225
  5878   003490                     l8223:
  5879   003490  500F               	movf	gpio_pin_write_logic@log^0,w,c
  5880   003492  6E10               	movwf	??_gpio_pin_write_logic^0,c
  5881   003494  6A11               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5882                           
  5883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5884                           ; Switch size 1, requested type "simple"
  5885                           ; Number of cases is 1, Range of values is 0 to 0
  5886                           ; switch strategies available:
  5887                           ; Name         Instructions Cycles
  5888                           ; simple_byte            4     3 (average)
  5889                           ;	Chosen strategy is simple_byte
  5890   003496  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5891   003498  0A00               	xorlw	0	; case 0
  5892   00349A  B4D8               	btfsc	status,2,c
  5893   00349C  EF52  F01A         	goto	l10337
  5894   0034A0  EFE5  F019         	goto	l8215
  5895   0034A4                     l10337:
  5896                           
  5897                           ; Switch size 1, requested type "simple"
  5898                           ; Number of cases is 2, Range of values is 0 to 1
  5899                           ; switch strategies available:
  5900                           ; Name         Instructions Cycles
  5901                           ; simple_byte            7     4 (average)
  5902                           ;	Chosen strategy is simple_byte
  5903   0034A4  5010               	movf	??_gpio_pin_write_logic^0,w,c
  5904   0034A6  0A00               	xorlw	0	; case 0
  5905   0034A8  B4D8               	btfsc	status,2,c
  5906   0034AA  EFE9  F019         	goto	l8217
  5907   0034AE  0A01               	xorlw	1	; case 1
  5908   0034B0  B4D8               	btfsc	status,2,c
  5909   0034B2  EF1A  F01A         	goto	l8219
  5910   0034B6  EFE5  F019         	goto	l8215
  5911   0034BA                     l8225:
  5912                           
  5913                           ;MCAL_layer/GPIO/hal_gpio.c: 117:      return ret;
  5914   0034BA  5016               	movf	gpio_pin_write_logic@ret^0,w,c
  5915   0034BC  0012               	return		;funcret
  5916   0034BE                     __end_of_gpio_pin_write_logic:
  5917                           	callstack 0
  5918                           
  5919 ;; *************** function _gpio_pin_direction_initialize *****************
  5920 ;; Defined at:
  5921 ;;		line 22 in file "MCAL_layer/GPIO/hal_gpio.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  pin             2   12[COMRAM] PTR const struct .
  5924 ;;		 -> ccp_obj(16), motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), 
  5925 ;;		 -> lcd_1(10), led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  ret             1   20[COMRAM] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      unsigned char 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;Total ram usage:        9 bytes
  5942 ;; Hardware stack levels used: 1
  5943 ;; Hardware stack levels required when called: 4
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_gpio_pin_initialize
  5948 ;;		_keypad_initialize
  5949 ;;		_push_button_initialize
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text29
  5954   002FF0                     __ptext29:
  5955                           	callstack 0
  5956   002FF0                     _gpio_pin_direction_initialize:
  5957                           	callstack 22
  5958   002FF0                     
  5959                           ;MCAL_layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config *pin);MCAL_layer/GPIO/hal_gpio.c: 23: {;MCAL_layer/GPIO/hal_gpio.c: 24:     Std_R
      +                          eturnType ret = (Std_ReturnType)0x01;
  5960   002FF0  0E01               	movlw	1
  5961   002FF2  6E15               	movwf	gpio_pin_direction_initialize@ret^0,c
  5962   002FF4                     
  5963                           ;MCAL_layer/GPIO/hal_gpio.c: 25:     if((pin==((void*)0))||(pin->pin>=8))
  5964   002FF4  500D               	movf	gpio_pin_direction_initialize@pin^0,w,c
  5965   002FF6  100E               	iorwf	(gpio_pin_direction_initialize@pin+1)^0,w,c
  5966   002FF8  B4D8               	btfsc	status,2,c
  5967   002FFA  EF01  F018         	goto	u8571
  5968   002FFE  EF03  F018         	goto	u8570
  5969   003002                     u8571:
  5970   003002  EF14  F018         	goto	l8351
  5971   003006                     u8570:
  5972   003006  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  5973   00300A  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  5974   00300E  30DF               	rrcf	223,w,c
  5975   003010  32E8               	rrcf	wreg,f,c
  5976   003012  32E8               	rrcf	wreg,f,c
  5977   003014  0B07               	andlw	7
  5978   003016  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  5979   003018  0E07               	movlw	7
  5980   00301A  640F               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  5981   00301C  EF12  F018         	goto	u8581
  5982   003020  EF14  F018         	goto	u8580
  5983   003024                     u8581:
  5984   003024  EF77  F018         	goto	l8359
  5985   003028                     u8580:
  5986   003028                     l8351:
  5987                           
  5988                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     {;MCAL_layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  5989   003028  0E00               	movlw	0
  5990   00302A  6E15               	movwf	gpio_pin_direction_initialize@ret^0,c
  5991                           
  5992                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     }
  5993   00302C  EF98  F018         	goto	l8361
  5994   003030                     l8353:
  5995                           
  5996                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  5997   003030  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  5998   003034  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  5999   003038  30DF               	rrcf	223,w,c
  6000   00303A  32E8               	rrcf	wreg,f,c
  6001   00303C  32E8               	rrcf	wreg,f,c
  6002   00303E  0B07               	andlw	7
  6003   003040  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6004   003042  0E01               	movlw	1
  6005   003044  6E10               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  6006   003046  2A0F               	incf	??_gpio_pin_direction_initialize^0,f,c
  6007   003048  EF28  F018         	goto	u8594
  6008   00304C                     u8595:
  6009   00304C  90D8               	bcf	status,0,c
  6010   00304E  3610               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  6011   003050                     u8594:
  6012   003050  2E0F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  6013   003052  EF26  F018         	goto	u8595
  6014   003056  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6015   003058  0AFF               	xorlw	255
  6016   00305A  6E11               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  6017   00305C  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6018   003060  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6019   003064  50DF               	movf	223,w,c
  6020   003066  0B07               	andlw	7
  6021   003068  6E12               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  6022   00306A  5012               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  6023   00306C  0D02               	mullw	2
  6024   00306E  0EC6               	movlw	low _tris_registers
  6025   003070  24F3               	addwf	243,w,c
  6026   003072  6ED9               	movwf	fsr2l,c
  6027   003074  0E00               	movlw	high _tris_registers
  6028   003076  20F4               	addwfc	prodh,w,c
  6029   003078  6EDA               	movwf	fsr2h,c
  6030   00307A  CFDE F013          	movff	postinc2,??_gpio_pin_direction_initialize+4
  6031   00307E  CFDD F014          	movff	postdec2,??_gpio_pin_direction_initialize+5
  6032   003082  C013  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  6033   003086  C014  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  6034   00308A  5011               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  6035   00308C  16DF               	andwf	indf2,f,c
  6036                           
  6037                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
  6038   00308E  EF98  F018         	goto	l8361
  6039   003092                     l8355:
  6040                           
  6041                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 (*tris_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  6042   003092  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6043   003096  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6044   00309A  30DF               	rrcf	223,w,c
  6045   00309C  32E8               	rrcf	wreg,f,c
  6046   00309E  32E8               	rrcf	wreg,f,c
  6047   0030A0  0B07               	andlw	7
  6048   0030A2  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6049   0030A4  0E01               	movlw	1
  6050   0030A6  6E10               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  6051   0030A8  2A0F               	incf	??_gpio_pin_direction_initialize^0,f,c
  6052   0030AA  EF59  F018         	goto	u8604
  6053   0030AE                     u8605:
  6054   0030AE  90D8               	bcf	status,0,c
  6055   0030B0  3610               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  6056   0030B2                     u8604:
  6057   0030B2  2E0F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  6058   0030B4  EF57  F018         	goto	u8605
  6059   0030B8  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6060   0030BC  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6061   0030C0  50DF               	movf	223,w,c
  6062   0030C2  0B07               	andlw	7
  6063   0030C4  6E11               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  6064   0030C6  5011               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  6065   0030C8  0D02               	mullw	2
  6066   0030CA  0EC6               	movlw	low _tris_registers
  6067   0030CC  24F3               	addwf	243,w,c
  6068   0030CE  6ED9               	movwf	fsr2l,c
  6069   0030D0  0E00               	movlw	high _tris_registers
  6070   0030D2  20F4               	addwfc	prodh,w,c
  6071   0030D4  6EDA               	movwf	fsr2h,c
  6072   0030D6  CFDE F012          	movff	postinc2,??_gpio_pin_direction_initialize+3
  6073   0030DA  CFDD F013          	movff	postdec2,??_gpio_pin_direction_initialize+4
  6074   0030DE  C012  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  6075   0030E2  C013  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  6076   0030E6  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6077   0030E8  12DF               	iorwf	indf2,f,c
  6078                           
  6079                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                 break;
  6080   0030EA  EF98  F018         	goto	l8361
  6081   0030EE                     l8359:
  6082   0030EE  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  6083   0030F2  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  6084   0030F6  BCDF               	btfsc	indf2,6,c
  6085   0030F8  EF80  F018         	goto	u8611
  6086   0030FC  EF83  F018         	goto	u8610
  6087   003100                     u8611:
  6088   003100  0E01               	movlw	1
  6089   003102  EF84  F018         	goto	u8620
  6090   003106                     u8610:
  6091   003106  0E00               	movlw	0
  6092   003108                     u8620:
  6093   003108  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  6094   00310A  6A10               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  6095                           
  6096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6097                           ; Switch size 1, requested type "simple"
  6098                           ; Number of cases is 1, Range of values is 0 to 0
  6099                           ; switch strategies available:
  6100                           ; Name         Instructions Cycles
  6101                           ; simple_byte            4     3 (average)
  6102                           ;	Chosen strategy is simple_byte
  6103   00310C  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  6104   00310E  0A00               	xorlw	0	; case 0
  6105   003110  B4D8               	btfsc	status,2,c
  6106   003112  EF8D  F018         	goto	l10339
  6107   003116  EF14  F018         	goto	l8351
  6108   00311A                     l10339:
  6109                           
  6110                           ; Switch size 1, requested type "simple"
  6111                           ; Number of cases is 2, Range of values is 0 to 1
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte            7     4 (average)
  6115                           ;	Chosen strategy is simple_byte
  6116   00311A  500F               	movf	??_gpio_pin_direction_initialize^0,w,c
  6117   00311C  0A00               	xorlw	0	; case 0
  6118   00311E  B4D8               	btfsc	status,2,c
  6119   003120  EF18  F018         	goto	l8353
  6120   003124  0A01               	xorlw	1	; case 1
  6121   003126  B4D8               	btfsc	status,2,c
  6122   003128  EF49  F018         	goto	l8355
  6123   00312C  EF14  F018         	goto	l8351
  6124   003130                     l8361:
  6125                           
  6126                           ;MCAL_layer/GPIO/hal_gpio.c: 43:     return ret;
  6127   003130  5015               	movf	gpio_pin_direction_initialize@ret^0,w,c
  6128   003132  0012               	return		;funcret
  6129   003134                     __end_of_gpio_pin_direction_initialize:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _CCP_Timer_config *****************
  6133 ;; Defined at:
  6134 ;;		line 457 in file "MCAL_layer/CCP/CCP1.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  ccp_obj         2   12[COMRAM] PTR const struct .
  6137 ;;		 -> ccp_obj(16), 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;Total ram usage:        4 bytes
  6154 ;; Hardware stack levels used: 1
  6155 ;; Hardware stack levels required when called: 4
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_CCP_Init
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text30
  6164   004114                     __ptext30:
  6165                           	callstack 0
  6166   004114                     _CCP_Timer_config:
  6167                           	callstack 24
  6168   004114                     
  6169                           ;MCAL_layer/CCP/CCP1.c: 457: static void CCP_Timer_config(const CCP_t *ccp_obj);MCAL_lay
      +                          er/CCP/CCP1.c: 458: {;MCAL_layer/CCP/CCP1.c: 459:     switch(ccp_obj->ccp_capture_timer)
  6170   004114  EF98  F020         	goto	l8575
  6171   004118                     l648:
  6172                           
  6173                           ;MCAL_layer/CCP/CCP1.c: 462:             T3CONbits.T3CCP1 = 0;
  6174   004118  96B1               	bcf	177,3,c	;volatile
  6175                           
  6176                           ;MCAL_layer/CCP/CCP1.c: 463:             T3CONbits.T3CCP2 = 1;
  6177   00411A  8CB1               	bsf	177,6,c	;volatile
  6178                           
  6179                           ;MCAL_layer/CCP/CCP1.c: 464:             break;
  6180   00411C  EFB7  F020         	goto	l652
  6181   004120                     l650:
  6182                           
  6183                           ;MCAL_layer/CCP/CCP1.c: 466:             T3CONbits.T3CCP1 = 1;
  6184   004120  86B1               	bsf	177,3,c	;volatile
  6185                           
  6186                           ;MCAL_layer/CCP/CCP1.c: 467:             T3CONbits.T3CCP2 = 0;
  6187   004122  9CB1               	bcf	177,6,c	;volatile
  6188                           
  6189                           ;MCAL_layer/CCP/CCP1.c: 468:             break;
  6190   004124  EFB7  F020         	goto	l652
  6191   004128                     l651:
  6192                           
  6193                           ;MCAL_layer/CCP/CCP1.c: 470:             T3CONbits.T3CCP1 = 0;
  6194   004128  96B1               	bcf	177,3,c	;volatile
  6195                           
  6196                           ;MCAL_layer/CCP/CCP1.c: 471:             T3CONbits.T3CCP2 = 0;
  6197   00412A  9CB1               	bcf	177,6,c	;volatile
  6198                           
  6199                           ;MCAL_layer/CCP/CCP1.c: 472:     }
  6200   00412C  EFB7  F020         	goto	l652
  6201   004130                     l8575:
  6202   004130  EE20 F004          	lfsr	2,4
  6203   004134  500D               	movf	CCP_Timer_config@ccp_obj^0,w,c
  6204   004136  26D9               	addwf	fsr2l,f,c
  6205   004138  500E               	movf	(CCP_Timer_config@ccp_obj+1)^0,w,c
  6206   00413A  22DA               	addwfc	fsr2h,f,c
  6207   00413C  50DF               	movf	indf2,w,c
  6208   00413E  6E0F               	movwf	??_CCP_Timer_config^0,c
  6209   004140  6A10               	clrf	(??_CCP_Timer_config+1)^0,c
  6210                           
  6211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6212                           ; Switch size 1, requested type "simple"
  6213                           ; Number of cases is 1, Range of values is 0 to 0
  6214                           ; switch strategies available:
  6215                           ; Name         Instructions Cycles
  6216                           ; simple_byte            4     3 (average)
  6217                           ;	Chosen strategy is simple_byte
  6218   004142  5010               	movf	(??_CCP_Timer_config+1)^0,w,c
  6219   004144  0A00               	xorlw	0	; case 0
  6220   004146  B4D8               	btfsc	status,2,c
  6221   004148  EFA8  F020         	goto	l10341
  6222   00414C  EFB7  F020         	goto	l652
  6223   004150                     l10341:
  6224                           
  6225                           ; Switch size 1, requested type "simple"
  6226                           ; Number of cases is 3, Range of values is 0 to 2
  6227                           ; switch strategies available:
  6228                           ; Name         Instructions Cycles
  6229                           ; simple_byte           10     6 (average)
  6230                           ;	Chosen strategy is simple_byte
  6231   004150  500F               	movf	??_CCP_Timer_config^0,w,c
  6232   004152  0A00               	xorlw	0	; case 0
  6233   004154  B4D8               	btfsc	status,2,c
  6234   004156  EF8C  F020         	goto	l648
  6235   00415A  0A01               	xorlw	1	; case 1
  6236   00415C  B4D8               	btfsc	status,2,c
  6237   00415E  EF90  F020         	goto	l650
  6238   004162  0A03               	xorlw	3	; case 2
  6239   004164  B4D8               	btfsc	status,2,c
  6240   004166  EF94  F020         	goto	l651
  6241   00416A  EFB7  F020         	goto	l652
  6242   00416E                     l652:
  6243   00416E  0012               	return		;funcret
  6244   004170                     __end_of_CCP_Timer_config:
  6245                           	callstack 0
  6246                           
  6247 ;; *************** function _ADC_init *****************
  6248 ;; Defined at:
  6249 ;;		line 23 in file "MCAL_layer/ADC/hal_ADC.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  ADC_obj         2   15[COMRAM] PTR const struct .
  6252 ;;		 -> Lm35(7), 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  ret             1   18[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      unsigned char 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        4 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 5
  6271 ;; This function calls:
  6272 ;;		_ADC_configure_Channel
  6273 ;; This function is called by:
  6274 ;;		_application_initialize
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text31
  6279   0034BE                     __ptext31:
  6280                           	callstack 0
  6281   0034BE                     _ADC_init:
  6282                           	callstack 24
  6283   0034BE                     
  6284                           ;MCAL_layer/ADC/hal_ADC.c: 23: Std_ReturnType ADC_init(const ADC_t* ADC_obj);MCAL_layer/
      +                          ADC/hal_ADC.c: 24: {;MCAL_layer/ADC/hal_ADC.c: 25:     Std_ReturnType ret = (Std_ReturnT
      +                          ype)0x01;
  6285   0034BE  0E01               	movlw	1
  6286   0034C0  6E13               	movwf	ADC_init@ret^0,c
  6287   0034C2                     
  6288                           ;MCAL_layer/ADC/hal_ADC.c: 26:     if(ADC_obj == ((void*)0))
  6289   0034C2  5010               	movf	ADC_init@ADC_obj^0,w,c
  6290   0034C4  1011               	iorwf	(ADC_init@ADC_obj+1)^0,w,c
  6291   0034C6  A4D8               	btfss	status,2,c
  6292   0034C8  EF68  F01A         	goto	u6121
  6293   0034CC  EF6A  F01A         	goto	u6120
  6294   0034D0                     u6121:
  6295   0034D0  EF6E  F01A         	goto	l409
  6296   0034D4                     u6120:
  6297   0034D4                     
  6298                           ;MCAL_layer/ADC/hal_ADC.c: 27:     {;MCAL_layer/ADC/hal_ADC.c: 28:         ret = (Std_Re
      +                          turnType)0x00;
  6299   0034D4  0E00               	movlw	0
  6300   0034D6  6E13               	movwf	ADC_init@ret^0,c
  6301                           
  6302                           ;MCAL_layer/ADC/hal_ADC.c: 29:     }
  6303   0034D8  EFE0  F01A         	goto	l6455
  6304   0034DC                     l409:
  6305                           
  6306                           ;MCAL_layer/ADC/hal_ADC.c: 31:     {;MCAL_layer/ADC/hal_ADC.c: 33:         (ADCON0bits.A
      +                          DON = 0);
  6307   0034DC  90C2               	bcf	194,0,c	;volatile
  6308   0034DE                     
  6309                           ;MCAL_layer/ADC/hal_ADC.c: 35:         (ADCON2bits.ACQT = ADC_obj->Acquisition_Time);
  6310   0034DE  EE20 F004          	lfsr	2,4
  6311   0034E2  5010               	movf	ADC_init@ADC_obj^0,w,c
  6312   0034E4  26D9               	addwf	fsr2l,f,c
  6313   0034E6  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6314   0034E8  22DA               	addwfc	fsr2h,f,c
  6315   0034EA  50DF               	movf	indf2,w,c
  6316   0034EC  6E12               	movwf	??_ADC_init^0,c
  6317   0034EE  4612               	rlncf	??_ADC_init^0,f,c
  6318   0034F0  4612               	rlncf	??_ADC_init^0,f,c
  6319   0034F2  4612               	rlncf	??_ADC_init^0,f,c
  6320   0034F4  50C0               	movf	192,w,c	;volatile
  6321   0034F6  1812               	xorwf	??_ADC_init^0,w,c
  6322   0034F8  0BC7               	andlw	-57
  6323   0034FA  1812               	xorwf	??_ADC_init^0,w,c
  6324   0034FC  6EC0               	movwf	192,c	;volatile
  6325                           
  6326                           ;MCAL_layer/ADC/hal_ADC.c: 37:         (ADCON2bits.ADCS = ADC_obj->Prescaler);
  6327   0034FE  EE20 F005          	lfsr	2,5
  6328   003502  5010               	movf	ADC_init@ADC_obj^0,w,c
  6329   003504  26D9               	addwf	fsr2l,f,c
  6330   003506  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6331   003508  22DA               	addwfc	fsr2h,f,c
  6332   00350A  50DF               	movf	indf2,w,c
  6333   00350C  6E12               	movwf	??_ADC_init^0,c
  6334   00350E  50C0               	movf	192,w,c	;volatile
  6335   003510  1812               	xorwf	??_ADC_init^0,w,c
  6336   003512  0BF8               	andlw	-8
  6337   003514  1812               	xorwf	??_ADC_init^0,w,c
  6338   003516  6EC0               	movwf	192,c	;volatile
  6339                           
  6340                           ;MCAL_layer/ADC/hal_ADC.c: 39:         (ADCON0bits.CHS = ADC_obj->ADC_Channel);
  6341   003518  EE20 F003          	lfsr	2,3
  6342   00351C  5010               	movf	ADC_init@ADC_obj^0,w,c
  6343   00351E  26D9               	addwf	fsr2l,f,c
  6344   003520  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6345   003522  22DA               	addwfc	fsr2h,f,c
  6346   003524  50DF               	movf	indf2,w,c
  6347   003526  6E12               	movwf	??_ADC_init^0,c
  6348   003528  4612               	rlncf	??_ADC_init^0,f,c
  6349   00352A  4612               	rlncf	??_ADC_init^0,f,c
  6350   00352C  50C2               	movf	194,w,c	;volatile
  6351   00352E  1812               	xorwf	??_ADC_init^0,w,c
  6352   003530  0BC3               	andlw	-61
  6353   003532  1812               	xorwf	??_ADC_init^0,w,c
  6354   003534  6EC2               	movwf	194,c	;volatile
  6355   003536                     
  6356                           ;MCAL_layer/ADC/hal_ADC.c: 40:         ADC_configure_Channel(ADC_obj->ADC_Channel);
  6357   003536  EE20 F003          	lfsr	2,3
  6358   00353A  5010               	movf	ADC_init@ADC_obj^0,w,c
  6359   00353C  26D9               	addwf	fsr2l,f,c
  6360   00353E  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6361   003540  22DA               	addwfc	fsr2h,f,c
  6362   003542  50DF               	movf	indf2,w,c
  6363   003544  EC65  F01B         	call	_ADC_configure_Channel
  6364   003548                     
  6365                           ;MCAL_layer/ADC/hal_ADC.c: 43:         (PIE1bits.ADIE = 1);
  6366   003548  8C9D               	bsf	157,6,c	;volatile
  6367   00354A                     
  6368                           ;MCAL_layer/ADC/hal_ADC.c: 44:         (PIR1bits.ADIF = 0);
  6369   00354A  9C9E               	bcf	158,6,c	;volatile
  6370   00354C                     
  6371                           ;MCAL_layer/ADC/hal_ADC.c: 61:         (INTCONbits.GIE = 1);
  6372   00354C  8EF2               	bsf	242,7,c	;volatile
  6373   00354E                     
  6374                           ;MCAL_layer/ADC/hal_ADC.c: 62:         (INTCONbits.PEIE = 1);
  6375   00354E  8CF2               	bsf	242,6,c	;volatile
  6376   003550                     
  6377                           ;MCAL_layer/ADC/hal_ADC.c: 64:         ADC_InterruptCallBack = ADC_obj->ADC_CallBack;
  6378   003550  C010  FFD9         	movff	ADC_init@ADC_obj,fsr2l
  6379   003554  C011  FFDA         	movff	ADC_init@ADC_obj+1,fsr2h
  6380   003558  CFDE F0AE          	movff	postinc2,_ADC_InterruptCallBack
  6381   00355C  CFDD F0AF          	movff	postdec2,_ADC_InterruptCallBack+1
  6382   003560                     
  6383                           ;MCAL_layer/ADC/hal_ADC.c: 67:         (ADCON2bits.ADFM = ADC_obj->Result_format);
  6384   003560  EE20 F006          	lfsr	2,6
  6385   003564  5010               	movf	ADC_init@ADC_obj^0,w,c
  6386   003566  26D9               	addwf	fsr2l,f,c
  6387   003568  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6388   00356A  22DA               	addwfc	fsr2h,f,c
  6389   00356C  A2DF               	btfss	indf2,1,c
  6390   00356E  D002               	bra	u6135
  6391   003570  8EC0               	bsf	192,7,c	;volatile
  6392   003572  D001               	bra	u6137
  6393   003574                     u6135:
  6394   003574  9EC0               	bcf	192,7,c	;volatile
  6395   003576                     u6137:
  6396   003576                     
  6397                           ;MCAL_layer/ADC/hal_ADC.c: 69:         if(ADC_obj->voltage_refrence == 1U)
  6398   003576  EE20 F006          	lfsr	2,6
  6399   00357A  5010               	movf	ADC_init@ADC_obj^0,w,c
  6400   00357C  26D9               	addwf	fsr2l,f,c
  6401   00357E  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6402   003580  22DA               	addwfc	fsr2h,f,c
  6403   003582  A0DF               	btfss	indf2,0,c
  6404   003584  EFC6  F01A         	goto	u6141
  6405   003588  EFC8  F01A         	goto	u6140
  6406   00358C                     u6141:
  6407   00358C  EFCC  F01A         	goto	l6453
  6408   003590                     u6140:
  6409   003590  98C1               	bcf	193,4,c	;volatile
  6410   003592  9AC1               	bcf	193,5,c	;volatile
  6411   003594  EFDF  F01A         	goto	l414
  6412   003598                     l6453:
  6413   003598  EE20 F006          	lfsr	2,6
  6414   00359C  5010               	movf	ADC_init@ADC_obj^0,w,c
  6415   00359E  26D9               	addwf	fsr2l,f,c
  6416   0035A0  5011               	movf	(ADC_init@ADC_obj+1)^0,w,c
  6417   0035A2  22DA               	addwfc	fsr2h,f,c
  6418   0035A4  B0DF               	btfsc	indf2,0,c
  6419   0035A6  EFD7  F01A         	goto	u6151
  6420   0035AA  EFD9  F01A         	goto	u6150
  6421   0035AE                     u6151:
  6422   0035AE  EFDD  F01A         	goto	l419
  6423   0035B2                     u6150:
  6424   0035B2  88C1               	bsf	193,4,c	;volatile
  6425   0035B4  8AC1               	bsf	193,5,c	;volatile
  6426   0035B6  EFDF  F01A         	goto	l414
  6427   0035BA                     l419:
  6428   0035BA  98C1               	bcf	193,4,c	;volatile
  6429   0035BC  9AC1               	bcf	193,5,c	;volatile
  6430   0035BE                     l414:
  6431                           
  6432                           ;MCAL_layer/ADC/hal_ADC.c: 82:         (ADCON0bits.ADON = 1);
  6433   0035BE  80C2               	bsf	194,0,c	;volatile
  6434   0035C0                     l6455:
  6435                           
  6436                           ;MCAL_layer/ADC/hal_ADC.c: 85:     return ret;
  6437   0035C0  5013               	movf	ADC_init@ret^0,w,c
  6438   0035C2  0012               	return		;funcret
  6439   0035C4                     __end_of_ADC_init:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function ___lwdiv *****************
  6443 ;; Defined at:
  6444 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  dividend        2   12[COMRAM] unsigned int 
  6447 ;;  divisor         2   14[COMRAM] unsigned int 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  quotient        2   16[COMRAM] unsigned int 
  6450 ;;  counter         1   18[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  2   12[COMRAM] unsigned int 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:        7 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 4
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_main
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text32
  6475   003EF2                     __ptext32:
  6476                           	callstack 0
  6477   003EF2                     ___lwdiv:
  6478                           	callstack 26
  6479   003EF2  0E00               	movlw	0
  6480   003EF4  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  6481   003EF6  0E00               	movlw	0
  6482   003EF8  6E11               	movwf	___lwdiv@quotient^0,c
  6483   003EFA  500F               	movf	___lwdiv@divisor^0,w,c
  6484   003EFC  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6485   003EFE  B4D8               	btfsc	status,2,c
  6486   003F00  EF84  F01F         	goto	u6601
  6487   003F04  EF86  F01F         	goto	u6600
  6488   003F08                     u6601:
  6489   003F08  EFAE  F01F         	goto	l1842
  6490   003F0C                     u6600:
  6491   003F0C  0E01               	movlw	1
  6492   003F0E  6E13               	movwf	___lwdiv@counter^0,c
  6493   003F10  EF8E  F01F         	goto	l6935
  6494   003F14                     l6933:
  6495   003F14  90D8               	bcf	status,0,c
  6496   003F16  360F               	rlcf	___lwdiv@divisor^0,f,c
  6497   003F18  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6498   003F1A  2A13               	incf	___lwdiv@counter^0,f,c
  6499   003F1C                     l6935:
  6500   003F1C  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  6501   003F1E  EF93  F01F         	goto	u6611
  6502   003F22  EF95  F01F         	goto	u6610
  6503   003F26                     u6611:
  6504   003F26  EF8A  F01F         	goto	l6933
  6505   003F2A                     u6610:
  6506   003F2A                     l6937:
  6507   003F2A  90D8               	bcf	status,0,c
  6508   003F2C  3611               	rlcf	___lwdiv@quotient^0,f,c
  6509   003F2E  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6510   003F30  500F               	movf	___lwdiv@divisor^0,w,c
  6511   003F32  5C0D               	subwf	___lwdiv@dividend^0,w,c
  6512   003F34  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  6513   003F36  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6514   003F38  A0D8               	btfss	status,0,c
  6515   003F3A  EFA1  F01F         	goto	u6621
  6516   003F3E  EFA3  F01F         	goto	u6620
  6517   003F42                     u6621:
  6518   003F42  EFA8  F01F         	goto	l6945
  6519   003F46                     u6620:
  6520   003F46  500F               	movf	___lwdiv@divisor^0,w,c
  6521   003F48  5E0D               	subwf	___lwdiv@dividend^0,f,c
  6522   003F4A  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  6523   003F4C  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6524   003F4E  8011               	bsf	___lwdiv@quotient^0,0,c
  6525   003F50                     l6945:
  6526   003F50  90D8               	bcf	status,0,c
  6527   003F52  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6528   003F54  320F               	rrcf	___lwdiv@divisor^0,f,c
  6529   003F56  2E13               	decfsz	___lwdiv@counter^0,f,c
  6530   003F58  EF95  F01F         	goto	l6937
  6531   003F5C                     l1842:
  6532   003F5C  C011  F00D         	movff	___lwdiv@quotient,?___lwdiv
  6533   003F60  C012  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6534   003F64  0012               	return		;funcret
  6535   003F66                     __end_of___lwdiv:
  6536                           	callstack 0
  6537                           
  6538 ;; *************** function _CCP_PWM_set_DutyCycle *****************
  6539 ;; Defined at:
  6540 ;;		line 369 in file "MCAL_layer/CCP/CCP1.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  ccp_obj         2    0[BANK0 ] PTR const struct .
  6543 ;;		 -> ccp_obj(16), 
  6544 ;;  Duty_value      1    2[BANK0 ] unsigned char 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  l_duty_temp     2   10[BANK0 ] unsigned short 
  6547 ;;  ret             1    5[BANK0 ] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      unsigned char 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6557 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;Total ram usage:       12 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 5
  6564 ;; This function calls:
  6565 ;;		___fladd
  6566 ;;		___fldiv
  6567 ;;		___flmul
  6568 ;;		___fltol
  6569 ;;		___xxtofl
  6570 ;; This function is called by:
  6571 ;;		_main
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text33
  6576   0028B8                     __ptext33:
  6577                           	callstack 0
  6578   0028B8                     _CCP_PWM_set_DutyCycle:
  6579                           	callstack 25
  6580   0028B8                     
  6581                           ;MCAL_layer/CCP/CCP1.c: 369: Std_ReturnType CCP_PWM_set_DutyCycle(const CCP_t *ccp_obj,u
      +                          int8 Duty_value);MCAL_layer/CCP/CCP1.c: 370: {;MCAL_layer/CCP/CCP1.c: 371:     Std_Retur
      +                          nType ret = (Std_ReturnType)0x01;
  6582   0028B8  0E01               	movlw	1
  6583   0028BA  0100               	movlb	0	; () banked
  6584   0028BC  6FF8               	movwf	CCP_PWM_set_DutyCycle@ret& (0+255),b
  6585   0028BE                     
  6586                           ; BSR set to: 0
  6587                           ;MCAL_layer/CCP/CCP1.c: 373:     if(ccp_obj == ((void*)0))
  6588   0028BE  51F3               	movf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),w,b
  6589   0028C0  11F4               	iorwf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),w,b
  6590   0028C2  A4D8               	btfss	status,2,c
  6591   0028C4  EF66  F014         	goto	u10271
  6592   0028C8  EF68  F014         	goto	u10270
  6593   0028CC                     u10271:
  6594   0028CC  EF6C  F014         	goto	l9553
  6595   0028D0                     u10270:
  6596   0028D0                     
  6597                           ; BSR set to: 0
  6598                           ;MCAL_layer/CCP/CCP1.c: 374:     {;MCAL_layer/CCP/CCP1.c: 375:         ret = (Std_Return
      +                          Type)0x00;
  6599   0028D0  0E00               	movlw	0
  6600   0028D2  6FF8               	movwf	CCP_PWM_set_DutyCycle@ret& (0+255),b
  6601                           
  6602                           ;MCAL_layer/CCP/CCP1.c: 376:     }
  6603   0028D4  EF96  F015         	goto	l9569
  6604   0028D8                     l9553:
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;MCAL_layer/CCP/CCP1.c: 378:     {;MCAL_layer/CCP/CCP1.c: 379:         if(ccp_obj->ccp_i
      +                          nst == CCP1_inst)
  6608   0028D8  EE20 F001          	lfsr	2,1
  6609   0028DC  51F3               	movf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),w,b
  6610   0028DE  26D9               	addwf	fsr2l,f,c
  6611   0028E0  51F4               	movf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),w,b
  6612   0028E2  22DA               	addwfc	fsr2h,f,c
  6613   0028E4  50DF               	movf	indf2,w,c
  6614   0028E6  A4D8               	btfss	status,2,c
  6615   0028E8  EF78  F014         	goto	u10281
  6616   0028EC  EF7A  F014         	goto	u10280
  6617   0028F0                     u10281:
  6618   0028F0  EF02  F015         	goto	l9561
  6619   0028F4                     u10280:
  6620   0028F4                     
  6621                           ; BSR set to: 0
  6622                           ;MCAL_layer/CCP/CCP1.c: 380:         {;MCAL_layer/CCP/CCP1.c: 381:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6623   0028F4  0E00               	movlw	0
  6624   0028F6  6E1F               	movwf	___flmul@a^0,c
  6625   0028F8  0E00               	movlw	0
  6626   0028FA  6E20               	movwf	(___flmul@a+1)^0,c
  6627   0028FC  0E80               	movlw	128
  6628   0028FE  6E21               	movwf	(___flmul@a+2)^0,c
  6629   002900  0E40               	movlw	64
  6630   002902  6E22               	movwf	(___flmul@a+3)^0,c
  6631   002904  0E00               	movlw	0
  6632   002906  6E51               	movwf	___fladd@a^0,c
  6633   002908  0E00               	movlw	0
  6634   00290A  6E52               	movwf	(___fladd@a+1)^0,c
  6635   00290C  0E80               	movlw	128
  6636   00290E  6E53               	movwf	(___fladd@a+2)^0,c
  6637   002910  0E3F               	movlw	63
  6638   002912  6E54               	movwf	(___fladd@a+3)^0,c
  6639   002914  50CB               	movf	203,w,c	;volatile
  6640   002916  6E0D               	movwf	___xxtofl@val^0,c
  6641   002918  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6642   00291A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6643   00291C  6A10               	clrf	(___xxtofl@val+3)^0,c
  6644   00291E  0E00               	movlw	0
  6645   002920  EC98  F015         	call	___xxtofl
  6646   002924  C00D  F04D         	movff	?___xxtofl,___fladd@b
  6647   002928  C00E  F04E         	movff	?___xxtofl+1,___fladd@b+1
  6648   00292C  C00F  F04F         	movff	?___xxtofl+2,___fladd@b+2
  6649   002930  C010  F050         	movff	?___xxtofl+3,___fladd@b+3
  6650   002934  ECDF  F00A         	call	___fladd	;wreg free
  6651   002938  C04D  F01B         	movff	?___fladd,___flmul@b
  6652   00293C  C04E  F01C         	movff	?___fladd+1,___flmul@b+1
  6653   002940  C04F  F01D         	movff	?___fladd+2,___flmul@b+2
  6654   002944  C050  F01E         	movff	?___fladd+3,___flmul@b+3
  6655   002948  EC3F  F00D         	call	___flmul	;wreg free
  6656   00294C  C01B  F0F9         	movff	?___flmul,_CCP_PWM_set_DutyCycle$4213
  6657   002950  C01C  F0FA         	movff	?___flmul+1,_CCP_PWM_set_DutyCycle$4213+1
  6658   002954  C01D  F0FB         	movff	?___flmul+2,_CCP_PWM_set_DutyCycle$4213+2
  6659   002958  C01E  F0FC         	movff	?___flmul+3,_CCP_PWM_set_DutyCycle$4213+3
  6660                           
  6661                           ;MCAL_layer/CCP/CCP1.c: 380:         {;MCAL_layer/CCP/CCP1.c: 381:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6662   00295C  0E00               	movlw	0
  6663   00295E  6E38               	movwf	___fldiv@a^0,c
  6664   002960  0E00               	movlw	0
  6665   002962  6E39               	movwf	(___fldiv@a+1)^0,c
  6666   002964  0EC8               	movlw	200
  6667   002966  6E3A               	movwf	(___fldiv@a+2)^0,c
  6668   002968  0E42               	movlw	66
  6669   00296A  6E3B               	movwf	(___fldiv@a+3)^0,c
  6670   00296C  0100               	movlb	0	; () banked
  6671   00296E  51F5               	movf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),w,b
  6672   002970  6E0D               	movwf	___xxtofl@val^0,c
  6673   002972  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6674   002974  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6675   002976  6A10               	clrf	(___xxtofl@val+3)^0,c
  6676   002978  0E00               	movlw	0
  6677   00297A  EC98  F015         	call	___xxtofl
  6678   00297E  C00D  F034         	movff	?___xxtofl,___fldiv@b
  6679   002982  C00E  F035         	movff	?___xxtofl+1,___fldiv@b+1
  6680   002986  C00F  F036         	movff	?___xxtofl+2,___fldiv@b+2
  6681   00298A  C010  F037         	movff	?___xxtofl+3,___fldiv@b+3
  6682   00298E  EC54  F00F         	call	___fldiv	;wreg free
  6683   002992  C034  F01F         	movff	?___fldiv,___flmul@a
  6684   002996  C035  F020         	movff	?___fldiv+1,___flmul@a+1
  6685   00299A  C036  F021         	movff	?___fldiv+2,___flmul@a+2
  6686   00299E  C037  F022         	movff	?___fldiv+3,___flmul@a+3
  6687   0029A2  C0F9  F01B         	movff	_CCP_PWM_set_DutyCycle$4213,___flmul@b
  6688   0029A6  C0FA  F01C         	movff	_CCP_PWM_set_DutyCycle$4213+1,___flmul@b+1
  6689   0029AA  C0FB  F01D         	movff	_CCP_PWM_set_DutyCycle$4213+2,___flmul@b+2
  6690   0029AE  C0FC  F01E         	movff	_CCP_PWM_set_DutyCycle$4213+3,___flmul@b+3
  6691   0029B2  EC3F  F00D         	call	___flmul	;wreg free
  6692   0029B6  C01B  F05D         	movff	?___flmul,___fltol@f1
  6693   0029BA  C01C  F05E         	movff	?___flmul+1,___fltol@f1+1
  6694   0029BE  C01D  F05F         	movff	?___flmul+2,___fltol@f1+2
  6695   0029C2  C01E  F060         	movff	?___flmul+3,___fltol@f1+3
  6696   0029C6  ECE2  F01A         	call	___fltol	;wreg free
  6697   0029CA  C05D  F0FD         	movff	?___fltol,CCP_PWM_set_DutyCycle@l_duty_temp
  6698   0029CE  C05E  F0FE         	movff	?___fltol+1,CCP_PWM_set_DutyCycle@l_duty_temp+1
  6699   0029D2                     
  6700                           ;MCAL_layer/CCP/CCP1.c: 382:             CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003
      +                          );
  6701   0029D2  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6702   0029D6  0E03               	movlw	3
  6703   0029D8  0100               	movlb	0	; () banked
  6704   0029DA  17F6               	andwf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6705   0029DC  3BF6               	swapf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6706   0029DE  50BD               	movf	189,w,c	;volatile
  6707   0029E0  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6708   0029E2  0BCF               	andlw	-49
  6709   0029E4  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6710   0029E6  6EBD               	movwf	189,c	;volatile
  6711   0029E8                     
  6712                           ; BSR set to: 0
  6713                           ;MCAL_layer/CCP/CCP1.c: 383:             CCPR1L = (uint8)(l_duty_temp >> 2);
  6714   0029E8  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6715   0029EC  C0FE  F0F7         	movff	CCP_PWM_set_DutyCycle@l_duty_temp+1,??_CCP_PWM_set_DutyCycle+1
  6716   0029F0  90D8               	bcf	status,0,c
  6717   0029F2  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6718   0029F4  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6719   0029F6  90D8               	bcf	status,0,c
  6720   0029F8  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6721   0029FA  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6722   0029FC  51F6               	movf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6723   0029FE  6EBE               	movwf	190,c	;volatile
  6724                           
  6725                           ;MCAL_layer/CCP/CCP1.c: 384:         }
  6726   002A00  EF96  F015         	goto	l9569
  6727   002A04                     l9561:
  6728                           
  6729                           ; BSR set to: 0
  6730   002A04  EE20 F001          	lfsr	2,1
  6731   002A08  51F3               	movf	CCP_PWM_set_DutyCycle@ccp_obj& (0+255),w,b
  6732   002A0A  26D9               	addwf	fsr2l,f,c
  6733   002A0C  51F4               	movf	(CCP_PWM_set_DutyCycle@ccp_obj+1)& (0+255),w,b
  6734   002A0E  22DA               	addwfc	fsr2h,f,c
  6735   002A10  04DE               	decf	postinc2,w,c
  6736   002A12  A4D8               	btfss	status,2,c
  6737   002A14  EF0E  F015         	goto	u10291
  6738   002A18  EF10  F015         	goto	u10290
  6739   002A1C                     u10291:
  6740   002A1C  EF96  F015         	goto	l9569
  6741   002A20                     u10290:
  6742   002A20                     
  6743                           ; BSR set to: 0
  6744                           ;MCAL_layer/CCP/CCP1.c: 386:         {;MCAL_layer/CCP/CCP1.c: 387:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6745   002A20  0E00               	movlw	0
  6746   002A22  6E1F               	movwf	___flmul@a^0,c
  6747   002A24  0E00               	movlw	0
  6748   002A26  6E20               	movwf	(___flmul@a+1)^0,c
  6749   002A28  0E80               	movlw	128
  6750   002A2A  6E21               	movwf	(___flmul@a+2)^0,c
  6751   002A2C  0E40               	movlw	64
  6752   002A2E  6E22               	movwf	(___flmul@a+3)^0,c
  6753   002A30  0E00               	movlw	0
  6754   002A32  6E51               	movwf	___fladd@a^0,c
  6755   002A34  0E00               	movlw	0
  6756   002A36  6E52               	movwf	(___fladd@a+1)^0,c
  6757   002A38  0E80               	movlw	128
  6758   002A3A  6E53               	movwf	(___fladd@a+2)^0,c
  6759   002A3C  0E3F               	movlw	63
  6760   002A3E  6E54               	movwf	(___fladd@a+3)^0,c
  6761   002A40  50CB               	movf	203,w,c	;volatile
  6762   002A42  6E0D               	movwf	___xxtofl@val^0,c
  6763   002A44  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6764   002A46  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6765   002A48  6A10               	clrf	(___xxtofl@val+3)^0,c
  6766   002A4A  0E00               	movlw	0
  6767   002A4C  EC98  F015         	call	___xxtofl
  6768   002A50  C00D  F04D         	movff	?___xxtofl,___fladd@b
  6769   002A54  C00E  F04E         	movff	?___xxtofl+1,___fladd@b+1
  6770   002A58  C00F  F04F         	movff	?___xxtofl+2,___fladd@b+2
  6771   002A5C  C010  F050         	movff	?___xxtofl+3,___fladd@b+3
  6772   002A60  ECDF  F00A         	call	___fladd	;wreg free
  6773   002A64  C04D  F01B         	movff	?___fladd,___flmul@b
  6774   002A68  C04E  F01C         	movff	?___fladd+1,___flmul@b+1
  6775   002A6C  C04F  F01D         	movff	?___fladd+2,___flmul@b+2
  6776   002A70  C050  F01E         	movff	?___fladd+3,___flmul@b+3
  6777   002A74  EC3F  F00D         	call	___flmul	;wreg free
  6778   002A78  C01B  F0F9         	movff	?___flmul,_CCP_PWM_set_DutyCycle$4213
  6779   002A7C  C01C  F0FA         	movff	?___flmul+1,_CCP_PWM_set_DutyCycle$4213+1
  6780   002A80  C01D  F0FB         	movff	?___flmul+2,_CCP_PWM_set_DutyCycle$4213+2
  6781   002A84  C01E  F0FC         	movff	?___flmul+3,_CCP_PWM_set_DutyCycle$4213+3
  6782                           
  6783                           ;MCAL_layer/CCP/CCP1.c: 386:         {;MCAL_layer/CCP/CCP1.c: 387:             l_duty_te
      +                          mp = (uint16)((float)4 * ((float)PR2 + 1.0) * ((float)Duty_value / 100.0));
  6784   002A88  0E00               	movlw	0
  6785   002A8A  6E38               	movwf	___fldiv@a^0,c
  6786   002A8C  0E00               	movlw	0
  6787   002A8E  6E39               	movwf	(___fldiv@a+1)^0,c
  6788   002A90  0EC8               	movlw	200
  6789   002A92  6E3A               	movwf	(___fldiv@a+2)^0,c
  6790   002A94  0E42               	movlw	66
  6791   002A96  6E3B               	movwf	(___fldiv@a+3)^0,c
  6792   002A98  0100               	movlb	0	; () banked
  6793   002A9A  51F5               	movf	CCP_PWM_set_DutyCycle@Duty_value& (0+255),w,b
  6794   002A9C  6E0D               	movwf	___xxtofl@val^0,c
  6795   002A9E  6A0E               	clrf	(___xxtofl@val+1)^0,c
  6796   002AA0  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6797   002AA2  6A10               	clrf	(___xxtofl@val+3)^0,c
  6798   002AA4  0E00               	movlw	0
  6799   002AA6  EC98  F015         	call	___xxtofl
  6800   002AAA  C00D  F034         	movff	?___xxtofl,___fldiv@b
  6801   002AAE  C00E  F035         	movff	?___xxtofl+1,___fldiv@b+1
  6802   002AB2  C00F  F036         	movff	?___xxtofl+2,___fldiv@b+2
  6803   002AB6  C010  F037         	movff	?___xxtofl+3,___fldiv@b+3
  6804   002ABA  EC54  F00F         	call	___fldiv	;wreg free
  6805   002ABE  C034  F01F         	movff	?___fldiv,___flmul@a
  6806   002AC2  C035  F020         	movff	?___fldiv+1,___flmul@a+1
  6807   002AC6  C036  F021         	movff	?___fldiv+2,___flmul@a+2
  6808   002ACA  C037  F022         	movff	?___fldiv+3,___flmul@a+3
  6809   002ACE  C0F9  F01B         	movff	_CCP_PWM_set_DutyCycle$4213,___flmul@b
  6810   002AD2  C0FA  F01C         	movff	_CCP_PWM_set_DutyCycle$4213+1,___flmul@b+1
  6811   002AD6  C0FB  F01D         	movff	_CCP_PWM_set_DutyCycle$4213+2,___flmul@b+2
  6812   002ADA  C0FC  F01E         	movff	_CCP_PWM_set_DutyCycle$4213+3,___flmul@b+3
  6813   002ADE  EC3F  F00D         	call	___flmul	;wreg free
  6814   002AE2  C01B  F05D         	movff	?___flmul,___fltol@f1
  6815   002AE6  C01C  F05E         	movff	?___flmul+1,___fltol@f1+1
  6816   002AEA  C01D  F05F         	movff	?___flmul+2,___fltol@f1+2
  6817   002AEE  C01E  F060         	movff	?___flmul+3,___fltol@f1+3
  6818   002AF2  ECE2  F01A         	call	___fltol	;wreg free
  6819   002AF6  C05D  F0FD         	movff	?___fltol,CCP_PWM_set_DutyCycle@l_duty_temp
  6820   002AFA  C05E  F0FE         	movff	?___fltol+1,CCP_PWM_set_DutyCycle@l_duty_temp+1
  6821   002AFE                     
  6822                           ;MCAL_layer/CCP/CCP1.c: 388:             CCP2CONbits.DC2B = (uint8)(l_duty_temp & 0x0003
      +                          );
  6823   002AFE  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6824   002B02  0E03               	movlw	3
  6825   002B04  0100               	movlb	0	; () banked
  6826   002B06  17F6               	andwf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6827   002B08  3BF6               	swapf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6828   002B0A  50BA               	movf	186,w,c	;volatile
  6829   002B0C  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6830   002B0E  0BCF               	andlw	-49
  6831   002B10  19F6               	xorwf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6832   002B12  6EBA               	movwf	186,c	;volatile
  6833   002B14                     
  6834                           ; BSR set to: 0
  6835                           ;MCAL_layer/CCP/CCP1.c: 389:             CCPR2L = (uint8)(l_duty_temp >> 2);
  6836   002B14  C0FD  F0F6         	movff	CCP_PWM_set_DutyCycle@l_duty_temp,??_CCP_PWM_set_DutyCycle
  6837   002B18  C0FE  F0F7         	movff	CCP_PWM_set_DutyCycle@l_duty_temp+1,??_CCP_PWM_set_DutyCycle+1
  6838   002B1C  90D8               	bcf	status,0,c
  6839   002B1E  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6840   002B20  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6841   002B22  90D8               	bcf	status,0,c
  6842   002B24  33F7               	rrcf	(??_CCP_PWM_set_DutyCycle+1)& (0+255),f,b
  6843   002B26  33F6               	rrcf	??_CCP_PWM_set_DutyCycle& (0+255),f,b
  6844   002B28  51F6               	movf	??_CCP_PWM_set_DutyCycle& (0+255),w,b
  6845   002B2A  6EBB               	movwf	187,c	;volatile
  6846   002B2C                     l9569:
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;MCAL_layer/CCP/CCP1.c: 393:     return ret;
  6850   002B2C  51F8               	movf	CCP_PWM_set_DutyCycle@ret& (0+255),w,b
  6851   002B2E                     
  6852                           ; BSR set to: 0
  6853   002B2E  0012               	return		;funcret
  6854   002B30                     __end_of_CCP_PWM_set_DutyCycle:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function ___xxtofl *****************
  6858 ;; Defined at:
  6859 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  sign            1    wreg     unsigned char 
  6862 ;;  val             4   12[COMRAM] long 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;  sign            1   20[COMRAM] unsigned char 
  6865 ;;  arg             4   22[COMRAM] unsigned long 
  6866 ;;  exp             1   21[COMRAM] unsigned char 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  4   12[COMRAM] unsigned char 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:       14 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 4
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_CCP_Init
  6887 ;;		_CCP_PWM_set_DutyCycle
  6888 ;;		_main
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text34
  6893   002B30                     __ptext34:
  6894                           	callstack 0
  6895   002B30                     ___xxtofl:
  6896                           	callstack 24
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;incstack = 0
  6900                           ;___xxtofl@sign stored from wreg
  6901   002B30  6E15               	movwf	___xxtofl@sign^0,c
  6902   002B32  5015               	movf	___xxtofl@sign^0,w,c
  6903   002B34  B4D8               	btfsc	status,2,c
  6904   002B36  EF9F  F015         	goto	u9751
  6905   002B3A  EFA1  F015         	goto	u9750
  6906   002B3E                     u9751:
  6907   002B3E  EFC3  F015         	goto	l2006
  6908   002B42                     u9750:
  6909   002B42  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  6910   002B44  EFA8  F015         	goto	u9760
  6911   002B48  EFA6  F015         	goto	u9761
  6912   002B4C                     u9761:
  6913   002B4C  EFC3  F015         	goto	l2006
  6914   002B50                     u9760:
  6915   002B50  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  6916   002B54  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  6917   002B58  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  6918   002B5C  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  6919   002B60  1E11               	comf	??___xxtofl^0,f,c
  6920   002B62  1E12               	comf	(??___xxtofl+1)^0,f,c
  6921   002B64  1E13               	comf	(??___xxtofl+2)^0,f,c
  6922   002B66  1E14               	comf	(??___xxtofl+3)^0,f,c
  6923   002B68  2A11               	incf	??___xxtofl^0,f,c
  6924   002B6A  0E00               	movlw	0
  6925   002B6C  2212               	addwfc	(??___xxtofl+1)^0,f,c
  6926   002B6E  2213               	addwfc	(??___xxtofl+2)^0,f,c
  6927   002B70  2214               	addwfc	(??___xxtofl+3)^0,f,c
  6928   002B72  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  6929   002B76  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  6930   002B7A  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  6931   002B7E  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  6932   002B82  EFCB  F015         	goto	l9101
  6933   002B86                     l2006:
  6934   002B86  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  6935   002B8A  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6936   002B8E  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6937   002B92  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6938   002B96                     l9101:
  6939   002B96  500D               	movf	___xxtofl@val^0,w,c
  6940   002B98  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  6941   002B9A  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  6942   002B9C  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  6943   002B9E  A4D8               	btfss	status,2,c
  6944   002BA0  EFD4  F015         	goto	u9771
  6945   002BA4  EFD6  F015         	goto	u9770
  6946   002BA8                     u9771:
  6947   002BA8  EFE0  F015         	goto	l9107
  6948   002BAC                     u9770:
  6949   002BAC  0E00               	movlw	0
  6950   002BAE  6E0D               	movwf	?___xxtofl^0,c
  6951   002BB0  0E00               	movlw	0
  6952   002BB2  6E0E               	movwf	(?___xxtofl+1)^0,c
  6953   002BB4  0E00               	movlw	0
  6954   002BB6  6E0F               	movwf	(?___xxtofl+2)^0,c
  6955   002BB8  0E00               	movlw	0
  6956   002BBA  6E10               	movwf	(?___xxtofl+3)^0,c
  6957   002BBC  EF71  F016         	goto	l2009
  6958   002BC0                     l9107:
  6959   002BC0  0E96               	movlw	150
  6960   002BC2  6E16               	movwf	___xxtofl@exp^0,c
  6961   002BC4  EFEA  F015         	goto	l9111
  6962   002BC8                     l9109:
  6963   002BC8  2A16               	incf	___xxtofl@exp^0,f,c
  6964   002BCA  90D8               	bcf	status,0,c
  6965   002BCC  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  6966   002BCE  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  6967   002BD0  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  6968   002BD2  3217               	rrcf	___xxtofl@arg^0,f,c
  6969   002BD4                     l9111:
  6970   002BD4  0E00               	movlw	0
  6971   002BD6  1417               	andwf	___xxtofl@arg^0,w,c
  6972   002BD8  6E11               	movwf	??___xxtofl^0,c
  6973   002BDA  0E00               	movlw	0
  6974   002BDC  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  6975   002BDE  6E12               	movwf	(??___xxtofl+1)^0,c
  6976   002BE0  0E00               	movlw	0
  6977   002BE2  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  6978   002BE4  6E13               	movwf	(??___xxtofl+2)^0,c
  6979   002BE6  0EFE               	movlw	254
  6980   002BE8  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  6981   002BEA  6E14               	movwf	(??___xxtofl+3)^0,c
  6982   002BEC  5011               	movf	??___xxtofl^0,w,c
  6983   002BEE  1012               	iorwf	(??___xxtofl+1)^0,w,c
  6984   002BF0  1013               	iorwf	(??___xxtofl+2)^0,w,c
  6985   002BF2  1014               	iorwf	(??___xxtofl+3)^0,w,c
  6986   002BF4  A4D8               	btfss	status,2,c
  6987   002BF6  EFFF  F015         	goto	u9781
  6988   002BFA  EF01  F016         	goto	u9780
  6989   002BFE                     u9781:
  6990   002BFE  EFE4  F015         	goto	l9109
  6991   002C02                     u9780:
  6992   002C02  EF0F  F016         	goto	l2013
  6993   002C06                     l9113:
  6994   002C06  2A16               	incf	___xxtofl@exp^0,f,c
  6995   002C08  0E01               	movlw	1
  6996   002C0A  2617               	addwf	___xxtofl@arg^0,f,c
  6997   002C0C  0E00               	movlw	0
  6998   002C0E  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  6999   002C10  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7000   002C12  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7001   002C14  90D8               	bcf	status,0,c
  7002   002C16  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7003   002C18  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7004   002C1A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7005   002C1C  3217               	rrcf	___xxtofl@arg^0,f,c
  7006   002C1E                     l2013:
  7007   002C1E  0E00               	movlw	0
  7008   002C20  1417               	andwf	___xxtofl@arg^0,w,c
  7009   002C22  6E11               	movwf	??___xxtofl^0,c
  7010   002C24  0E00               	movlw	0
  7011   002C26  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7012   002C28  6E12               	movwf	(??___xxtofl+1)^0,c
  7013   002C2A  0E00               	movlw	0
  7014   002C2C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7015   002C2E  6E13               	movwf	(??___xxtofl+2)^0,c
  7016   002C30  0EFF               	movlw	255
  7017   002C32  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7018   002C34  6E14               	movwf	(??___xxtofl+3)^0,c
  7019   002C36  5011               	movf	??___xxtofl^0,w,c
  7020   002C38  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7021   002C3A  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7022   002C3C  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7023   002C3E  A4D8               	btfss	status,2,c
  7024   002C40  EF24  F016         	goto	u9791
  7025   002C44  EF26  F016         	goto	u9790
  7026   002C48                     u9791:
  7027   002C48  EF03  F016         	goto	l9113
  7028   002C4C                     u9790:
  7029   002C4C  EF2E  F016         	goto	l9121
  7030   002C50                     l9119:
  7031   002C50  0616               	decf	___xxtofl@exp^0,f,c
  7032   002C52  90D8               	bcf	status,0,c
  7033   002C54  3617               	rlcf	___xxtofl@arg^0,f,c
  7034   002C56  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7035   002C58  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7036   002C5A  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7037   002C5C                     l9121:
  7038   002C5C  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7039   002C5E  EF33  F016         	goto	u9801
  7040   002C62  EF35  F016         	goto	u9800
  7041   002C66                     u9801:
  7042   002C66  EF3D  F016         	goto	l2020
  7043   002C6A                     u9800:
  7044   002C6A  0E02               	movlw	2
  7045   002C6C  6016               	cpfslt	___xxtofl@exp^0,c
  7046   002C6E  EF3B  F016         	goto	u9811
  7047   002C72  EF3D  F016         	goto	u9810
  7048   002C76                     u9811:
  7049   002C76  EF28  F016         	goto	l9119
  7050   002C7A                     u9810:
  7051   002C7A                     l2020:
  7052   002C7A  B016               	btfsc	___xxtofl@exp^0,0,c
  7053   002C7C  EF42  F016         	goto	u9821
  7054   002C80  EF44  F016         	goto	u9820
  7055   002C84                     u9821:
  7056   002C84  EF45  F016         	goto	l9127
  7057   002C88                     u9820:
  7058   002C88  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  7059   002C8A                     l9127:
  7060   002C8A  90D8               	bcf	status,0,c
  7061   002C8C  3216               	rrcf	___xxtofl@exp^0,f,c
  7062   002C8E  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  7063   002C92  6A12               	clrf	(??___xxtofl+1)^0,c
  7064   002C94  6A13               	clrf	(??___xxtofl+2)^0,c
  7065   002C96  6A14               	clrf	(??___xxtofl+3)^0,c
  7066   002C98  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  7067   002C9C  6A13               	clrf	(??___xxtofl+2)^0,c
  7068   002C9E  6A12               	clrf	(??___xxtofl+1)^0,c
  7069   002CA0  6A11               	clrf	??___xxtofl^0,c
  7070   002CA2  5011               	movf	??___xxtofl^0,w,c
  7071   002CA4  1217               	iorwf	___xxtofl@arg^0,f,c
  7072   002CA6  5012               	movf	(??___xxtofl+1)^0,w,c
  7073   002CA8  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  7074   002CAA  5013               	movf	(??___xxtofl+2)^0,w,c
  7075   002CAC  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  7076   002CAE  5014               	movf	(??___xxtofl+3)^0,w,c
  7077   002CB0  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  7078   002CB2  5015               	movf	___xxtofl@sign^0,w,c
  7079   002CB4  B4D8               	btfsc	status,2,c
  7080   002CB6  EF5F  F016         	goto	u9831
  7081   002CBA  EF61  F016         	goto	u9830
  7082   002CBE                     u9831:
  7083   002CBE  EF69  F016         	goto	l9137
  7084   002CC2                     u9830:
  7085   002CC2  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7086   002CC4  EF68  F016         	goto	u9840
  7087   002CC8  EF66  F016         	goto	u9841
  7088   002CCC                     u9841:
  7089   002CCC  EF69  F016         	goto	l9137
  7090   002CD0                     u9840:
  7091   002CD0  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  7092   002CD2                     l9137:
  7093   002CD2  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  7094   002CD6  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  7095   002CDA  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  7096   002CDE  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  7097   002CE2                     l2009:
  7098   002CE2  0012               	return		;funcret
  7099   002CE4                     __end_of___xxtofl:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function ___fltol *****************
  7103 ;; Defined at:
  7104 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  f1              4   92[COMRAM] unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  exp1            1  101[COMRAM] unsigned char 
  7109 ;;  sign1           1  100[COMRAM] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  4   92[COMRAM] long 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;Total ram usage:       10 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 4
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_CCP_Init
  7130 ;;		_CCP_PWM_set_DutyCycle
  7131 ;;		_main
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text35
  7136   0035C4                     __ptext35:
  7137                           	callstack 0
  7138   0035C4                     ___fltol:
  7139                           	callstack 24
  7140   0035C4  345F               	rlcf	(___fltol@f1+2)^0,w,c
  7141   0035C6  3460               	rlcf	(___fltol@f1+3)^0,w,c
  7142   0035C8  6E66               	movwf	___fltol@exp1^0,c
  7143   0035CA  5066               	movf	___fltol@exp1^0,w,c
  7144   0035CC  A4D8               	btfss	status,2,c
  7145   0035CE  EFEB  F01A         	goto	u9681
  7146   0035D2  EFED  F01A         	goto	u9680
  7147   0035D6                     u9681:
  7148   0035D6  EFF7  F01A         	goto	l9057
  7149   0035DA                     u9680:
  7150   0035DA                     l9053:
  7151   0035DA  0E00               	movlw	0
  7152   0035DC  6E5D               	movwf	?___fltol^0,c
  7153   0035DE  0E00               	movlw	0
  7154   0035E0  6E5E               	movwf	(?___fltol+1)^0,c
  7155   0035E2  0E00               	movlw	0
  7156   0035E4  6E5F               	movwf	(?___fltol+2)^0,c
  7157   0035E6  0E00               	movlw	0
  7158   0035E8  6E60               	movwf	(?___fltol+3)^0,c
  7159   0035EA  EF64  F01B         	goto	l1648
  7160   0035EE                     l9057:
  7161   0035EE  C05D  F061         	movff	___fltol@f1,??___fltol
  7162   0035F2  C05E  F062         	movff	___fltol@f1+1,??___fltol+1
  7163   0035F6  C05F  F063         	movff	___fltol@f1+2,??___fltol+2
  7164   0035FA  C060  F064         	movff	___fltol@f1+3,??___fltol+3
  7165   0035FE  0E20               	movlw	32
  7166   003600  EF07  F01B         	goto	u9690
  7167   003604                     u9695:
  7168   003604  90D8               	bcf	status,0,c
  7169   003606  3264               	rrcf	(??___fltol+3)^0,f,c
  7170   003608  3263               	rrcf	(??___fltol+2)^0,f,c
  7171   00360A  3262               	rrcf	(??___fltol+1)^0,f,c
  7172   00360C  3261               	rrcf	??___fltol^0,f,c
  7173   00360E                     u9690:
  7174   00360E  2EE8               	decfsz	wreg,f,c
  7175   003610  EF02  F01B         	goto	u9695
  7176   003614  5061               	movf	??___fltol^0,w,c
  7177   003616  6E65               	movwf	___fltol@sign1^0,c
  7178   003618  8E5F               	bsf	(___fltol@f1+2)^0,7,c
  7179   00361A  0EFF               	movlw	255
  7180   00361C  165D               	andwf	___fltol@f1^0,f,c
  7181   00361E  0EFF               	movlw	255
  7182   003620  165E               	andwf	(___fltol@f1+1)^0,f,c
  7183   003622  0EFF               	movlw	255
  7184   003624  165F               	andwf	(___fltol@f1+2)^0,f,c
  7185   003626  0E00               	movlw	0
  7186   003628  1660               	andwf	(___fltol@f1+3)^0,f,c
  7187   00362A  0E96               	movlw	150
  7188   00362C  5E66               	subwf	___fltol@exp1^0,f,c
  7189   00362E  BE66               	btfsc	___fltol@exp1^0,7,c
  7190   003630  EF1E  F01B         	goto	u9700
  7191   003634  EF1C  F01B         	goto	u9701
  7192   003638                     u9701:
  7193   003638  EF34  F01B         	goto	l9077
  7194   00363C                     u9700:
  7195   00363C  5066               	movf	___fltol@exp1^0,w,c
  7196   00363E  0A80               	xorlw	128
  7197   003640  0F97               	addlw	151
  7198   003642  B0D8               	btfsc	status,0,c
  7199   003644  EF26  F01B         	goto	u9711
  7200   003648  EF28  F01B         	goto	u9710
  7201   00364C                     u9711:
  7202   00364C  EF2A  F01B         	goto	l9073
  7203   003650                     u9710:
  7204   003650  EFED  F01A         	goto	l9053
  7205   003654                     l9073:
  7206   003654  90D8               	bcf	status,0,c
  7207   003656  3260               	rrcf	(___fltol@f1+3)^0,f,c
  7208   003658  325F               	rrcf	(___fltol@f1+2)^0,f,c
  7209   00365A  325E               	rrcf	(___fltol@f1+1)^0,f,c
  7210   00365C  325D               	rrcf	___fltol@f1^0,f,c
  7211   00365E  3E66               	incfsz	___fltol@exp1^0,f,c
  7212   003660  EF2A  F01B         	goto	l9073
  7213   003664  EF4C  F01B         	goto	l9087
  7214   003668                     l9077:
  7215   003668  0E1F               	movlw	31
  7216   00366A  6466               	cpfsgt	___fltol@exp1^0,c
  7217   00366C  EF3A  F01B         	goto	u9721
  7218   003670  EF3C  F01B         	goto	u9720
  7219   003674                     u9721:
  7220   003674  EF44  F01B         	goto	l9085
  7221   003678                     u9720:
  7222   003678  EFED  F01A         	goto	l9053
  7223   00367C                     l9083:
  7224   00367C  90D8               	bcf	status,0,c
  7225   00367E  365D               	rlcf	___fltol@f1^0,f,c
  7226   003680  365E               	rlcf	(___fltol@f1+1)^0,f,c
  7227   003682  365F               	rlcf	(___fltol@f1+2)^0,f,c
  7228   003684  3660               	rlcf	(___fltol@f1+3)^0,f,c
  7229   003686  0666               	decf	___fltol@exp1^0,f,c
  7230   003688                     l9085:
  7231   003688  5066               	movf	___fltol@exp1^0,w,c
  7232   00368A  A4D8               	btfss	status,2,c
  7233   00368C  EF4A  F01B         	goto	u9731
  7234   003690  EF4C  F01B         	goto	u9730
  7235   003694                     u9731:
  7236   003694  EF3E  F01B         	goto	l9083
  7237   003698                     u9730:
  7238   003698                     l9087:
  7239   003698  5065               	movf	___fltol@sign1^0,w,c
  7240   00369A  B4D8               	btfsc	status,2,c
  7241   00369C  EF52  F01B         	goto	u9741
  7242   0036A0  EF54  F01B         	goto	u9740
  7243   0036A4                     u9741:
  7244   0036A4  EF5C  F01B         	goto	l9091
  7245   0036A8                     u9740:
  7246   0036A8  1E60               	comf	(___fltol@f1+3)^0,f,c
  7247   0036AA  1E5F               	comf	(___fltol@f1+2)^0,f,c
  7248   0036AC  1E5E               	comf	(___fltol@f1+1)^0,f,c
  7249   0036AE  6C5D               	negf	___fltol@f1^0,c
  7250   0036B0  0E00               	movlw	0
  7251   0036B2  225E               	addwfc	(___fltol@f1+1)^0,f,c
  7252   0036B4  225F               	addwfc	(___fltol@f1+2)^0,f,c
  7253   0036B6  2260               	addwfc	(___fltol@f1+3)^0,f,c
  7254   0036B8                     l9091:
  7255   0036B8  C05D  F05D         	movff	___fltol@f1,?___fltol
  7256   0036BC  C05E  F05E         	movff	___fltol@f1+1,?___fltol+1
  7257   0036C0  C05F  F05F         	movff	___fltol@f1+2,?___fltol+2
  7258   0036C4  C060  F060         	movff	___fltol@f1+3,?___fltol+3
  7259   0036C8                     l1648:
  7260   0036C8  0012               	return		;funcret
  7261   0036CA                     __end_of___fltol:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function ___flmul *****************
  7265 ;; Defined at:
  7266 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  b               4   26[COMRAM] long 
  7269 ;;  a               4   30[COMRAM] long 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  prod            4   45[COMRAM] struct .
  7272 ;;  grs             4   40[COMRAM] unsigned long 
  7273 ;;  temp            2   49[COMRAM] struct .
  7274 ;;  bexp            1   44[COMRAM] unsigned char 
  7275 ;;  aexp            1   39[COMRAM] unsigned char 
  7276 ;;  sign            1   38[COMRAM] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  4   26[COMRAM] unsigned char 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0, prodl, prodh
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7286 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;Total ram usage:       25 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; Hardware stack levels required when called: 4
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_CCP_Init
  7297 ;;		_CCP_PWM_set_DutyCycle
  7298 ;;		_main
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text36
  7303   001A7E                     __ptext36:
  7304                           	callstack 0
  7305   001A7E                     ___flmul:
  7306                           	callstack 24
  7307   001A7E  501E               	movf	(___flmul@b+3)^0,w,c
  7308   001A80  0B80               	andlw	128
  7309   001A82  6E27               	movwf	___flmul@sign^0,c
  7310   001A84  501E               	movf	(___flmul@b+3)^0,w,c
  7311   001A86  241E               	addwf	(___flmul@b+3)^0,w,c
  7312   001A88  6E2D               	movwf	___flmul@bexp^0,c
  7313   001A8A  AE1D               	btfss	(___flmul@b+2)^0,7,c
  7314   001A8C  EF4A  F00D         	goto	u9491
  7315   001A90  EF4C  F00D         	goto	u9490
  7316   001A94                     u9491:
  7317   001A94  EF4D  F00D         	goto	l8927
  7318   001A98                     u9490:
  7319   001A98  802D               	bsf	___flmul@bexp^0,0,c
  7320   001A9A                     l8927:
  7321   001A9A  502D               	movf	___flmul@bexp^0,w,c
  7322   001A9C  B4D8               	btfsc	status,2,c
  7323   001A9E  EF53  F00D         	goto	u9501
  7324   001AA2  EF55  F00D         	goto	u9500
  7325   001AA6                     u9501:
  7326   001AA6  EF68  F00D         	goto	l8935
  7327   001AAA                     u9500:
  7328   001AAA  282D               	incf	___flmul@bexp^0,w,c
  7329   001AAC  A4D8               	btfss	status,2,c
  7330   001AAE  EF5B  F00D         	goto	u9511
  7331   001AB2  EF5D  F00D         	goto	u9510
  7332   001AB6                     u9511:
  7333   001AB6  EF65  F00D         	goto	l8933
  7334   001ABA                     u9510:
  7335   001ABA  0E00               	movlw	0
  7336   001ABC  6E1B               	movwf	___flmul@b^0,c
  7337   001ABE  0E00               	movlw	0
  7338   001AC0  6E1C               	movwf	(___flmul@b+1)^0,c
  7339   001AC2  0E00               	movlw	0
  7340   001AC4  6E1D               	movwf	(___flmul@b+2)^0,c
  7341   001AC6  0E00               	movlw	0
  7342   001AC8  6E1E               	movwf	(___flmul@b+3)^0,c
  7343   001ACA                     l8933:
  7344   001ACA  8E1D               	bsf	(___flmul@b+2)^0,7,c
  7345   001ACC  EF70  F00D         	goto	l8937
  7346   001AD0                     l8935:
  7347   001AD0  0E00               	movlw	0
  7348   001AD2  6E1B               	movwf	___flmul@b^0,c
  7349   001AD4  0E00               	movlw	0
  7350   001AD6  6E1C               	movwf	(___flmul@b+1)^0,c
  7351   001AD8  0E00               	movlw	0
  7352   001ADA  6E1D               	movwf	(___flmul@b+2)^0,c
  7353   001ADC  0E00               	movlw	0
  7354   001ADE  6E1E               	movwf	(___flmul@b+3)^0,c
  7355   001AE0                     l8937:
  7356   001AE0  5022               	movf	(___flmul@a+3)^0,w,c
  7357   001AE2  0B80               	andlw	128
  7358   001AE4  1A27               	xorwf	___flmul@sign^0,f,c
  7359   001AE6  5022               	movf	(___flmul@a+3)^0,w,c
  7360   001AE8  2422               	addwf	(___flmul@a+3)^0,w,c
  7361   001AEA  6E28               	movwf	___flmul@aexp^0,c
  7362   001AEC  AE21               	btfss	(___flmul@a+2)^0,7,c
  7363   001AEE  EF7B  F00D         	goto	u9521
  7364   001AF2  EF7D  F00D         	goto	u9520
  7365   001AF6                     u9521:
  7366   001AF6  EF7E  F00D         	goto	l8945
  7367   001AFA                     u9520:
  7368   001AFA  8028               	bsf	___flmul@aexp^0,0,c
  7369   001AFC                     l8945:
  7370   001AFC  5028               	movf	___flmul@aexp^0,w,c
  7371   001AFE  B4D8               	btfsc	status,2,c
  7372   001B00  EF84  F00D         	goto	u9531
  7373   001B04  EF86  F00D         	goto	u9530
  7374   001B08                     u9531:
  7375   001B08  EF99  F00D         	goto	l8953
  7376   001B0C                     u9530:
  7377   001B0C  2828               	incf	___flmul@aexp^0,w,c
  7378   001B0E  A4D8               	btfss	status,2,c
  7379   001B10  EF8C  F00D         	goto	u9541
  7380   001B14  EF8E  F00D         	goto	u9540
  7381   001B18                     u9541:
  7382   001B18  EF96  F00D         	goto	l8951
  7383   001B1C                     u9540:
  7384   001B1C  0E00               	movlw	0
  7385   001B1E  6E1F               	movwf	___flmul@a^0,c
  7386   001B20  0E00               	movlw	0
  7387   001B22  6E20               	movwf	(___flmul@a+1)^0,c
  7388   001B24  0E00               	movlw	0
  7389   001B26  6E21               	movwf	(___flmul@a+2)^0,c
  7390   001B28  0E00               	movlw	0
  7391   001B2A  6E22               	movwf	(___flmul@a+3)^0,c
  7392   001B2C                     l8951:
  7393   001B2C  8E21               	bsf	(___flmul@a+2)^0,7,c
  7394   001B2E  EFA1  F00D         	goto	l1965
  7395   001B32                     l8953:
  7396   001B32  0E00               	movlw	0
  7397   001B34  6E1F               	movwf	___flmul@a^0,c
  7398   001B36  0E00               	movlw	0
  7399   001B38  6E20               	movwf	(___flmul@a+1)^0,c
  7400   001B3A  0E00               	movlw	0
  7401   001B3C  6E21               	movwf	(___flmul@a+2)^0,c
  7402   001B3E  0E00               	movlw	0
  7403   001B40  6E22               	movwf	(___flmul@a+3)^0,c
  7404   001B42                     l1965:
  7405   001B42  5028               	movf	___flmul@aexp^0,w,c
  7406   001B44  B4D8               	btfsc	status,2,c
  7407   001B46  EFA7  F00D         	goto	u9551
  7408   001B4A  EFA9  F00D         	goto	u9550
  7409   001B4E                     u9551:
  7410   001B4E  EFB1  F00D         	goto	l8957
  7411   001B52                     u9550:
  7412   001B52  502D               	movf	___flmul@bexp^0,w,c
  7413   001B54  A4D8               	btfss	status,2,c
  7414   001B56  EFAF  F00D         	goto	u9561
  7415   001B5A  EFB1  F00D         	goto	u9560
  7416   001B5E                     u9561:
  7417   001B5E  EFBB  F00D         	goto	l8961
  7418   001B62                     u9560:
  7419   001B62                     l8957:
  7420   001B62  0E00               	movlw	0
  7421   001B64  6E1B               	movwf	?___flmul^0,c
  7422   001B66  0E00               	movlw	0
  7423   001B68  6E1C               	movwf	(?___flmul+1)^0,c
  7424   001B6A  0E00               	movlw	0
  7425   001B6C  6E1D               	movwf	(?___flmul+2)^0,c
  7426   001B6E  0E00               	movlw	0
  7427   001B70  6E1E               	movwf	(?___flmul+3)^0,c
  7428   001B72  EF53  F00F         	goto	l1969
  7429   001B76                     l8961:
  7430   001B76  5021               	movf	(___flmul@a+2)^0,w,c
  7431   001B78  021B               	mulwf	___flmul@b^0,c
  7432   001B7A  CFF3 F032          	movff	prodl,___flmul@temp
  7433   001B7E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7434   001B82  5032               	movf	___flmul@temp^0,w,c
  7435   001B84  6E29               	movwf	___flmul@grs^0,c
  7436   001B86  6A2A               	clrf	(___flmul@grs+1)^0,c
  7437   001B88  6A2B               	clrf	(___flmul@grs+2)^0,c
  7438   001B8A  6A2C               	clrf	(___flmul@grs+3)^0,c
  7439   001B8C  5033               	movf	(___flmul@temp+1)^0,w,c
  7440   001B8E  6E2E               	movwf	___flmul@prod^0,c
  7441   001B90  6A2F               	clrf	(___flmul@prod+1)^0,c
  7442   001B92  6A30               	clrf	(___flmul@prod+2)^0,c
  7443   001B94  6A31               	clrf	(___flmul@prod+3)^0,c
  7444   001B96  5020               	movf	(___flmul@a+1)^0,w,c
  7445   001B98  021C               	mulwf	(___flmul@b+1)^0,c
  7446   001B9A  CFF3 F032          	movff	prodl,___flmul@temp
  7447   001B9E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7448   001BA2  5032               	movf	___flmul@temp^0,w,c
  7449   001BA4  2629               	addwf	___flmul@grs^0,f,c
  7450   001BA6  0E00               	movlw	0
  7451   001BA8  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7452   001BAA  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7453   001BAC  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7454   001BAE  5033               	movf	(___flmul@temp+1)^0,w,c
  7455   001BB0  262E               	addwf	___flmul@prod^0,f,c
  7456   001BB2  0E00               	movlw	0
  7457   001BB4  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7458   001BB6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7459   001BB8  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7460   001BBA  501F               	movf	___flmul@a^0,w,c
  7461   001BBC  021D               	mulwf	(___flmul@b+2)^0,c
  7462   001BBE  CFF3 F032          	movff	prodl,___flmul@temp
  7463   001BC2  CFF4 F033          	movff	prodh,___flmul@temp+1
  7464   001BC6  5032               	movf	___flmul@temp^0,w,c
  7465   001BC8  2629               	addwf	___flmul@grs^0,f,c
  7466   001BCA  0E00               	movlw	0
  7467   001BCC  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7468   001BCE  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7469   001BD0  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7470   001BD2  5033               	movf	(___flmul@temp+1)^0,w,c
  7471   001BD4  262E               	addwf	___flmul@prod^0,f,c
  7472   001BD6  0E00               	movlw	0
  7473   001BD8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7474   001BDA  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7475   001BDC  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7476   001BDE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  7477   001BE2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  7478   001BE6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  7479   001BEA  6A29               	clrf	___flmul@grs^0,c
  7480   001BEC  501F               	movf	___flmul@a^0,w,c
  7481   001BEE  021C               	mulwf	(___flmul@b+1)^0,c
  7482   001BF0  CFF3 F032          	movff	prodl,___flmul@temp
  7483   001BF4  CFF4 F033          	movff	prodh,___flmul@temp+1
  7484   001BF8  5032               	movf	___flmul@temp^0,w,c
  7485   001BFA  2629               	addwf	___flmul@grs^0,f,c
  7486   001BFC  5033               	movf	(___flmul@temp+1)^0,w,c
  7487   001BFE  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7488   001C00  0E00               	movlw	0
  7489   001C02  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7490   001C04  0E00               	movlw	0
  7491   001C06  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7492   001C08  5020               	movf	(___flmul@a+1)^0,w,c
  7493   001C0A  021B               	mulwf	___flmul@b^0,c
  7494   001C0C  CFF3 F032          	movff	prodl,___flmul@temp
  7495   001C10  CFF4 F033          	movff	prodh,___flmul@temp+1
  7496   001C14  5032               	movf	___flmul@temp^0,w,c
  7497   001C16  2629               	addwf	___flmul@grs^0,f,c
  7498   001C18  5033               	movf	(___flmul@temp+1)^0,w,c
  7499   001C1A  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7500   001C1C  0E00               	movlw	0
  7501   001C1E  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7502   001C20  0E00               	movlw	0
  7503   001C22  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7504   001C24  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  7505   001C28  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  7506   001C2C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  7507   001C30  6A29               	clrf	___flmul@grs^0,c
  7508   001C32  501F               	movf	___flmul@a^0,w,c
  7509   001C34  021B               	mulwf	___flmul@b^0,c
  7510   001C36  CFF3 F032          	movff	prodl,___flmul@temp
  7511   001C3A  CFF4 F033          	movff	prodh,___flmul@temp+1
  7512   001C3E  5032               	movf	___flmul@temp^0,w,c
  7513   001C40  2629               	addwf	___flmul@grs^0,f,c
  7514   001C42  5033               	movf	(___flmul@temp+1)^0,w,c
  7515   001C44  222A               	addwfc	(___flmul@grs+1)^0,f,c
  7516   001C46  0E00               	movlw	0
  7517   001C48  222B               	addwfc	(___flmul@grs+2)^0,f,c
  7518   001C4A  0E00               	movlw	0
  7519   001C4C  222C               	addwfc	(___flmul@grs+3)^0,f,c
  7520   001C4E  5021               	movf	(___flmul@a+2)^0,w,c
  7521   001C50  021C               	mulwf	(___flmul@b+1)^0,c
  7522   001C52  CFF3 F032          	movff	prodl,___flmul@temp
  7523   001C56  CFF4 F033          	movff	prodh,___flmul@temp+1
  7524   001C5A  5032               	movf	___flmul@temp^0,w,c
  7525   001C5C  262E               	addwf	___flmul@prod^0,f,c
  7526   001C5E  5033               	movf	(___flmul@temp+1)^0,w,c
  7527   001C60  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7528   001C62  0E00               	movlw	0
  7529   001C64  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7530   001C66  0E00               	movlw	0
  7531   001C68  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7532   001C6A  5020               	movf	(___flmul@a+1)^0,w,c
  7533   001C6C  021D               	mulwf	(___flmul@b+2)^0,c
  7534   001C6E  CFF3 F032          	movff	prodl,___flmul@temp
  7535   001C72  CFF4 F033          	movff	prodh,___flmul@temp+1
  7536   001C76  5032               	movf	___flmul@temp^0,w,c
  7537   001C78  262E               	addwf	___flmul@prod^0,f,c
  7538   001C7A  5033               	movf	(___flmul@temp+1)^0,w,c
  7539   001C7C  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7540   001C7E  0E00               	movlw	0
  7541   001C80  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7542   001C82  0E00               	movlw	0
  7543   001C84  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7544   001C86  5021               	movf	(___flmul@a+2)^0,w,c
  7545   001C88  021D               	mulwf	(___flmul@b+2)^0,c
  7546   001C8A  CFF3 F032          	movff	prodl,___flmul@temp
  7547   001C8E  CFF4 F033          	movff	prodh,___flmul@temp+1
  7548   001C92  5032               	movf	___flmul@temp^0,w,c
  7549   001C94  6E23               	movwf	??___flmul^0,c
  7550   001C96  5033               	movf	(___flmul@temp+1)^0,w,c
  7551   001C98  6E24               	movwf	(??___flmul+1)^0,c
  7552   001C9A  6A25               	clrf	(??___flmul+2)^0,c
  7553   001C9C  6A26               	clrf	(??___flmul+3)^0,c
  7554   001C9E  C025  F026         	movff	??___flmul+2,??___flmul+3
  7555   001CA2  C024  F025         	movff	??___flmul+1,??___flmul+2
  7556   001CA6  C023  F024         	movff	??___flmul,??___flmul+1
  7557   001CAA  6A23               	clrf	??___flmul^0,c
  7558   001CAC  5023               	movf	??___flmul^0,w,c
  7559   001CAE  262E               	addwf	___flmul@prod^0,f,c
  7560   001CB0  5024               	movf	(??___flmul+1)^0,w,c
  7561   001CB2  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7562   001CB4  5025               	movf	(??___flmul+2)^0,w,c
  7563   001CB6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7564   001CB8  5026               	movf	(??___flmul+3)^0,w,c
  7565   001CBA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7566   001CBC  C029  F023         	movff	___flmul@grs,??___flmul
  7567   001CC0  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
  7568   001CC4  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
  7569   001CC8  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
  7570   001CCC  0E19               	movlw	25
  7571   001CCE  EF6E  F00E         	goto	u9570
  7572   001CD2                     u9575:
  7573   001CD2  90D8               	bcf	status,0,c
  7574   001CD4  3226               	rrcf	(??___flmul+3)^0,f,c
  7575   001CD6  3225               	rrcf	(??___flmul+2)^0,f,c
  7576   001CD8  3224               	rrcf	(??___flmul+1)^0,f,c
  7577   001CDA  3223               	rrcf	??___flmul^0,f,c
  7578   001CDC                     u9570:
  7579   001CDC  2EE8               	decfsz	wreg,f,c
  7580   001CDE  EF69  F00E         	goto	u9575
  7581   001CE2  5023               	movf	??___flmul^0,w,c
  7582   001CE4  262E               	addwf	___flmul@prod^0,f,c
  7583   001CE6  5024               	movf	(??___flmul+1)^0,w,c
  7584   001CE8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7585   001CEA  5025               	movf	(??___flmul+2)^0,w,c
  7586   001CEC  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7587   001CEE  5026               	movf	(??___flmul+3)^0,w,c
  7588   001CF0  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7589   001CF2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  7590   001CF6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  7591   001CFA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  7592   001CFE  6A29               	clrf	___flmul@grs^0,c
  7593   001D00  5028               	movf	___flmul@aexp^0,w,c
  7594   001D02  C02D  F023         	movff	___flmul@bexp,??___flmul
  7595   001D06  6A24               	clrf	(??___flmul+1)^0,c
  7596   001D08  2623               	addwf	??___flmul^0,f,c
  7597   001D0A  0E00               	movlw	0
  7598   001D0C  2224               	addwfc	(??___flmul+1)^0,f,c
  7599   001D0E  0E82               	movlw	130
  7600   001D10  2423               	addwf	??___flmul^0,w,c
  7601   001D12  6E32               	movwf	___flmul@temp^0,c
  7602   001D14  0EFF               	movlw	255
  7603   001D16  2024               	addwfc	(??___flmul+1)^0,w,c
  7604   001D18  6E33               	movwf	(___flmul@temp+1)^0,c
  7605   001D1A  EFA4  F00E         	goto	l9009
  7606   001D1E                     l9003:
  7607   001D1E  90D8               	bcf	status,0,c
  7608   001D20  362E               	rlcf	___flmul@prod^0,f,c
  7609   001D22  362F               	rlcf	(___flmul@prod+1)^0,f,c
  7610   001D24  3630               	rlcf	(___flmul@prod+2)^0,f,c
  7611   001D26  3631               	rlcf	(___flmul@prod+3)^0,f,c
  7612   001D28  AE2C               	btfss	(___flmul@grs+3)^0,7,c
  7613   001D2A  EF99  F00E         	goto	u9581
  7614   001D2E  EF9B  F00E         	goto	u9580
  7615   001D32                     u9581:
  7616   001D32  EF9C  F00E         	goto	l1972
  7617   001D36                     u9580:
  7618   001D36  802E               	bsf	___flmul@prod^0,0,c
  7619   001D38                     l1972:
  7620   001D38  90D8               	bcf	status,0,c
  7621   001D3A  3629               	rlcf	___flmul@grs^0,f,c
  7622   001D3C  362A               	rlcf	(___flmul@grs+1)^0,f,c
  7623   001D3E  362B               	rlcf	(___flmul@grs+2)^0,f,c
  7624   001D40  362C               	rlcf	(___flmul@grs+3)^0,f,c
  7625   001D42  0632               	decf	___flmul@temp^0,f,c
  7626   001D44  A0D8               	btfss	status,0,c
  7627   001D46  0633               	decf	(___flmul@temp+1)^0,f,c
  7628   001D48                     l9009:
  7629   001D48  AE30               	btfss	(___flmul@prod+2)^0,7,c
  7630   001D4A  EFA9  F00E         	goto	u9591
  7631   001D4E  EFAB  F00E         	goto	u9590
  7632   001D52                     u9591:
  7633   001D52  EF8F  F00E         	goto	l9003
  7634   001D56                     u9590:
  7635   001D56  0E00               	movlw	0
  7636   001D58  6E28               	movwf	___flmul@aexp^0,c
  7637   001D5A  AE2C               	btfss	(___flmul@grs+3)^0,7,c
  7638   001D5C  EFB2  F00E         	goto	u9601
  7639   001D60  EFB4  F00E         	goto	u9600
  7640   001D64                     u9601:
  7641   001D64  EFD8  F00E         	goto	l1974
  7642   001D68                     u9600:
  7643   001D68  0EFF               	movlw	255
  7644   001D6A  1429               	andwf	___flmul@grs^0,w,c
  7645   001D6C  6E23               	movwf	??___flmul^0,c
  7646   001D6E  0EFF               	movlw	255
  7647   001D70  142A               	andwf	(___flmul@grs+1)^0,w,c
  7648   001D72  6E24               	movwf	(??___flmul+1)^0,c
  7649   001D74  0EFF               	movlw	255
  7650   001D76  142B               	andwf	(___flmul@grs+2)^0,w,c
  7651   001D78  6E25               	movwf	(??___flmul+2)^0,c
  7652   001D7A  0E7F               	movlw	127
  7653   001D7C  142C               	andwf	(___flmul@grs+3)^0,w,c
  7654   001D7E  6E26               	movwf	(??___flmul+3)^0,c
  7655   001D80  5023               	movf	??___flmul^0,w,c
  7656   001D82  1024               	iorwf	(??___flmul+1)^0,w,c
  7657   001D84  1025               	iorwf	(??___flmul+2)^0,w,c
  7658   001D86  1026               	iorwf	(??___flmul+3)^0,w,c
  7659   001D88  B4D8               	btfsc	status,2,c
  7660   001D8A  EFC9  F00E         	goto	u9611
  7661   001D8E  EFCB  F00E         	goto	u9610
  7662   001D92                     u9611:
  7663   001D92  EFCF  F00E         	goto	l1975
  7664   001D96                     u9610:
  7665   001D96                     l9017:
  7666   001D96  0E01               	movlw	1
  7667   001D98  6E28               	movwf	___flmul@aexp^0,c
  7668   001D9A  EFD8  F00E         	goto	l1974
  7669   001D9E                     l1975:
  7670   001D9E  A02E               	btfss	___flmul@prod^0,0,c
  7671   001DA0  EFD4  F00E         	goto	u9621
  7672   001DA4  EFD6  F00E         	goto	u9620
  7673   001DA8                     u9621:
  7674   001DA8  EFD8  F00E         	goto	l1974
  7675   001DAC                     u9620:
  7676   001DAC  EFCB  F00E         	goto	l9017
  7677   001DB0                     l1974:
  7678   001DB0  5028               	movf	___flmul@aexp^0,w,c
  7679   001DB2  B4D8               	btfsc	status,2,c
  7680   001DB4  EFDE  F00E         	goto	u9631
  7681   001DB8  EFE0  F00E         	goto	u9630
  7682   001DBC                     u9631:
  7683   001DBC  EF04  F00F         	goto	l9029
  7684   001DC0                     u9630:
  7685   001DC0  0E01               	movlw	1
  7686   001DC2  262E               	addwf	___flmul@prod^0,f,c
  7687   001DC4  0E00               	movlw	0
  7688   001DC6  222F               	addwfc	(___flmul@prod+1)^0,f,c
  7689   001DC8  2230               	addwfc	(___flmul@prod+2)^0,f,c
  7690   001DCA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  7691   001DCC  A031               	btfss	(___flmul@prod+3)^0,0,c
  7692   001DCE  EFEB  F00E         	goto	u9641
  7693   001DD2  EFED  F00E         	goto	u9640
  7694   001DD6                     u9641:
  7695   001DD6  EF04  F00F         	goto	l9029
  7696   001DDA                     u9640:
  7697   001DDA  C02E  F023         	movff	___flmul@prod,??___flmul
  7698   001DDE  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  7699   001DE2  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  7700   001DE6  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  7701   001DEA  3426               	rlcf	(??___flmul+3)^0,w,c
  7702   001DEC  3226               	rrcf	(??___flmul+3)^0,f,c
  7703   001DEE  3225               	rrcf	(??___flmul+2)^0,f,c
  7704   001DF0  3224               	rrcf	(??___flmul+1)^0,f,c
  7705   001DF2  3223               	rrcf	??___flmul^0,f,c
  7706   001DF4  C023  F02E         	movff	??___flmul,___flmul@prod
  7707   001DF8  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  7708   001DFC  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  7709   001E00  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  7710   001E04  4A32               	infsnz	___flmul@temp^0,f,c
  7711   001E06  2A33               	incf	(___flmul@temp+1)^0,f,c
  7712   001E08                     l9029:
  7713   001E08  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7714   001E0A  EF0F  F00F         	goto	u9651
  7715   001E0E  5033               	movf	(___flmul@temp+1)^0,w,c
  7716   001E10  E108               	bnz	u9650
  7717   001E12  2832               	incf	___flmul@temp^0,w,c
  7718   001E14  A0D8               	btfss	status,0,c
  7719   001E16  EF0F  F00F         	goto	u9651
  7720   001E1A  EF11  F00F         	goto	u9650
  7721   001E1E                     u9651:
  7722   001E1E  EF1B  F00F         	goto	l9033
  7723   001E22                     u9650:
  7724   001E22  0E00               	movlw	0
  7725   001E24  6E2E               	movwf	___flmul@prod^0,c
  7726   001E26  0E00               	movlw	0
  7727   001E28  6E2F               	movwf	(___flmul@prod+1)^0,c
  7728   001E2A  0E80               	movlw	128
  7729   001E2C  6E30               	movwf	(___flmul@prod+2)^0,c
  7730   001E2E  0E7F               	movlw	127
  7731   001E30  6E31               	movwf	(___flmul@prod+3)^0,c
  7732   001E32  EF49  F00F         	goto	l9045
  7733   001E36                     l9033:
  7734   001E36  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  7735   001E38  EF28  F00F         	goto	u9660
  7736   001E3C  5033               	movf	(___flmul@temp+1)^0,w,c
  7737   001E3E  E106               	bnz	u9661
  7738   001E40  0432               	decf	___flmul@temp^0,w,c
  7739   001E42  B0D8               	btfsc	status,0,c
  7740   001E44  EF26  F00F         	goto	u9661
  7741   001E48  EF28  F00F         	goto	u9660
  7742   001E4C                     u9661:
  7743   001E4C  EF34  F00F         	goto	l1982
  7744   001E50                     u9660:
  7745   001E50  0E00               	movlw	0
  7746   001E52  6E2E               	movwf	___flmul@prod^0,c
  7747   001E54  0E00               	movlw	0
  7748   001E56  6E2F               	movwf	(___flmul@prod+1)^0,c
  7749   001E58  0E00               	movlw	0
  7750   001E5A  6E30               	movwf	(___flmul@prod+2)^0,c
  7751   001E5C  0E00               	movlw	0
  7752   001E5E  6E31               	movwf	(___flmul@prod+3)^0,c
  7753   001E60  0E00               	movlw	0
  7754   001E62  6E27               	movwf	___flmul@sign^0,c
  7755   001E64  EF49  F00F         	goto	l9045
  7756   001E68                     l1982:
  7757   001E68  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  7758   001E6C  0EFF               	movlw	255
  7759   001E6E  162E               	andwf	___flmul@prod^0,f,c
  7760   001E70  0EFF               	movlw	255
  7761   001E72  162F               	andwf	(___flmul@prod+1)^0,f,c
  7762   001E74  0E7F               	movlw	127
  7763   001E76  1630               	andwf	(___flmul@prod+2)^0,f,c
  7764   001E78  0E00               	movlw	0
  7765   001E7A  1631               	andwf	(___flmul@prod+3)^0,f,c
  7766   001E7C  A02D               	btfss	___flmul@bexp^0,0,c
  7767   001E7E  EF43  F00F         	goto	u9671
  7768   001E82  EF45  F00F         	goto	u9670
  7769   001E86                     u9671:
  7770   001E86  EF46  F00F         	goto	l9043
  7771   001E8A                     u9670:
  7772   001E8A  8E30               	bsf	(___flmul@prod+2)^0,7,c
  7773   001E8C                     l9043:
  7774   001E8C  90D8               	bcf	status,0,c
  7775   001E8E  302D               	rrcf	___flmul@bexp^0,w,c
  7776   001E90  6E31               	movwf	(___flmul@prod+3)^0,c
  7777   001E92                     l9045:
  7778   001E92  5027               	movf	___flmul@sign^0,w,c
  7779   001E94  1231               	iorwf	(___flmul@prod+3)^0,f,c
  7780   001E96  C02E  F01B         	movff	___flmul@prod,?___flmul
  7781   001E9A  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  7782   001E9E  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  7783   001EA2  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  7784   001EA6                     l1969:
  7785   001EA6  0012               	return		;funcret
  7786   001EA8                     __end_of___flmul:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function ___fldiv *****************
  7790 ;; Defined at:
  7791 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  b               4   51[COMRAM] unsigned char 
  7794 ;;  a               4   55[COMRAM] unsigned char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  grs             4   70[COMRAM] unsigned long 
  7797 ;;  rem             4   63[COMRAM] unsigned long 
  7798 ;;  new_exp         2   68[COMRAM] short 
  7799 ;;  aexp            1   75[COMRAM] unsigned char 
  7800 ;;  bexp            1   74[COMRAM] unsigned char 
  7801 ;;  sign            1   67[COMRAM] unsigned char 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  4   51[COMRAM] unsigned char 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7811 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;Total ram usage:       25 bytes
  7816 ;; Hardware stack levels used: 1
  7817 ;; Hardware stack levels required when called: 4
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_CCP_Init
  7822 ;;		_CCP_PWM_set_DutyCycle
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text37
  7827   001EA8                     __ptext37:
  7828                           	callstack 0
  7829   001EA8                     ___fldiv:
  7830                           	callstack 24
  7831   001EA8  5037               	movf	(___fldiv@b+3)^0,w,c
  7832   001EAA  0B80               	andlw	128
  7833   001EAC  6E44               	movwf	___fldiv@sign^0,c
  7834   001EAE  5037               	movf	(___fldiv@b+3)^0,w,c
  7835   001EB0  2437               	addwf	(___fldiv@b+3)^0,w,c
  7836   001EB2  6E4B               	movwf	___fldiv@bexp^0,c
  7837   001EB4  AE36               	btfss	(___fldiv@b+2)^0,7,c
  7838   001EB6  EF5F  F00F         	goto	u9261
  7839   001EBA  EF61  F00F         	goto	u9260
  7840   001EBE                     u9261:
  7841   001EBE  EF62  F00F         	goto	l8789
  7842   001EC2                     u9260:
  7843   001EC2  804B               	bsf	___fldiv@bexp^0,0,c
  7844   001EC4                     l8789:
  7845   001EC4  504B               	movf	___fldiv@bexp^0,w,c
  7846   001EC6  B4D8               	btfsc	status,2,c
  7847   001EC8  EF68  F00F         	goto	u9271
  7848   001ECC  EF6A  F00F         	goto	u9270
  7849   001ED0                     u9271:
  7850   001ED0  EF7F  F00F         	goto	l8799
  7851   001ED4                     u9270:
  7852   001ED4  284B               	incf	___fldiv@bexp^0,w,c
  7853   001ED6  A4D8               	btfss	status,2,c
  7854   001ED8  EF70  F00F         	goto	u9281
  7855   001EDC  EF72  F00F         	goto	u9280
  7856   001EE0                     u9281:
  7857   001EE0  EF7A  F00F         	goto	l8795
  7858   001EE4                     u9280:
  7859   001EE4  0E00               	movlw	0
  7860   001EE6  6E34               	movwf	___fldiv@b^0,c
  7861   001EE8  0E00               	movlw	0
  7862   001EEA  6E35               	movwf	(___fldiv@b+1)^0,c
  7863   001EEC  0E00               	movlw	0
  7864   001EEE  6E36               	movwf	(___fldiv@b+2)^0,c
  7865   001EF0  0E00               	movlw	0
  7866   001EF2  6E37               	movwf	(___fldiv@b+3)^0,c
  7867   001EF4                     l8795:
  7868   001EF4  8E36               	bsf	(___fldiv@b+2)^0,7,c
  7869   001EF6  0E00               	movlw	0
  7870   001EF8  6E37               	movwf	(___fldiv@b+3)^0,c
  7871   001EFA  EF87  F00F         	goto	l8801
  7872   001EFE                     l8799:
  7873   001EFE  0E00               	movlw	0
  7874   001F00  6E34               	movwf	___fldiv@b^0,c
  7875   001F02  0E00               	movlw	0
  7876   001F04  6E35               	movwf	(___fldiv@b+1)^0,c
  7877   001F06  0E00               	movlw	0
  7878   001F08  6E36               	movwf	(___fldiv@b+2)^0,c
  7879   001F0A  0E00               	movlw	0
  7880   001F0C  6E37               	movwf	(___fldiv@b+3)^0,c
  7881   001F0E                     l8801:
  7882   001F0E  503B               	movf	(___fldiv@a+3)^0,w,c
  7883   001F10  0B80               	andlw	128
  7884   001F12  1A44               	xorwf	___fldiv@sign^0,f,c
  7885   001F14  503B               	movf	(___fldiv@a+3)^0,w,c
  7886   001F16  243B               	addwf	(___fldiv@a+3)^0,w,c
  7887   001F18  6E4C               	movwf	___fldiv@aexp^0,c
  7888   001F1A  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  7889   001F1C  EF92  F00F         	goto	u9291
  7890   001F20  EF94  F00F         	goto	u9290
  7891   001F24                     u9291:
  7892   001F24  EF95  F00F         	goto	l8809
  7893   001F28                     u9290:
  7894   001F28  804C               	bsf	___fldiv@aexp^0,0,c
  7895   001F2A                     l8809:
  7896   001F2A  504C               	movf	___fldiv@aexp^0,w,c
  7897   001F2C  B4D8               	btfsc	status,2,c
  7898   001F2E  EF9B  F00F         	goto	u9301
  7899   001F32  EF9D  F00F         	goto	u9300
  7900   001F36                     u9301:
  7901   001F36  EFB2  F00F         	goto	l8819
  7902   001F3A                     u9300:
  7903   001F3A  284C               	incf	___fldiv@aexp^0,w,c
  7904   001F3C  A4D8               	btfss	status,2,c
  7905   001F3E  EFA3  F00F         	goto	u9311
  7906   001F42  EFA5  F00F         	goto	u9310
  7907   001F46                     u9311:
  7908   001F46  EFAD  F00F         	goto	l8815
  7909   001F4A                     u9310:
  7910   001F4A  0E00               	movlw	0
  7911   001F4C  6E38               	movwf	___fldiv@a^0,c
  7912   001F4E  0E00               	movlw	0
  7913   001F50  6E39               	movwf	(___fldiv@a+1)^0,c
  7914   001F52  0E00               	movlw	0
  7915   001F54  6E3A               	movwf	(___fldiv@a+2)^0,c
  7916   001F56  0E00               	movlw	0
  7917   001F58  6E3B               	movwf	(___fldiv@a+3)^0,c
  7918   001F5A                     l8815:
  7919   001F5A  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  7920   001F5C  0E00               	movlw	0
  7921   001F5E  6E3B               	movwf	(___fldiv@a+3)^0,c
  7922   001F60  EFBA  F00F         	goto	l8821
  7923   001F64                     l8819:
  7924   001F64  0E00               	movlw	0
  7925   001F66  6E38               	movwf	___fldiv@a^0,c
  7926   001F68  0E00               	movlw	0
  7927   001F6A  6E39               	movwf	(___fldiv@a+1)^0,c
  7928   001F6C  0E00               	movlw	0
  7929   001F6E  6E3A               	movwf	(___fldiv@a+2)^0,c
  7930   001F70  0E00               	movlw	0
  7931   001F72  6E3B               	movwf	(___fldiv@a+3)^0,c
  7932   001F74                     l8821:
  7933   001F74  5038               	movf	___fldiv@a^0,w,c
  7934   001F76  1039               	iorwf	(___fldiv@a+1)^0,w,c
  7935   001F78  103A               	iorwf	(___fldiv@a+2)^0,w,c
  7936   001F7A  103B               	iorwf	(___fldiv@a+3)^0,w,c
  7937   001F7C  A4D8               	btfss	status,2,c
  7938   001F7E  EFC3  F00F         	goto	u9321
  7939   001F82  EFC5  F00F         	goto	u9320
  7940   001F86                     u9321:
  7941   001F86  EFDD  F00F         	goto	l8833
  7942   001F8A                     u9320:
  7943   001F8A  0E00               	movlw	0
  7944   001F8C  6E34               	movwf	___fldiv@b^0,c
  7945   001F8E  0E00               	movlw	0
  7946   001F90  6E35               	movwf	(___fldiv@b+1)^0,c
  7947   001F92  0E00               	movlw	0
  7948   001F94  6E36               	movwf	(___fldiv@b+2)^0,c
  7949   001F96  0E00               	movlw	0
  7950   001F98  6E37               	movwf	(___fldiv@b+3)^0,c
  7951   001F9A  0E80               	movlw	128
  7952   001F9C  1236               	iorwf	(___fldiv@b+2)^0,f,c
  7953   001F9E  0E7F               	movlw	127
  7954   001FA0  1237               	iorwf	(___fldiv@b+3)^0,f,c
  7955   001FA2                     l8827:
  7956   001FA2  5044               	movf	___fldiv@sign^0,w,c
  7957   001FA4  1237               	iorwf	(___fldiv@b+3)^0,f,c
  7958   001FA6  C034  F034         	movff	___fldiv@b,?___fldiv
  7959   001FAA  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  7960   001FAE  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  7961   001FB2  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  7962   001FB6  EF20  F011         	goto	l1933
  7963   001FBA                     l8833:
  7964   001FBA  504B               	movf	___fldiv@bexp^0,w,c
  7965   001FBC  A4D8               	btfss	status,2,c
  7966   001FBE  EFE3  F00F         	goto	u9331
  7967   001FC2  EFE5  F00F         	goto	u9330
  7968   001FC6                     u9331:
  7969   001FC6  EFEF  F00F         	goto	l8841
  7970   001FCA                     u9330:
  7971   001FCA  0E00               	movlw	0
  7972   001FCC  6E34               	movwf	?___fldiv^0,c
  7973   001FCE  0E00               	movlw	0
  7974   001FD0  6E35               	movwf	(?___fldiv+1)^0,c
  7975   001FD2  0E00               	movlw	0
  7976   001FD4  6E36               	movwf	(?___fldiv+2)^0,c
  7977   001FD6  0E00               	movlw	0
  7978   001FD8  6E37               	movwf	(?___fldiv+3)^0,c
  7979   001FDA  EF20  F011         	goto	l1933
  7980   001FDE                     l8841:
  7981   001FDE  504C               	movf	___fldiv@aexp^0,w,c
  7982   001FE0  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  7983   001FE4  6A3D               	clrf	(??___fldiv+1)^0,c
  7984   001FE6  5E3C               	subwf	??___fldiv^0,f,c
  7985   001FE8  0E00               	movlw	0
  7986   001FEA  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  7987   001FEC  0E7F               	movlw	127
  7988   001FEE  243C               	addwf	??___fldiv^0,w,c
  7989   001FF0  6E45               	movwf	___fldiv@new_exp^0,c
  7990   001FF2  0E00               	movlw	0
  7991   001FF4  203D               	addwfc	(??___fldiv+1)^0,w,c
  7992   001FF6  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  7993   001FF8  C034  F040         	movff	___fldiv@b,___fldiv@rem
  7994   001FFC  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  7995   002000  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  7996   002004  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  7997   002008  0E00               	movlw	0
  7998   00200A  6E34               	movwf	___fldiv@b^0,c
  7999   00200C  0E00               	movlw	0
  8000   00200E  6E35               	movwf	(___fldiv@b+1)^0,c
  8001   002010  0E00               	movlw	0
  8002   002012  6E36               	movwf	(___fldiv@b+2)^0,c
  8003   002014  0E00               	movlw	0
  8004   002016  6E37               	movwf	(___fldiv@b+3)^0,c
  8005   002018  0E00               	movlw	0
  8006   00201A  6E47               	movwf	___fldiv@grs^0,c
  8007   00201C  0E00               	movlw	0
  8008   00201E  6E48               	movwf	(___fldiv@grs+1)^0,c
  8009   002020  0E00               	movlw	0
  8010   002022  6E49               	movwf	(___fldiv@grs+2)^0,c
  8011   002024  0E00               	movlw	0
  8012   002026  6E4A               	movwf	(___fldiv@grs+3)^0,c
  8013   002028  0E00               	movlw	0
  8014   00202A  6E4C               	movwf	___fldiv@aexp^0,c
  8015   00202C  EF50  F010         	goto	l1935
  8016   002030                     l8851:
  8017   002030  504C               	movf	___fldiv@aexp^0,w,c
  8018   002032  B4D8               	btfsc	status,2,c
  8019   002034  EF1E  F010         	goto	u9341
  8020   002038  EF20  F010         	goto	u9340
  8021   00203C                     u9341:
  8022   00203C  EF37  F010         	goto	l8859
  8023   002040                     u9340:
  8024   002040  90D8               	bcf	status,0,c
  8025   002042  3640               	rlcf	___fldiv@rem^0,f,c
  8026   002044  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  8027   002046  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  8028   002048  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  8029   00204A  90D8               	bcf	status,0,c
  8030   00204C  3634               	rlcf	___fldiv@b^0,f,c
  8031   00204E  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8032   002050  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8033   002052  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8034   002054  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8035   002056  EF2F  F010         	goto	u9351
  8036   00205A  EF31  F010         	goto	u9350
  8037   00205E                     u9351:
  8038   00205E  EF32  F010         	goto	l1938
  8039   002062                     u9350:
  8040   002062  8034               	bsf	___fldiv@b^0,0,c
  8041   002064                     l1938:
  8042   002064  90D8               	bcf	status,0,c
  8043   002066  3647               	rlcf	___fldiv@grs^0,f,c
  8044   002068  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8045   00206A  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8046   00206C  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8047   00206E                     l8859:
  8048   00206E  5038               	movf	___fldiv@a^0,w,c
  8049   002070  5C40               	subwf	___fldiv@rem^0,w,c
  8050   002072  5039               	movf	(___fldiv@a+1)^0,w,c
  8051   002074  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  8052   002076  503A               	movf	(___fldiv@a+2)^0,w,c
  8053   002078  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  8054   00207A  503B               	movf	(___fldiv@a+3)^0,w,c
  8055   00207C  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  8056   00207E  A0D8               	btfss	status,0,c
  8057   002080  EF44  F010         	goto	u9361
  8058   002084  EF46  F010         	goto	u9360
  8059   002088                     u9361:
  8060   002088  EF4F  F010         	goto	l8865
  8061   00208C                     u9360:
  8062   00208C  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  8063   00208E  5038               	movf	___fldiv@a^0,w,c
  8064   002090  5E40               	subwf	___fldiv@rem^0,f,c
  8065   002092  5039               	movf	(___fldiv@a+1)^0,w,c
  8066   002094  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  8067   002096  503A               	movf	(___fldiv@a+2)^0,w,c
  8068   002098  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  8069   00209A  503B               	movf	(___fldiv@a+3)^0,w,c
  8070   00209C  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  8071   00209E                     l8865:
  8072   00209E  2A4C               	incf	___fldiv@aexp^0,f,c
  8073   0020A0                     l1935:
  8074   0020A0  0E19               	movlw	25
  8075   0020A2  644C               	cpfsgt	___fldiv@aexp^0,c
  8076   0020A4  EF56  F010         	goto	u9371
  8077   0020A8  EF58  F010         	goto	u9370
  8078   0020AC                     u9371:
  8079   0020AC  EF18  F010         	goto	l8851
  8080   0020B0                     u9370:
  8081   0020B0  5040               	movf	___fldiv@rem^0,w,c
  8082   0020B2  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  8083   0020B4  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  8084   0020B6  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  8085   0020B8  B4D8               	btfsc	status,2,c
  8086   0020BA  EF61  F010         	goto	u9381
  8087   0020BE  EF63  F010         	goto	u9380
  8088   0020C2                     u9381:
  8089   0020C2  EF7B  F010         	goto	l8877
  8090   0020C6                     u9380:
  8091   0020C6  8047               	bsf	___fldiv@grs^0,0,c
  8092   0020C8  EF7B  F010         	goto	l8877
  8093   0020CC                     l8871:
  8094   0020CC  90D8               	bcf	status,0,c
  8095   0020CE  3634               	rlcf	___fldiv@b^0,f,c
  8096   0020D0  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8097   0020D2  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8098   0020D4  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8099   0020D6  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8100   0020D8  EF70  F010         	goto	u9391
  8101   0020DC  EF72  F010         	goto	u9390
  8102   0020E0                     u9391:
  8103   0020E0  EF73  F010         	goto	l1944
  8104   0020E4                     u9390:
  8105   0020E4  8034               	bsf	___fldiv@b^0,0,c
  8106   0020E6                     l1944:
  8107   0020E6  90D8               	bcf	status,0,c
  8108   0020E8  3647               	rlcf	___fldiv@grs^0,f,c
  8109   0020EA  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8110   0020EC  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8111   0020EE  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8112   0020F0  0645               	decf	___fldiv@new_exp^0,f,c
  8113   0020F2  A0D8               	btfss	status,0,c
  8114   0020F4  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  8115   0020F6                     l8877:
  8116   0020F6  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8117   0020F8  EF80  F010         	goto	u9401
  8118   0020FC  EF82  F010         	goto	u9400
  8119   002100                     u9401:
  8120   002100  EF66  F010         	goto	l8871
  8121   002104                     u9400:
  8122   002104  0E00               	movlw	0
  8123   002106  6E4C               	movwf	___fldiv@aexp^0,c
  8124   002108  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8125   00210A  EF89  F010         	goto	u9411
  8126   00210E  EF8B  F010         	goto	u9410
  8127   002112                     u9411:
  8128   002112  EFAF  F010         	goto	l1946
  8129   002116                     u9410:
  8130   002116  0EFF               	movlw	255
  8131   002118  1447               	andwf	___fldiv@grs^0,w,c
  8132   00211A  6E3C               	movwf	??___fldiv^0,c
  8133   00211C  0EFF               	movlw	255
  8134   00211E  1448               	andwf	(___fldiv@grs+1)^0,w,c
  8135   002120  6E3D               	movwf	(??___fldiv+1)^0,c
  8136   002122  0EFF               	movlw	255
  8137   002124  1449               	andwf	(___fldiv@grs+2)^0,w,c
  8138   002126  6E3E               	movwf	(??___fldiv+2)^0,c
  8139   002128  0E7F               	movlw	127
  8140   00212A  144A               	andwf	(___fldiv@grs+3)^0,w,c
  8141   00212C  6E3F               	movwf	(??___fldiv+3)^0,c
  8142   00212E  503C               	movf	??___fldiv^0,w,c
  8143   002130  103D               	iorwf	(??___fldiv+1)^0,w,c
  8144   002132  103E               	iorwf	(??___fldiv+2)^0,w,c
  8145   002134  103F               	iorwf	(??___fldiv+3)^0,w,c
  8146   002136  B4D8               	btfsc	status,2,c
  8147   002138  EFA0  F010         	goto	u9421
  8148   00213C  EFA2  F010         	goto	u9420
  8149   002140                     u9421:
  8150   002140  EFA6  F010         	goto	l1947
  8151   002144                     u9420:
  8152   002144                     l8885:
  8153   002144  0E01               	movlw	1
  8154   002146  6E4C               	movwf	___fldiv@aexp^0,c
  8155   002148  EFAF  F010         	goto	l1946
  8156   00214C                     l1947:
  8157   00214C  A034               	btfss	___fldiv@b^0,0,c
  8158   00214E  EFAB  F010         	goto	u9431
  8159   002152  EFAD  F010         	goto	u9430
  8160   002156                     u9431:
  8161   002156  EFAF  F010         	goto	l1946
  8162   00215A                     u9430:
  8163   00215A  EFA2  F010         	goto	l8885
  8164   00215E                     l1946:
  8165   00215E  504C               	movf	___fldiv@aexp^0,w,c
  8166   002160  B4D8               	btfsc	status,2,c
  8167   002162  EFB5  F010         	goto	u9441
  8168   002166  EFB7  F010         	goto	u9440
  8169   00216A                     u9441:
  8170   00216A  EFDB  F010         	goto	l8897
  8171   00216E                     u9440:
  8172   00216E  0E01               	movlw	1
  8173   002170  2634               	addwf	___fldiv@b^0,f,c
  8174   002172  0E00               	movlw	0
  8175   002174  2235               	addwfc	(___fldiv@b+1)^0,f,c
  8176   002176  2236               	addwfc	(___fldiv@b+2)^0,f,c
  8177   002178  2237               	addwfc	(___fldiv@b+3)^0,f,c
  8178   00217A  A037               	btfss	(___fldiv@b+3)^0,0,c
  8179   00217C  EFC2  F010         	goto	u9451
  8180   002180  EFC4  F010         	goto	u9450
  8181   002184                     u9451:
  8182   002184  EFDB  F010         	goto	l8897
  8183   002188                     u9450:
  8184   002188  C034  F03C         	movff	___fldiv@b,??___fldiv
  8185   00218C  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  8186   002190  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  8187   002194  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  8188   002198  343F               	rlcf	(??___fldiv+3)^0,w,c
  8189   00219A  323F               	rrcf	(??___fldiv+3)^0,f,c
  8190   00219C  323E               	rrcf	(??___fldiv+2)^0,f,c
  8191   00219E  323D               	rrcf	(??___fldiv+1)^0,f,c
  8192   0021A0  323C               	rrcf	??___fldiv^0,f,c
  8193   0021A2  C03C  F034         	movff	??___fldiv,___fldiv@b
  8194   0021A6  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  8195   0021AA  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  8196   0021AE  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  8197   0021B2  4A45               	infsnz	___fldiv@new_exp^0,f,c
  8198   0021B4  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  8199   0021B6                     l8897:
  8200   0021B6  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8201   0021B8  EFE6  F010         	goto	u9461
  8202   0021BC  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8203   0021BE  E108               	bnz	u9460
  8204   0021C0  2845               	incf	___fldiv@new_exp^0,w,c
  8205   0021C2  A0D8               	btfss	status,0,c
  8206   0021C4  EFE6  F010         	goto	u9461
  8207   0021C8  EFE8  F010         	goto	u9460
  8208   0021CC                     u9461:
  8209   0021CC  EFF3  F010         	goto	l8901
  8210   0021D0                     u9460:
  8211   0021D0  0E00               	movlw	0
  8212   0021D2  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8213   0021D4  6845               	setf	___fldiv@new_exp^0,c
  8214   0021D6  0E00               	movlw	0
  8215   0021D8  6E34               	movwf	___fldiv@b^0,c
  8216   0021DA  0E00               	movlw	0
  8217   0021DC  6E35               	movwf	(___fldiv@b+1)^0,c
  8218   0021DE  0E00               	movlw	0
  8219   0021E0  6E36               	movwf	(___fldiv@b+2)^0,c
  8220   0021E2  0E00               	movlw	0
  8221   0021E4  6E37               	movwf	(___fldiv@b+3)^0,c
  8222   0021E6                     l8901:
  8223   0021E6  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8224   0021E8  EF00  F011         	goto	u9470
  8225   0021EC  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8226   0021EE  E106               	bnz	u9471
  8227   0021F0  0445               	decf	___fldiv@new_exp^0,w,c
  8228   0021F2  B0D8               	btfsc	status,0,c
  8229   0021F4  EFFE  F010         	goto	u9471
  8230   0021F8  EF00  F011         	goto	u9470
  8231   0021FC                     u9471:
  8232   0021FC  EF0E  F011         	goto	l8905
  8233   002200                     u9470:
  8234   002200  0E00               	movlw	0
  8235   002202  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8236   002204  0E00               	movlw	0
  8237   002206  6E45               	movwf	___fldiv@new_exp^0,c
  8238   002208  0E00               	movlw	0
  8239   00220A  6E34               	movwf	___fldiv@b^0,c
  8240   00220C  0E00               	movlw	0
  8241   00220E  6E35               	movwf	(___fldiv@b+1)^0,c
  8242   002210  0E00               	movlw	0
  8243   002212  6E36               	movwf	(___fldiv@b+2)^0,c
  8244   002214  0E00               	movlw	0
  8245   002216  6E37               	movwf	(___fldiv@b+3)^0,c
  8246   002218  0E00               	movlw	0
  8247   00221A  6E44               	movwf	___fldiv@sign^0,c
  8248   00221C                     l8905:
  8249   00221C  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  8250   002220  A04B               	btfss	___fldiv@bexp^0,0,c
  8251   002222  EF15  F011         	goto	u9481
  8252   002226  EF17  F011         	goto	u9480
  8253   00222A                     u9481:
  8254   00222A  EF1A  F011         	goto	l8911
  8255   00222E                     u9480:
  8256   00222E  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8257   002230  EF1B  F011         	goto	l8913
  8258   002234                     l8911:
  8259   002234  9E36               	bcf	(___fldiv@b+2)^0,7,c
  8260   002236                     l8913:
  8261   002236  90D8               	bcf	status,0,c
  8262   002238  304B               	rrcf	___fldiv@bexp^0,w,c
  8263   00223A  6E37               	movwf	(___fldiv@b+3)^0,c
  8264   00223C  EFD1  F00F         	goto	l8827
  8265   002240                     l1933:
  8266   002240  0012               	return		;funcret
  8267   002242                     __end_of___fldiv:
  8268                           	callstack 0
  8269                           
  8270 ;; *************** function ___fladd *****************
  8271 ;; Defined at:
  8272 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  b               4   76[COMRAM] unsigned char 
  8275 ;;  a               4   80[COMRAM] unsigned char 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  grs             1   91[COMRAM] unsigned char 
  8278 ;;  bexp            1   90[COMRAM] unsigned char 
  8279 ;;  aexp            1   89[COMRAM] unsigned char 
  8280 ;;  signs           1   88[COMRAM] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  4   76[COMRAM] unsigned char 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8290 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;Total ram usage:       16 bytes
  8295 ;; Hardware stack levels used: 1
  8296 ;; Hardware stack levels required when called: 4
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_CCP_Init
  8301 ;;		_CCP_PWM_set_DutyCycle
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text38
  8306   0015BE                     __ptext38:
  8307                           	callstack 0
  8308   0015BE                     ___fladd:
  8309                           	callstack 24
  8310   0015BE  5050               	movf	(___fladd@b+3)^0,w,c
  8311   0015C0  0B80               	andlw	128
  8312   0015C2  6E59               	movwf	___fladd@signs^0,c
  8313   0015C4  5050               	movf	(___fladd@b+3)^0,w,c
  8314   0015C6  2450               	addwf	(___fladd@b+3)^0,w,c
  8315   0015C8  6E5B               	movwf	___fladd@bexp^0,c
  8316   0015CA  AE4F               	btfss	(___fladd@b+2)^0,7,c
  8317   0015CC  EFEA  F00A         	goto	u8871
  8318   0015D0  EFEC  F00A         	goto	u8870
  8319   0015D4                     u8871:
  8320   0015D4  EFED  F00A         	goto	l8587
  8321   0015D8                     u8870:
  8322   0015D8  805B               	bsf	___fladd@bexp^0,0,c
  8323   0015DA                     l8587:
  8324   0015DA  505B               	movf	___fladd@bexp^0,w,c
  8325   0015DC  B4D8               	btfsc	status,2,c
  8326   0015DE  EFF3  F00A         	goto	u8881
  8327   0015E2  EFF5  F00A         	goto	u8880
  8328   0015E6                     u8881:
  8329   0015E6  EF0A  F00B         	goto	l8597
  8330   0015EA                     u8880:
  8331   0015EA  285B               	incf	___fladd@bexp^0,w,c
  8332   0015EC  A4D8               	btfss	status,2,c
  8333   0015EE  EFFB  F00A         	goto	u8891
  8334   0015F2  EFFD  F00A         	goto	u8890
  8335   0015F6                     u8891:
  8336   0015F6  EF05  F00B         	goto	l8593
  8337   0015FA                     u8890:
  8338   0015FA  0E00               	movlw	0
  8339   0015FC  6E4D               	movwf	___fladd@b^0,c
  8340   0015FE  0E00               	movlw	0
  8341   001600  6E4E               	movwf	(___fladd@b+1)^0,c
  8342   001602  0E00               	movlw	0
  8343   001604  6E4F               	movwf	(___fladd@b+2)^0,c
  8344   001606  0E00               	movlw	0
  8345   001608  6E50               	movwf	(___fladd@b+3)^0,c
  8346   00160A                     l8593:
  8347   00160A  8E4F               	bsf	(___fladd@b+2)^0,7,c
  8348   00160C  0E00               	movlw	0
  8349   00160E  6E50               	movwf	(___fladd@b+3)^0,c
  8350   001610  EF12  F00B         	goto	l8599
  8351   001614                     l8597:
  8352   001614  0E00               	movlw	0
  8353   001616  6E4D               	movwf	___fladd@b^0,c
  8354   001618  0E00               	movlw	0
  8355   00161A  6E4E               	movwf	(___fladd@b+1)^0,c
  8356   00161C  0E00               	movlw	0
  8357   00161E  6E4F               	movwf	(___fladd@b+2)^0,c
  8358   001620  0E00               	movlw	0
  8359   001622  6E50               	movwf	(___fladd@b+3)^0,c
  8360   001624                     l8599:
  8361   001624  5054               	movf	(___fladd@a+3)^0,w,c
  8362   001626  0B80               	andlw	128
  8363   001628  6E5A               	movwf	___fladd@aexp^0,c
  8364   00162A  5059               	movf	___fladd@signs^0,w,c
  8365   00162C  185A               	xorwf	___fladd@aexp^0,w,c
  8366   00162E  B4D8               	btfsc	status,2,c
  8367   001630  EF1C  F00B         	goto	u8901
  8368   001634  EF1E  F00B         	goto	u8900
  8369   001638                     u8901:
  8370   001638  EF1F  F00B         	goto	l8605
  8371   00163C                     u8900:
  8372   00163C  8C59               	bsf	___fladd@signs^0,6,c
  8373   00163E                     l8605:
  8374   00163E  5054               	movf	(___fladd@a+3)^0,w,c
  8375   001640  2454               	addwf	(___fladd@a+3)^0,w,c
  8376   001642  6E5A               	movwf	___fladd@aexp^0,c
  8377   001644  AE53               	btfss	(___fladd@a+2)^0,7,c
  8378   001646  EF27  F00B         	goto	u8911
  8379   00164A  EF29  F00B         	goto	u8910
  8380   00164E                     u8911:
  8381   00164E  EF2A  F00B         	goto	l8611
  8382   001652                     u8910:
  8383   001652  805A               	bsf	___fladd@aexp^0,0,c
  8384   001654                     l8611:
  8385   001654  505A               	movf	___fladd@aexp^0,w,c
  8386   001656  B4D8               	btfsc	status,2,c
  8387   001658  EF30  F00B         	goto	u8921
  8388   00165C  EF32  F00B         	goto	u8920
  8389   001660                     u8921:
  8390   001660  EF47  F00B         	goto	l8621
  8391   001664                     u8920:
  8392   001664  285A               	incf	___fladd@aexp^0,w,c
  8393   001666  A4D8               	btfss	status,2,c
  8394   001668  EF38  F00B         	goto	u8931
  8395   00166C  EF3A  F00B         	goto	u8930
  8396   001670                     u8931:
  8397   001670  EF42  F00B         	goto	l8617
  8398   001674                     u8930:
  8399   001674  0E00               	movlw	0
  8400   001676  6E51               	movwf	___fladd@a^0,c
  8401   001678  0E00               	movlw	0
  8402   00167A  6E52               	movwf	(___fladd@a+1)^0,c
  8403   00167C  0E00               	movlw	0
  8404   00167E  6E53               	movwf	(___fladd@a+2)^0,c
  8405   001680  0E00               	movlw	0
  8406   001682  6E54               	movwf	(___fladd@a+3)^0,c
  8407   001684                     l8617:
  8408   001684  8E53               	bsf	(___fladd@a+2)^0,7,c
  8409   001686  0E00               	movlw	0
  8410   001688  6E54               	movwf	(___fladd@a+3)^0,c
  8411   00168A  EF4F  F00B         	goto	l8623
  8412   00168E                     l8621:
  8413   00168E  0E00               	movlw	0
  8414   001690  6E51               	movwf	___fladd@a^0,c
  8415   001692  0E00               	movlw	0
  8416   001694  6E52               	movwf	(___fladd@a+1)^0,c
  8417   001696  0E00               	movlw	0
  8418   001698  6E53               	movwf	(___fladd@a+2)^0,c
  8419   00169A  0E00               	movlw	0
  8420   00169C  6E54               	movwf	(___fladd@a+3)^0,c
  8421   00169E                     l8623:
  8422   00169E  505B               	movf	___fladd@bexp^0,w,c
  8423   0016A0  5C5A               	subwf	___fladd@aexp^0,w,c
  8424   0016A2  B0D8               	btfsc	status,0,c
  8425   0016A4  EF56  F00B         	goto	u8941
  8426   0016A8  EF58  F00B         	goto	u8940
  8427   0016AC                     u8941:
  8428   0016AC  EF7F  F00B         	goto	l8659
  8429   0016B0                     u8940:
  8430   0016B0  AC59               	btfss	___fladd@signs^0,6,c
  8431   0016B2  EF5D  F00B         	goto	u8951
  8432   0016B6  EF5F  F00B         	goto	u8950
  8433   0016BA                     u8951:
  8434   0016BA  EF61  F00B         	goto	l8629
  8435   0016BE                     u8950:
  8436   0016BE  0E80               	movlw	128
  8437   0016C0  1A59               	xorwf	___fladd@signs^0,f,c
  8438   0016C2                     l8629:
  8439   0016C2  C05B  F05C         	movff	___fladd@bexp,___fladd@grs
  8440   0016C6  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  8441   0016CA  C05C  F05A         	movff	___fladd@grs,___fladd@aexp
  8442   0016CE  C04D  F05C         	movff	___fladd@b,___fladd@grs
  8443   0016D2  C051  F04D         	movff	___fladd@a,___fladd@b
  8444   0016D6  C05C  F051         	movff	___fladd@grs,___fladd@a
  8445   0016DA  C04E  F05C         	movff	___fladd@b+1,___fladd@grs
  8446   0016DE  C052  F04E         	movff	___fladd@a+1,___fladd@b+1
  8447   0016E2  C05C  F052         	movff	___fladd@grs,___fladd@a+1
  8448   0016E6  C04F  F05C         	movff	___fladd@b+2,___fladd@grs
  8449   0016EA  C053  F04F         	movff	___fladd@a+2,___fladd@b+2
  8450   0016EE  C05C  F053         	movff	___fladd@grs,___fladd@a+2
  8451   0016F2  C050  F05C         	movff	___fladd@b+3,___fladd@grs
  8452   0016F6  C054  F050         	movff	___fladd@a+3,___fladd@b+3
  8453   0016FA  C05C  F054         	movff	___fladd@grs,___fladd@a+3
  8454   0016FE                     l8659:
  8455   0016FE  0E00               	movlw	0
  8456   001700  6E5C               	movwf	___fladd@grs^0,c
  8457   001702  505B               	movf	___fladd@bexp^0,w,c
  8458   001704  C05A  F055         	movff	___fladd@aexp,??___fladd
  8459   001708  6A56               	clrf	(??___fladd+1)^0,c
  8460   00170A  5E55               	subwf	??___fladd^0,f,c
  8461   00170C  0E00               	movlw	0
  8462   00170E  5A56               	subwfb	(??___fladd+1)^0,f,c
  8463   001710  BE56               	btfsc	(??___fladd+1)^0,7,c
  8464   001712  EF94  F00B         	goto	u8961
  8465   001716  5056               	movf	(??___fladd+1)^0,w,c
  8466   001718  E109               	bnz	u8960
  8467   00171A  0E1A               	movlw	26
  8468   00171C  5C55               	subwf	??___fladd^0,w,c
  8469   00171E  A0D8               	btfss	status,0,c
  8470   001720  EF94  F00B         	goto	u8961
  8471   001724  EF96  F00B         	goto	u8960
  8472   001728                     u8961:
  8473   001728  EFCD  F00B         	goto	l1880
  8474   00172C                     u8960:
  8475   00172C  504D               	movf	___fladd@b^0,w,c
  8476   00172E  104E               	iorwf	(___fladd@b+1)^0,w,c
  8477   001730  104F               	iorwf	(___fladd@b+2)^0,w,c
  8478   001732  1050               	iorwf	(___fladd@b+3)^0,w,c
  8479   001734  A4D8               	btfss	status,2,c
  8480   001736  EF9F  F00B         	goto	u8971
  8481   00173A  EFA2  F00B         	goto	u8970
  8482   00173E                     u8971:
  8483   00173E  0E01               	movlw	1
  8484   001740  EFA3  F00B         	goto	u8980
  8485   001744                     u8970:
  8486   001744  0E00               	movlw	0
  8487   001746                     u8980:
  8488   001746  6E5C               	movwf	___fladd@grs^0,c
  8489   001748  0E00               	movlw	0
  8490   00174A  6E4D               	movwf	___fladd@b^0,c
  8491   00174C  0E00               	movlw	0
  8492   00174E  6E4E               	movwf	(___fladd@b+1)^0,c
  8493   001750  0E00               	movlw	0
  8494   001752  6E4F               	movwf	(___fladd@b+2)^0,c
  8495   001754  0E00               	movlw	0
  8496   001756  6E50               	movwf	(___fladd@b+3)^0,c
  8497   001758  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  8498   00175C  EFD6  F00B         	goto	l1879
  8499   001760                     l1881:
  8500   001760  A05C               	btfss	___fladd@grs^0,0,c
  8501   001762  EFB5  F00B         	goto	u8991
  8502   001766  EFB7  F00B         	goto	u8990
  8503   00176A                     u8991:
  8504   00176A  EFBD  F00B         	goto	l8671
  8505   00176E                     u8990:
  8506   00176E  90D8               	bcf	status,0,c
  8507   001770  305C               	rrcf	___fladd@grs^0,w,c
  8508   001772  0901               	iorlw	1
  8509   001774  6E5C               	movwf	___fladd@grs^0,c
  8510   001776  EFBF  F00B         	goto	l8673
  8511   00177A                     l8671:
  8512   00177A  90D8               	bcf	status,0,c
  8513   00177C  325C               	rrcf	___fladd@grs^0,f,c
  8514   00177E                     l8673:
  8515   00177E  A04D               	btfss	___fladd@b^0,0,c
  8516   001780  EFC4  F00B         	goto	u9001
  8517   001784  EFC6  F00B         	goto	u9000
  8518   001788                     u9001:
  8519   001788  EFC7  F00B         	goto	l8677
  8520   00178C                     u9000:
  8521   00178C  8E5C               	bsf	___fladd@grs^0,7,c
  8522   00178E                     l8677:
  8523   00178E  3450               	rlcf	(___fladd@b+3)^0,w,c
  8524   001790  3250               	rrcf	(___fladd@b+3)^0,f,c
  8525   001792  324F               	rrcf	(___fladd@b+2)^0,f,c
  8526   001794  324E               	rrcf	(___fladd@b+1)^0,f,c
  8527   001796  324D               	rrcf	___fladd@b^0,f,c
  8528   001798  2A5B               	incf	___fladd@bexp^0,f,c
  8529   00179A                     l1880:
  8530   00179A  505A               	movf	___fladd@aexp^0,w,c
  8531   00179C  5C5B               	subwf	___fladd@bexp^0,w,c
  8532   00179E  A0D8               	btfss	status,0,c
  8533   0017A0  EFD4  F00B         	goto	u9011
  8534   0017A4  EFD6  F00B         	goto	u9010
  8535   0017A8                     u9011:
  8536   0017A8  EFB0  F00B         	goto	l1881
  8537   0017AC                     u9010:
  8538   0017AC                     l1879:
  8539   0017AC  BC59               	btfsc	___fladd@signs^0,6,c
  8540   0017AE  EFDB  F00B         	goto	u9021
  8541   0017B2  EFDD  F00B         	goto	u9020
  8542   0017B6                     u9021:
  8543   0017B6  EF1D  F00C         	goto	l8705
  8544   0017BA                     u9020:
  8545   0017BA  505B               	movf	___fladd@bexp^0,w,c
  8546   0017BC  A4D8               	btfss	status,2,c
  8547   0017BE  EFE3  F00B         	goto	u9031
  8548   0017C2  EFE5  F00B         	goto	u9030
  8549   0017C6                     u9031:
  8550   0017C6  EFEF  F00B         	goto	l8687
  8551   0017CA                     u9030:
  8552   0017CA  0E00               	movlw	0
  8553   0017CC  6E4D               	movwf	?___fladd^0,c
  8554   0017CE  0E00               	movlw	0
  8555   0017D0  6E4E               	movwf	(?___fladd+1)^0,c
  8556   0017D2  0E00               	movlw	0
  8557   0017D4  6E4F               	movwf	(?___fladd+2)^0,c
  8558   0017D6  0E00               	movlw	0
  8559   0017D8  6E50               	movwf	(?___fladd+3)^0,c
  8560   0017DA  EF3E  F00D         	goto	l1888
  8561   0017DE                     l8687:
  8562   0017DE  5051               	movf	___fladd@a^0,w,c
  8563   0017E0  264D               	addwf	___fladd@b^0,f,c
  8564   0017E2  5052               	movf	(___fladd@a+1)^0,w,c
  8565   0017E4  224E               	addwfc	(___fladd@b+1)^0,f,c
  8566   0017E6  5053               	movf	(___fladd@a+2)^0,w,c
  8567   0017E8  224F               	addwfc	(___fladd@b+2)^0,f,c
  8568   0017EA  5054               	movf	(___fladd@a+3)^0,w,c
  8569   0017EC  2250               	addwfc	(___fladd@b+3)^0,f,c
  8570   0017EE  A050               	btfss	(___fladd@b+3)^0,0,c
  8571   0017F0  EFFC  F00B         	goto	u9041
  8572   0017F4  EFFE  F00B         	goto	u9040
  8573   0017F8                     u9041:
  8574   0017F8  EFAA  F00C         	goto	l8741
  8575   0017FC                     u9040:
  8576   0017FC  A05C               	btfss	___fladd@grs^0,0,c
  8577   0017FE  EF03  F00C         	goto	u9051
  8578   001802  EF05  F00C         	goto	u9050
  8579   001806                     u9051:
  8580   001806  EF0B  F00C         	goto	l8695
  8581   00180A                     u9050:
  8582   00180A  90D8               	bcf	status,0,c
  8583   00180C  305C               	rrcf	___fladd@grs^0,w,c
  8584   00180E  0901               	iorlw	1
  8585   001810  6E5C               	movwf	___fladd@grs^0,c
  8586   001812  EF0D  F00C         	goto	l8697
  8587   001816                     l8695:
  8588   001816  90D8               	bcf	status,0,c
  8589   001818  325C               	rrcf	___fladd@grs^0,f,c
  8590   00181A                     l8697:
  8591   00181A  A04D               	btfss	___fladd@b^0,0,c
  8592   00181C  EF12  F00C         	goto	u9061
  8593   001820  EF14  F00C         	goto	u9060
  8594   001824                     u9061:
  8595   001824  EF15  F00C         	goto	l8701
  8596   001828                     u9060:
  8597   001828  8E5C               	bsf	___fladd@grs^0,7,c
  8598   00182A                     l8701:
  8599   00182A  3450               	rlcf	(___fladd@b+3)^0,w,c
  8600   00182C  3250               	rrcf	(___fladd@b+3)^0,f,c
  8601   00182E  324F               	rrcf	(___fladd@b+2)^0,f,c
  8602   001830  324E               	rrcf	(___fladd@b+1)^0,f,c
  8603   001832  324D               	rrcf	___fladd@b^0,f,c
  8604   001834  2A5B               	incf	___fladd@bexp^0,f,c
  8605   001836  EFAA  F00C         	goto	l8741
  8606   00183A                     l8705:
  8607   00183A  5051               	movf	___fladd@a^0,w,c
  8608   00183C  5C4D               	subwf	___fladd@b^0,w,c
  8609   00183E  5052               	movf	(___fladd@a+1)^0,w,c
  8610   001840  584E               	subwfb	(___fladd@b+1)^0,w,c
  8611   001842  5053               	movf	(___fladd@a+2)^0,w,c
  8612   001844  584F               	subwfb	(___fladd@b+2)^0,w,c
  8613   001846  5050               	movf	(___fladd@b+3)^0,w,c
  8614   001848  0A80               	xorlw	128
  8615   00184A  6E55               	movwf	??___fladd^0,c
  8616   00184C  5054               	movf	(___fladd@a+3)^0,w,c
  8617   00184E  0A80               	xorlw	128
  8618   001850  5855               	subwfb	??___fladd^0,w,c
  8619   001852  B0D8               	btfsc	status,0,c
  8620   001854  EF2E  F00C         	goto	u9071
  8621   001858  EF30  F00C         	goto	u9070
  8622   00185C                     u9071:
  8623   00185C  EF5B  F00C         	goto	l8715
  8624   001860                     u9070:
  8625   001860  504D               	movf	___fladd@b^0,w,c
  8626   001862  5C51               	subwf	___fladd@a^0,w,c
  8627   001864  6E55               	movwf	??___fladd^0,c
  8628   001866  504E               	movf	(___fladd@b+1)^0,w,c
  8629   001868  5852               	subwfb	(___fladd@a+1)^0,w,c
  8630   00186A  6E56               	movwf	(??___fladd+1)^0,c
  8631   00186C  504F               	movf	(___fladd@b+2)^0,w,c
  8632   00186E  5853               	subwfb	(___fladd@a+2)^0,w,c
  8633   001870  6E57               	movwf	(??___fladd+2)^0,c
  8634   001872  5050               	movf	(___fladd@b+3)^0,w,c
  8635   001874  5854               	subwfb	(___fladd@a+3)^0,w,c
  8636   001876  6E58               	movwf	(??___fladd+3)^0,c
  8637   001878  0EFF               	movlw	255
  8638   00187A  2455               	addwf	??___fladd^0,w,c
  8639   00187C  6E4D               	movwf	___fladd@b^0,c
  8640   00187E  0EFF               	movlw	255
  8641   001880  2056               	addwfc	(??___fladd+1)^0,w,c
  8642   001882  6E4E               	movwf	(___fladd@b+1)^0,c
  8643   001884  0EFF               	movlw	255
  8644   001886  2057               	addwfc	(??___fladd+2)^0,w,c
  8645   001888  6E4F               	movwf	(___fladd@b+2)^0,c
  8646   00188A  0EFF               	movlw	255
  8647   00188C  2058               	addwfc	(??___fladd+3)^0,w,c
  8648   00188E  6E50               	movwf	(___fladd@b+3)^0,c
  8649   001890  0E80               	movlw	128
  8650   001892  1A59               	xorwf	___fladd@signs^0,f,c
  8651   001894  6C5C               	negf	___fladd@grs^0,c
  8652   001896  505C               	movf	___fladd@grs^0,w,c
  8653   001898  A4D8               	btfss	status,2,c
  8654   00189A  EF51  F00C         	goto	u9081
  8655   00189E  EF53  F00C         	goto	u9080
  8656   0018A2                     u9081:
  8657   0018A2  EF63  F00C         	goto	l1896
  8658   0018A6                     u9080:
  8659   0018A6  0E01               	movlw	1
  8660   0018A8  264D               	addwf	___fladd@b^0,f,c
  8661   0018AA  0E00               	movlw	0
  8662   0018AC  224E               	addwfc	(___fladd@b+1)^0,f,c
  8663   0018AE  224F               	addwfc	(___fladd@b+2)^0,f,c
  8664   0018B0  2250               	addwfc	(___fladd@b+3)^0,f,c
  8665   0018B2  EF63  F00C         	goto	l1896
  8666   0018B6                     l8715:
  8667   0018B6  5051               	movf	___fladd@a^0,w,c
  8668   0018B8  5E4D               	subwf	___fladd@b^0,f,c
  8669   0018BA  5052               	movf	(___fladd@a+1)^0,w,c
  8670   0018BC  5A4E               	subwfb	(___fladd@b+1)^0,f,c
  8671   0018BE  5053               	movf	(___fladd@a+2)^0,w,c
  8672   0018C0  5A4F               	subwfb	(___fladd@b+2)^0,f,c
  8673   0018C2  5054               	movf	(___fladd@a+3)^0,w,c
  8674   0018C4  5A50               	subwfb	(___fladd@b+3)^0,f,c
  8675   0018C6                     l1896:
  8676   0018C6  504D               	movf	___fladd@b^0,w,c
  8677   0018C8  104E               	iorwf	(___fladd@b+1)^0,w,c
  8678   0018CA  104F               	iorwf	(___fladd@b+2)^0,w,c
  8679   0018CC  1050               	iorwf	(___fladd@b+3)^0,w,c
  8680   0018CE  A4D8               	btfss	status,2,c
  8681   0018D0  EF6C  F00C         	goto	u9091
  8682   0018D4  EF6E  F00C         	goto	u9090
  8683   0018D8                     u9091:
  8684   0018D8  EFA3  F00C         	goto	l8739
  8685   0018DC                     u9090:
  8686   0018DC  505C               	movf	___fladd@grs^0,w,c
  8687   0018DE  A4D8               	btfss	status,2,c
  8688   0018E0  EF74  F00C         	goto	u9101
  8689   0018E4  EF76  F00C         	goto	u9100
  8690   0018E8                     u9101:
  8691   0018E8  EFA3  F00C         	goto	l8739
  8692   0018EC                     u9100:
  8693   0018EC  0E00               	movlw	0
  8694   0018EE  6E4D               	movwf	?___fladd^0,c
  8695   0018F0  0E00               	movlw	0
  8696   0018F2  6E4E               	movwf	(?___fladd+1)^0,c
  8697   0018F4  0E00               	movlw	0
  8698   0018F6  6E4F               	movwf	(?___fladd+2)^0,c
  8699   0018F8  0E00               	movlw	0
  8700   0018FA  6E50               	movwf	(?___fladd+3)^0,c
  8701   0018FC  EF3E  F00D         	goto	l1888
  8702   001900                     l8723:
  8703   001900  90D8               	bcf	status,0,c
  8704   001902  364D               	rlcf	___fladd@b^0,f,c
  8705   001904  364E               	rlcf	(___fladd@b+1)^0,f,c
  8706   001906  364F               	rlcf	(___fladd@b+2)^0,f,c
  8707   001908  3650               	rlcf	(___fladd@b+3)^0,f,c
  8708   00190A  AE5C               	btfss	___fladd@grs^0,7,c
  8709   00190C  EF8A  F00C         	goto	u9111
  8710   001910  EF8C  F00C         	goto	u9110
  8711   001914                     u9111:
  8712   001914  EF8D  F00C         	goto	l8729
  8713   001918                     u9110:
  8714   001918  804D               	bsf	___fladd@b^0,0,c
  8715   00191A                     l8729:
  8716   00191A  A05C               	btfss	___fladd@grs^0,0,c
  8717   00191C  EF92  F00C         	goto	u9121
  8718   001920  EF94  F00C         	goto	u9120
  8719   001924                     u9121:
  8720   001924  EF98  F00C         	goto	l8733
  8721   001928                     u9120:
  8722   001928  80D8               	bsf	status,0,c
  8723   00192A  365C               	rlcf	___fladd@grs^0,f,c
  8724   00192C  EF9A  F00C         	goto	l8735
  8725   001930                     l8733:
  8726   001930  90D8               	bcf	status,0,c
  8727   001932  365C               	rlcf	___fladd@grs^0,f,c
  8728   001934                     l8735:
  8729   001934  505B               	movf	___fladd@bexp^0,w,c
  8730   001936  B4D8               	btfsc	status,2,c
  8731   001938  EFA0  F00C         	goto	u9131
  8732   00193C  EFA2  F00C         	goto	u9130
  8733   001940                     u9131:
  8734   001940  EFA3  F00C         	goto	l8739
  8735   001944                     u9130:
  8736   001944  065B               	decf	___fladd@bexp^0,f,c
  8737   001946                     l8739:
  8738   001946  AE4F               	btfss	(___fladd@b+2)^0,7,c
  8739   001948  EFA8  F00C         	goto	u9141
  8740   00194C  EFAA  F00C         	goto	u9140
  8741   001950                     u9141:
  8742   001950  EF80  F00C         	goto	l8723
  8743   001954                     u9140:
  8744   001954                     l8741:
  8745   001954  0E00               	movlw	0
  8746   001956  6E5A               	movwf	___fladd@aexp^0,c
  8747   001958  AE5C               	btfss	___fladd@grs^0,7,c
  8748   00195A  EFB1  F00C         	goto	u9151
  8749   00195E  EFB3  F00C         	goto	u9150
  8750   001962                     u9151:
  8751   001962  EFCB  F00C         	goto	l1905
  8752   001966                     u9150:
  8753   001966  C05C  F055         	movff	___fladd@grs,??___fladd
  8754   00196A  0E7F               	movlw	127
  8755   00196C  1655               	andwf	??___fladd^0,f,c
  8756   00196E  B4D8               	btfsc	status,2,c
  8757   001970  EFBC  F00C         	goto	u9161
  8758   001974  EFBE  F00C         	goto	u9160
  8759   001978                     u9161:
  8760   001978  EFC2  F00C         	goto	l1906
  8761   00197C                     u9160:
  8762   00197C                     l8747:
  8763   00197C  0E01               	movlw	1
  8764   00197E  6E5A               	movwf	___fladd@aexp^0,c
  8765   001980  EFCB  F00C         	goto	l1905
  8766   001984                     l1906:
  8767   001984  A04D               	btfss	___fladd@b^0,0,c
  8768   001986  EFC7  F00C         	goto	u9171
  8769   00198A  EFC9  F00C         	goto	u9170
  8770   00198E                     u9171:
  8771   00198E  EFCB  F00C         	goto	l1905
  8772   001992                     u9170:
  8773   001992  EFBE  F00C         	goto	l8747
  8774   001996                     l1905:
  8775   001996  505A               	movf	___fladd@aexp^0,w,c
  8776   001998  B4D8               	btfsc	status,2,c
  8777   00199A  EFD1  F00C         	goto	u9181
  8778   00199E  EFD3  F00C         	goto	u9180
  8779   0019A2                     u9181:
  8780   0019A2  EFFE  F00C         	goto	l8759
  8781   0019A6                     u9180:
  8782   0019A6  0E01               	movlw	1
  8783   0019A8  264D               	addwf	___fladd@b^0,f,c
  8784   0019AA  0E00               	movlw	0
  8785   0019AC  224E               	addwfc	(___fladd@b+1)^0,f,c
  8786   0019AE  224F               	addwfc	(___fladd@b+2)^0,f,c
  8787   0019B0  2250               	addwfc	(___fladd@b+3)^0,f,c
  8788   0019B2  A050               	btfss	(___fladd@b+3)^0,0,c
  8789   0019B4  EFDE  F00C         	goto	u9191
  8790   0019B8  EFE0  F00C         	goto	u9190
  8791   0019BC                     u9191:
  8792   0019BC  EFFE  F00C         	goto	l8759
  8793   0019C0                     u9190:
  8794   0019C0  C04D  F055         	movff	___fladd@b,??___fladd
  8795   0019C4  C04E  F056         	movff	___fladd@b+1,??___fladd+1
  8796   0019C8  C04F  F057         	movff	___fladd@b+2,??___fladd+2
  8797   0019CC  C050  F058         	movff	___fladd@b+3,??___fladd+3
  8798   0019D0  3458               	rlcf	(??___fladd+3)^0,w,c
  8799   0019D2  3258               	rrcf	(??___fladd+3)^0,f,c
  8800   0019D4  3257               	rrcf	(??___fladd+2)^0,f,c
  8801   0019D6  3256               	rrcf	(??___fladd+1)^0,f,c
  8802   0019D8  3255               	rrcf	??___fladd^0,f,c
  8803   0019DA  C055  F04D         	movff	??___fladd,___fladd@b
  8804   0019DE  C056  F04E         	movff	??___fladd+1,___fladd@b+1
  8805   0019E2  C057  F04F         	movff	??___fladd+2,___fladd@b+2
  8806   0019E6  C058  F050         	movff	??___fladd+3,___fladd@b+3
  8807   0019EA  285B               	incf	___fladd@bexp^0,w,c
  8808   0019EC  B4D8               	btfsc	status,2,c
  8809   0019EE  EFFB  F00C         	goto	u9201
  8810   0019F2  EFFD  F00C         	goto	u9200
  8811   0019F6                     u9201:
  8812   0019F6  EFFE  F00C         	goto	l8759
  8813   0019FA                     u9200:
  8814   0019FA  2A5B               	incf	___fladd@bexp^0,f,c
  8815   0019FC                     l8759:
  8816   0019FC  285B               	incf	___fladd@bexp^0,w,c
  8817   0019FE  B4D8               	btfsc	status,2,c
  8818   001A00  EF04  F00D         	goto	u9211
  8819   001A04  EF06  F00D         	goto	u9210
  8820   001A08                     u9211:
  8821   001A08  EF0E  F00D         	goto	l8763
  8822   001A0C                     u9210:
  8823   001A0C  505B               	movf	___fladd@bexp^0,w,c
  8824   001A0E  A4D8               	btfss	status,2,c
  8825   001A10  EF0C  F00D         	goto	u9221
  8826   001A14  EF0E  F00D         	goto	u9220
  8827   001A18                     u9221:
  8828   001A18  EF20  F00D         	goto	l8767
  8829   001A1C                     u9220:
  8830   001A1C                     l8763:
  8831   001A1C  0E00               	movlw	0
  8832   001A1E  6E4D               	movwf	___fladd@b^0,c
  8833   001A20  0E00               	movlw	0
  8834   001A22  6E4E               	movwf	(___fladd@b+1)^0,c
  8835   001A24  0E00               	movlw	0
  8836   001A26  6E4F               	movwf	(___fladd@b+2)^0,c
  8837   001A28  0E00               	movlw	0
  8838   001A2A  6E50               	movwf	(___fladd@b+3)^0,c
  8839   001A2C  505B               	movf	___fladd@bexp^0,w,c
  8840   001A2E  A4D8               	btfss	status,2,c
  8841   001A30  EF1C  F00D         	goto	u9231
  8842   001A34  EF1E  F00D         	goto	u9230
  8843   001A38                     u9231:
  8844   001A38  EF20  F00D         	goto	l8767
  8845   001A3C                     u9230:
  8846   001A3C  0E00               	movlw	0
  8847   001A3E  6E59               	movwf	___fladd@signs^0,c
  8848   001A40                     l8767:
  8849   001A40  A05B               	btfss	___fladd@bexp^0,0,c
  8850   001A42  EF25  F00D         	goto	u9241
  8851   001A46  EF27  F00D         	goto	u9240
  8852   001A4A                     u9241:
  8853   001A4A  EF2A  F00D         	goto	l8771
  8854   001A4E                     u9240:
  8855   001A4E  8E4F               	bsf	(___fladd@b+2)^0,7,c
  8856   001A50  EF2B  F00D         	goto	l8773
  8857   001A54                     l8771:
  8858   001A54  9E4F               	bcf	(___fladd@b+2)^0,7,c
  8859   001A56                     l8773:
  8860   001A56  90D8               	bcf	status,0,c
  8861   001A58  305B               	rrcf	___fladd@bexp^0,w,c
  8862   001A5A  6E50               	movwf	(___fladd@b+3)^0,c
  8863   001A5C  AE59               	btfss	___fladd@signs^0,7,c
  8864   001A5E  EF33  F00D         	goto	u9251
  8865   001A62  EF35  F00D         	goto	u9250
  8866   001A66                     u9251:
  8867   001A66  EF36  F00D         	goto	l8779
  8868   001A6A                     u9250:
  8869   001A6A  8E50               	bsf	(___fladd@b+3)^0,7,c
  8870   001A6C                     l8779:
  8871   001A6C  C04D  F04D         	movff	___fladd@b,?___fladd
  8872   001A70  C04E  F04E         	movff	___fladd@b+1,?___fladd+1
  8873   001A74  C04F  F04F         	movff	___fladd@b+2,?___fladd+2
  8874   001A78  C050  F050         	movff	___fladd@b+3,?___fladd+3
  8875   001A7C                     l1888:
  8876   001A7C  0012               	return		;funcret
  8877   001A7E                     __end_of___fladd:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function _CCP_PWM_Stop *****************
  8881 ;; Defined at:
  8882 ;;		line 416 in file "MCAL_layer/CCP/CCP1.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  ccp_obj         2   12[COMRAM] PTR const struct .
  8885 ;;		 -> ccp_obj(16), 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  ret             1   15[COMRAM] unsigned char 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      unsigned char 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;Total ram usage:        4 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 4
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_main
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text39
  8912   0040AE                     __ptext39:
  8913                           	callstack 0
  8914   0040AE                     _CCP_PWM_Stop:
  8915                           	callstack 26
  8916   0040AE                     
  8917                           ;MCAL_layer/CCP/CCP1.c: 416: Std_ReturnType CCP_PWM_Stop(const CCP_t *ccp_obj);MCAL_laye
      +                          r/CCP/CCP1.c: 417: {;MCAL_layer/CCP/CCP1.c: 418:     Std_ReturnType ret = (Std_ReturnTyp
      +                          e)0x01;
  8918   0040AE  0E01               	movlw	1
  8919   0040B0  6E10               	movwf	CCP_PWM_Stop@ret^0,c
  8920   0040B2                     
  8921                           ;MCAL_layer/CCP/CCP1.c: 419:     if(ccp_obj == ((void*)0))
  8922   0040B2  500D               	movf	CCP_PWM_Stop@ccp_obj^0,w,c
  8923   0040B4  100E               	iorwf	(CCP_PWM_Stop@ccp_obj+1)^0,w,c
  8924   0040B6  A4D8               	btfss	status,2,c
  8925   0040B8  EF60  F020         	goto	u6531
  8926   0040BC  EF62  F020         	goto	u6530
  8927   0040C0                     u6531:
  8928   0040C0  EF66  F020         	goto	l6823
  8929   0040C4                     u6530:
  8930   0040C4                     
  8931                           ;MCAL_layer/CCP/CCP1.c: 420:     {;MCAL_layer/CCP/CCP1.c: 421:         ret = (Std_Return
      +                          Type)0x00;
  8932   0040C4  0E00               	movlw	0
  8933   0040C6  6E10               	movwf	CCP_PWM_Stop@ret^0,c
  8934                           
  8935                           ;MCAL_layer/CCP/CCP1.c: 422:     }
  8936   0040C8  EF88  F020         	goto	l632
  8937   0040CC                     l6823:
  8938                           
  8939                           ;MCAL_layer/CCP/CCP1.c: 424:     {;MCAL_layer/CCP/CCP1.c: 425:         if(ccp_obj->ccp_i
      +                          nst == CCP1_inst)
  8940   0040CC  EE20 F001          	lfsr	2,1
  8941   0040D0  500D               	movf	CCP_PWM_Stop@ccp_obj^0,w,c
  8942   0040D2  26D9               	addwf	fsr2l,f,c
  8943   0040D4  500E               	movf	(CCP_PWM_Stop@ccp_obj+1)^0,w,c
  8944   0040D6  22DA               	addwfc	fsr2h,f,c
  8945   0040D8  50DF               	movf	indf2,w,c
  8946   0040DA  A4D8               	btfss	status,2,c
  8947   0040DC  EF72  F020         	goto	u6541
  8948   0040E0  EF74  F020         	goto	u6540
  8949   0040E4                     u6541:
  8950   0040E4  EF78  F020         	goto	l6827
  8951   0040E8                     u6540:
  8952   0040E8                     
  8953                           ;MCAL_layer/CCP/CCP1.c: 426:         {;MCAL_layer/CCP/CCP1.c: 427:             (CCP1CONb
      +                          its.CCP1M = (uint8)0);
  8954   0040E8  0EF0               	movlw	-16
  8955   0040EA  16BD               	andwf	189,f,c	;volatile
  8956                           
  8957                           ;MCAL_layer/CCP/CCP1.c: 428:         }
  8958   0040EC  EF88  F020         	goto	l632
  8959   0040F0                     l6827:
  8960   0040F0  EE20 F001          	lfsr	2,1
  8961   0040F4  500D               	movf	CCP_PWM_Stop@ccp_obj^0,w,c
  8962   0040F6  26D9               	addwf	fsr2l,f,c
  8963   0040F8  500E               	movf	(CCP_PWM_Stop@ccp_obj+1)^0,w,c
  8964   0040FA  22DA               	addwfc	fsr2h,f,c
  8965   0040FC  04DE               	decf	postinc2,w,c
  8966   0040FE  A4D8               	btfss	status,2,c
  8967   004100  EF84  F020         	goto	u6551
  8968   004104  EF86  F020         	goto	u6550
  8969   004108                     u6551:
  8970   004108  EF88  F020         	goto	l632
  8971   00410C                     u6550:
  8972   00410C                     
  8973                           ;MCAL_layer/CCP/CCP1.c: 430:         {;MCAL_layer/CCP/CCP1.c: 431:             (CCP2CONb
      +                          its.CCP2M = (uint8)0);
  8974   00410C  0EF0               	movlw	-16
  8975   00410E  16BA               	andwf	186,f,c	;volatile
  8976   004110                     l632:
  8977                           
  8978                           ;MCAL_layer/CCP/CCP1.c: 434:     return ret;
  8979   004110  5010               	movf	CCP_PWM_Stop@ret^0,w,c
  8980   004112  0012               	return		;funcret
  8981   004114                     __end_of_CCP_PWM_Stop:
  8982                           	callstack 0
  8983                           
  8984 ;; *************** function _CCP_PWM_Start *****************
  8985 ;; Defined at:
  8986 ;;		line 395 in file "MCAL_layer/CCP/CCP1.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  ccp_obj         2   12[COMRAM] PTR const struct .
  8989 ;;		 -> ccp_obj(16), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  ret             1   15[COMRAM] unsigned char 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      unsigned char 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;Total ram usage:        4 bytes
  9006 ;; Hardware stack levels used: 1
  9007 ;; Hardware stack levels required when called: 4
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_main
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text40
  9016   003FD4                     __ptext40:
  9017                           	callstack 0
  9018   003FD4                     _CCP_PWM_Start:
  9019                           	callstack 26
  9020   003FD4                     
  9021                           ;MCAL_layer/CCP/CCP1.c: 395: Std_ReturnType CCP_PWM_Start(const CCP_t *ccp_obj);MCAL_lay
      +                          er/CCP/CCP1.c: 396: {;MCAL_layer/CCP/CCP1.c: 397:     Std_ReturnType ret = (Std_ReturnTy
      +                          pe)0x01;
  9022   003FD4  0E01               	movlw	1
  9023   003FD6  6E10               	movwf	CCP_PWM_Start@ret^0,c
  9024   003FD8                     
  9025                           ;MCAL_layer/CCP/CCP1.c: 398:     if(ccp_obj == ((void*)0))
  9026   003FD8  500D               	movf	CCP_PWM_Start@ccp_obj^0,w,c
  9027   003FDA  100E               	iorwf	(CCP_PWM_Start@ccp_obj+1)^0,w,c
  9028   003FDC  A4D8               	btfss	status,2,c
  9029   003FDE  EFF3  F01F         	goto	u6501
  9030   003FE2  EFF5  F01F         	goto	u6500
  9031   003FE6                     u6501:
  9032   003FE6  EFF9  F01F         	goto	l6807
  9033   003FEA                     u6500:
  9034   003FEA                     
  9035                           ;MCAL_layer/CCP/CCP1.c: 399:     {;MCAL_layer/CCP/CCP1.c: 400:         ret = (Std_Return
      +                          Type)0x00;
  9036   003FEA  0E00               	movlw	0
  9037   003FEC  6E10               	movwf	CCP_PWM_Start@ret^0,c
  9038                           
  9039                           ;MCAL_layer/CCP/CCP1.c: 401:     }
  9040   003FEE  EF1F  F020         	goto	l624
  9041   003FF2                     l6807:
  9042                           
  9043                           ;MCAL_layer/CCP/CCP1.c: 403:     {;MCAL_layer/CCP/CCP1.c: 404:         if(ccp_obj->ccp_i
      +                          nst == CCP1_inst)
  9044   003FF2  EE20 F001          	lfsr	2,1
  9045   003FF6  500D               	movf	CCP_PWM_Start@ccp_obj^0,w,c
  9046   003FF8  26D9               	addwf	fsr2l,f,c
  9047   003FFA  500E               	movf	(CCP_PWM_Start@ccp_obj+1)^0,w,c
  9048   003FFC  22DA               	addwfc	fsr2h,f,c
  9049   003FFE  50DF               	movf	indf2,w,c
  9050   004000  A4D8               	btfss	status,2,c
  9051   004002  EF05  F020         	goto	u6511
  9052   004006  EF07  F020         	goto	u6510
  9053   00400A                     u6511:
  9054   00400A  EF0D  F020         	goto	l6811
  9055   00400E                     u6510:
  9056   00400E                     
  9057                           ;MCAL_layer/CCP/CCP1.c: 405:         {;MCAL_layer/CCP/CCP1.c: 406:             (CCP1CONb
      +                          its.CCP1M = (uint8)12);
  9058   00400E  50BD               	movf	189,w,c	;volatile
  9059   004010  0BF0               	andlw	-16
  9060   004012  090C               	iorlw	12
  9061   004014  6EBD               	movwf	189,c	;volatile
  9062                           
  9063                           ;MCAL_layer/CCP/CCP1.c: 407:         }
  9064   004016  EF1F  F020         	goto	l624
  9065   00401A                     l6811:
  9066   00401A  EE20 F001          	lfsr	2,1
  9067   00401E  500D               	movf	CCP_PWM_Start@ccp_obj^0,w,c
  9068   004020  26D9               	addwf	fsr2l,f,c
  9069   004022  500E               	movf	(CCP_PWM_Start@ccp_obj+1)^0,w,c
  9070   004024  22DA               	addwfc	fsr2h,f,c
  9071   004026  04DE               	decf	postinc2,w,c
  9072   004028  A4D8               	btfss	status,2,c
  9073   00402A  EF19  F020         	goto	u6521
  9074   00402E  EF1B  F020         	goto	u6520
  9075   004032                     u6521:
  9076   004032  EF1F  F020         	goto	l624
  9077   004036                     u6520:
  9078   004036                     
  9079                           ;MCAL_layer/CCP/CCP1.c: 409:         {;MCAL_layer/CCP/CCP1.c: 410:             (CCP2CONb
      +                          its.CCP2M = (uint8)12);
  9080   004036  50BA               	movf	186,w,c	;volatile
  9081   004038  0BF0               	andlw	-16
  9082   00403A  090C               	iorlw	12
  9083   00403C  6EBA               	movwf	186,c	;volatile
  9084   00403E                     l624:
  9085                           
  9086                           ;MCAL_layer/CCP/CCP1.c: 414:     return ret;
  9087   00403E  5010               	movf	CCP_PWM_Start@ret^0,w,c
  9088   004040  0012               	return		;funcret
  9089   004042                     __end_of_CCP_PWM_Start:
  9090                           	callstack 0
  9091                           
  9092 ;; *************** function _ADC_StartConversion_INT *****************
  9093 ;; Defined at:
  9094 ;;		line 234 in file "MCAL_layer/ADC/hal_ADC.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  ADC_obj         2   20[COMRAM] PTR const struct .
  9097 ;;		 -> Lm35(7), 
  9098 ;;  channel         1   22[COMRAM] enum E3217
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  ret             1   24[COMRAM] unsigned char 
  9101 ;;  l_conversion    1   23[COMRAM] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      unsigned char 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9111 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;Total ram usage:        5 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 6
  9118 ;; This function calls:
  9119 ;;		_ADC_Select_Channel
  9120 ;;		_ADC_Start_Conversion
  9121 ;; This function is called by:
  9122 ;;		_main
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text41
  9127   00433E                     __ptext41:
  9128                           	callstack 0
  9129   00433E                     _ADC_StartConversion_INT:
  9130                           	callstack 24
  9131   00433E                     
  9132                           ;MCAL_layer/ADC/hal_ADC.c: 237:     uint8 l_conversion_status = 0;
  9133   00433E  0E00               	movlw	0
  9134   004340  6E18               	movwf	ADC_StartConversion_INT@l_conversion_status^0,c
  9135   004342                     
  9136                           ;MCAL_layer/ADC/hal_ADC.c: 238:     if(ADC_obj == ((void*)0))
  9137   004342  5015               	movf	ADC_StartConversion_INT@ADC_obj^0,w,c
  9138   004344  1016               	iorwf	(ADC_StartConversion_INT@ADC_obj+1)^0,w,c
  9139   004346  A4D8               	btfss	status,2,c
  9140   004348  EFA8  F021         	goto	u6441
  9141   00434C  EFAA  F021         	goto	u6440
  9142   004350                     u6441:
  9143   004350  EFAE  F021         	goto	l6763
  9144   004354                     u6440:
  9145   004354                     
  9146                           ;MCAL_layer/ADC/hal_ADC.c: 239:     {;MCAL_layer/ADC/hal_ADC.c: 240:         ret = (Std_
      +                          ReturnType)0x00;
  9147   004354  0E00               	movlw	0
  9148   004356  6E19               	movwf	ADC_StartConversion_INT@ret^0,c
  9149                           
  9150                           ;MCAL_layer/ADC/hal_ADC.c: 241:     }
  9151   004358  EFBE  F021         	goto	l6765
  9152   00435C                     l6763:
  9153                           
  9154                           ;MCAL_layer/ADC/hal_ADC.c: 243:     {;MCAL_layer/ADC/hal_ADC.c: 244:         ret = ADC_S
      +                          elect_Channel(ADC_obj,channel);
  9155   00435C  C015  F010         	movff	ADC_StartConversion_INT@ADC_obj,ADC_Select_Channel@ADC_obj
  9156   004360  C016  F011         	movff	ADC_StartConversion_INT@ADC_obj+1,ADC_Select_Channel@ADC_obj+1
  9157   004364  C017  F012         	movff	ADC_StartConversion_INT@channel,ADC_Select_Channel@channel
  9158   004368  ECFF  F021         	call	_ADC_Select_Channel	;wreg free
  9159   00436C  6E19               	movwf	ADC_StartConversion_INT@ret^0,c
  9160                           
  9161                           ;MCAL_layer/ADC/hal_ADC.c: 246:         ret = ADC_Start_Conversion(ADC_obj);
  9162   00436E  C015  F00D         	movff	ADC_StartConversion_INT@ADC_obj,ADC_Start_Conversion@ADC_obj
  9163   004372  C016  F00E         	movff	ADC_StartConversion_INT@ADC_obj+1,ADC_Start_Conversion@ADC_obj+1
  9164   004376  EC6B  F022         	call	_ADC_Start_Conversion	;wreg free
  9165   00437A  6E19               	movwf	ADC_StartConversion_INT@ret^0,c
  9166   00437C                     l6765:
  9167                           
  9168                           ;MCAL_layer/ADC/hal_ADC.c: 249:     return ret;
  9169   00437C  5019               	movf	ADC_StartConversion_INT@ret^0,w,c
  9170   00437E  0012               	return		;funcret
  9171   004380                     __end_of_ADC_StartConversion_INT:
  9172                           	callstack 0
  9173                           
  9174 ;; *************** function _ADC_Start_Conversion *****************
  9175 ;; Defined at:
  9176 ;;		line 138 in file "MCAL_layer/ADC/hal_ADC.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  ADC_obj         2   12[COMRAM] PTR const struct .
  9179 ;;		 -> Lm35(7), 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  ret             1   14[COMRAM] unsigned char 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      unsigned char 
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;Total ram usage:        3 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; Hardware stack levels required when called: 4
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_ADC_StartConversion_INT
  9202 ;;		_ADC_GetConversion_Blocking
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text42
  9207   0044D6                     __ptext42:
  9208                           	callstack 0
  9209   0044D6                     _ADC_Start_Conversion:
  9210                           	callstack 25
  9211   0044D6                     
  9212                           ;MCAL_layer/ADC/hal_ADC.c: 138: Std_ReturnType ADC_Start_Conversion(const ADC_t* ADC_obj
      +                          );MCAL_layer/ADC/hal_ADC.c: 139: {;MCAL_layer/ADC/hal_ADC.c: 140:     Std_ReturnType ret
      +                           = (Std_ReturnType)0x01;
  9213   0044D6  0E01               	movlw	1
  9214   0044D8  6E0F               	movwf	ADC_Start_Conversion@ret^0,c
  9215   0044DA                     
  9216                           ;MCAL_layer/ADC/hal_ADC.c: 141:     if(ADC_obj == ((void*)0))
  9217   0044DA  500D               	movf	ADC_Start_Conversion@ADC_obj^0,w,c
  9218   0044DC  100E               	iorwf	(ADC_Start_Conversion@ADC_obj+1)^0,w,c
  9219   0044DE  A4D8               	btfss	status,2,c
  9220   0044E0  EF74  F022         	goto	u6171
  9221   0044E4  EF76  F022         	goto	u6170
  9222   0044E8                     u6171:
  9223   0044E8  EF7A  F022         	goto	l434
  9224   0044EC                     u6170:
  9225   0044EC                     
  9226                           ;MCAL_layer/ADC/hal_ADC.c: 142:     {;MCAL_layer/ADC/hal_ADC.c: 143:         ret = (Std_
      +                          ReturnType)0x00;
  9227   0044EC  0E00               	movlw	0
  9228   0044EE  6E0F               	movwf	ADC_Start_Conversion@ret^0,c
  9229                           
  9230                           ;MCAL_layer/ADC/hal_ADC.c: 144:     }
  9231   0044F0  EF7B  F022         	goto	l6479
  9232   0044F4                     l434:
  9233                           
  9234                           ;MCAL_layer/ADC/hal_ADC.c: 146:     {;MCAL_layer/ADC/hal_ADC.c: 147:         (ADCON0bits
      +                          .GODONE = 1);
  9235   0044F4  82C2               	bsf	194,1,c	;volatile
  9236   0044F6                     l6479:
  9237                           
  9238                           ;MCAL_layer/ADC/hal_ADC.c: 149:     return ret;
  9239   0044F6  500F               	movf	ADC_Start_Conversion@ret^0,w,c
  9240   0044F8  0012               	return		;funcret
  9241   0044FA                     __end_of_ADC_Start_Conversion:
  9242                           	callstack 0
  9243                           
  9244 ;; *************** function _ADC_Select_Channel *****************
  9245 ;; Defined at:
  9246 ;;		line 118 in file "MCAL_layer/ADC/hal_ADC.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  ADC_obj         2   15[COMRAM] PTR const struct .
  9249 ;;		 -> Lm35(7), 
  9250 ;;  channel         1   17[COMRAM] enum E3217
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  ret             1   19[COMRAM] unsigned char 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      unsigned char 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9262 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9265 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;Total ram usage:        5 bytes
  9267 ;; Hardware stack levels used: 1
  9268 ;; Hardware stack levels required when called: 5
  9269 ;; This function calls:
  9270 ;;		_ADC_configure_Channel
  9271 ;; This function is called by:
  9272 ;;		_ADC_StartConversion_INT
  9273 ;;		_ADC_GetConversion_Blocking
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text43
  9278   0043FE                     __ptext43:
  9279                           	callstack 0
  9280   0043FE                     _ADC_Select_Channel:
  9281                           	callstack 24
  9282   0043FE                     
  9283                           ;MCAL_layer/ADC/hal_ADC.c: 118: Std_ReturnType ADC_Select_Channel(const ADC_t* ADC_obj,A
      +                          DC_Channel_t channel);MCAL_layer/ADC/hal_ADC.c: 119: {;MCAL_layer/ADC/hal_ADC.c: 120:   
      +                            Std_ReturnType ret = (Std_ReturnType)0x01;
  9284   0043FE  0E01               	movlw	1
  9285   004400  6E14               	movwf	ADC_Select_Channel@ret^0,c
  9286   004402                     
  9287                           ;MCAL_layer/ADC/hal_ADC.c: 121:     if(ADC_obj == ((void*)0))
  9288   004402  5010               	movf	ADC_Select_Channel@ADC_obj^0,w,c
  9289   004404  1011               	iorwf	(ADC_Select_Channel@ADC_obj+1)^0,w,c
  9290   004406  A4D8               	btfss	status,2,c
  9291   004408  EF08  F022         	goto	u6161
  9292   00440C  EF0A  F022         	goto	u6160
  9293   004410                     u6161:
  9294   004410  EF0E  F022         	goto	l6465
  9295   004414                     u6160:
  9296   004414                     
  9297                           ;MCAL_layer/ADC/hal_ADC.c: 122:     {;MCAL_layer/ADC/hal_ADC.c: 123:         ret = (Std_
      +                          ReturnType)0x00;
  9298   004414  0E00               	movlw	0
  9299   004416  6E14               	movwf	ADC_Select_Channel@ret^0,c
  9300                           
  9301                           ;MCAL_layer/ADC/hal_ADC.c: 124:     }
  9302   004418  EF1A  F022         	goto	l6469
  9303   00441C                     l6465:
  9304                           
  9305                           ;MCAL_layer/ADC/hal_ADC.c: 126:     {;MCAL_layer/ADC/hal_ADC.c: 127:         (ADCON0bits
      +                          .CHS = channel);
  9306   00441C  C012  F013         	movff	ADC_Select_Channel@channel,??_ADC_Select_Channel
  9307   004420  4613               	rlncf	??_ADC_Select_Channel^0,f,c
  9308   004422  4613               	rlncf	??_ADC_Select_Channel^0,f,c
  9309   004424  50C2               	movf	194,w,c	;volatile
  9310   004426  1813               	xorwf	??_ADC_Select_Channel^0,w,c
  9311   004428  0BC3               	andlw	-61
  9312   00442A  1813               	xorwf	??_ADC_Select_Channel^0,w,c
  9313   00442C  6EC2               	movwf	194,c	;volatile
  9314   00442E                     
  9315                           ;MCAL_layer/ADC/hal_ADC.c: 128:         ADC_configure_Channel(channel);
  9316   00442E  5012               	movf	ADC_Select_Channel@channel^0,w,c
  9317   004430  EC65  F01B         	call	_ADC_configure_Channel
  9318   004434                     l6469:
  9319                           
  9320                           ;MCAL_layer/ADC/hal_ADC.c: 130:     return ret;
  9321   004434  5014               	movf	ADC_Select_Channel@ret^0,w,c
  9322   004436  0012               	return		;funcret
  9323   004438                     __end_of_ADC_Select_Channel:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _ADC_configure_Channel *****************
  9327 ;; Defined at:
  9328 ;;		line 252 in file "MCAL_layer/ADC/hal_ADC.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  channel         1    wreg     enum E3217
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  channel         1   14[COMRAM] enum E3217
  9333 ;;  ret             1    0        unsigned char 
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      unsigned char 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2, status,0
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;Total ram usage:        3 bytes
  9348 ;; Hardware stack levels used: 1
  9349 ;; Hardware stack levels required when called: 4
  9350 ;; This function calls:
  9351 ;;		Nothing
  9352 ;; This function is called by:
  9353 ;;		_ADC_init
  9354 ;;		_ADC_Select_Channel
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text44
  9359   0036CA                     __ptext44:
  9360                           	callstack 0
  9361   0036CA                     _ADC_configure_Channel:
  9362                           	callstack 24
  9363                           
  9364                           ;incstack = 0
  9365                           ;ADC_configure_Channel@channel stored from wreg
  9366   0036CA  6E0F               	movwf	ADC_configure_Channel@channel^0,c
  9367   0036CC                     
  9368                           ;MCAL_layer/ADC/hal_ADC.c: 256:         switch(channel)
  9369   0036CC  EF91  F01B         	goto	l5681
  9370   0036D0                     l5653:
  9371                           
  9372                           ;MCAL_layer/ADC/hal_ADC.c: 259:                 (TRISA |= ((uint8)1 << 0x0));
  9373   0036D0  8092               	bsf	146,0,c	;volatile
  9374                           
  9375                           ;MCAL_layer/ADC/hal_ADC.c: 260:                 break;
  9376   0036D2  EFD2  F01B         	goto	l488
  9377   0036D6                     l5655:
  9378                           
  9379                           ;MCAL_layer/ADC/hal_ADC.c: 262:                 (TRISA |= ((uint8)1 << 0x1));
  9380   0036D6  8292               	bsf	146,1,c	;volatile
  9381                           
  9382                           ;MCAL_layer/ADC/hal_ADC.c: 263:                 break;
  9383   0036D8  EFD2  F01B         	goto	l488
  9384   0036DC                     l5657:
  9385                           
  9386                           ;MCAL_layer/ADC/hal_ADC.c: 265:                 (TRISA |= ((uint8)1 << 0x2));
  9387   0036DC  8492               	bsf	146,2,c	;volatile
  9388                           
  9389                           ;MCAL_layer/ADC/hal_ADC.c: 266:                 break;
  9390   0036DE  EFD2  F01B         	goto	l488
  9391   0036E2                     l5659:
  9392                           
  9393                           ;MCAL_layer/ADC/hal_ADC.c: 268:                 (TRISA |= ((uint8)1 << 0x3));
  9394   0036E2  8692               	bsf	146,3,c	;volatile
  9395                           
  9396                           ;MCAL_layer/ADC/hal_ADC.c: 269:                 break;
  9397   0036E4  EFD2  F01B         	goto	l488
  9398   0036E8                     l5661:
  9399                           
  9400                           ;MCAL_layer/ADC/hal_ADC.c: 271:                 (TRISA |= ((uint8)1 << 0x5));
  9401   0036E8  8A92               	bsf	146,5,c	;volatile
  9402                           
  9403                           ;MCAL_layer/ADC/hal_ADC.c: 272:                 break;
  9404   0036EA  EFD2  F01B         	goto	l488
  9405   0036EE                     l5663:
  9406                           
  9407                           ;MCAL_layer/ADC/hal_ADC.c: 274:                 (TRISE |= ((uint8)1 << 0x0));
  9408   0036EE  8096               	bsf	150,0,c	;volatile
  9409                           
  9410                           ;MCAL_layer/ADC/hal_ADC.c: 275:                 break;
  9411   0036F0  EFD2  F01B         	goto	l488
  9412   0036F4                     l5665:
  9413                           
  9414                           ;MCAL_layer/ADC/hal_ADC.c: 277:                 (TRISE |= ((uint8)1 << 0x1));
  9415   0036F4  8296               	bsf	150,1,c	;volatile
  9416                           
  9417                           ;MCAL_layer/ADC/hal_ADC.c: 278:                 break;
  9418   0036F6  EFD2  F01B         	goto	l488
  9419   0036FA                     l5667:
  9420                           
  9421                           ;MCAL_layer/ADC/hal_ADC.c: 280:                 (TRISE |= ((uint8)1 << 0x2));
  9422   0036FA  8496               	bsf	150,2,c	;volatile
  9423                           
  9424                           ;MCAL_layer/ADC/hal_ADC.c: 281:                 break;
  9425   0036FC  EFD2  F01B         	goto	l488
  9426   003700                     l5669:
  9427                           
  9428                           ;MCAL_layer/ADC/hal_ADC.c: 283:                 (TRISB |= ((uint8)1 << 0x2));
  9429   003700  8493               	bsf	147,2,c	;volatile
  9430                           
  9431                           ;MCAL_layer/ADC/hal_ADC.c: 284:                 break;
  9432   003702  EFD2  F01B         	goto	l488
  9433   003706                     l5671:
  9434                           
  9435                           ;MCAL_layer/ADC/hal_ADC.c: 286:                 (TRISB |= ((uint8)1 << 0x3));
  9436   003706  8693               	bsf	147,3,c	;volatile
  9437                           
  9438                           ;MCAL_layer/ADC/hal_ADC.c: 287:                 break;
  9439   003708  EFD2  F01B         	goto	l488
  9440   00370C                     l5673:
  9441                           
  9442                           ;MCAL_layer/ADC/hal_ADC.c: 289:                 (TRISB |= ((uint8)1 << 0x1));
  9443   00370C  8293               	bsf	147,1,c	;volatile
  9444                           
  9445                           ;MCAL_layer/ADC/hal_ADC.c: 290:                 break;
  9446   00370E  EFD2  F01B         	goto	l488
  9447   003712                     l5675:
  9448                           
  9449                           ;MCAL_layer/ADC/hal_ADC.c: 292:                 (TRISB |= ((uint8)1 << 0x4));
  9450   003712  8893               	bsf	147,4,c	;volatile
  9451                           
  9452                           ;MCAL_layer/ADC/hal_ADC.c: 293:                 break;
  9453   003714  EFD2  F01B         	goto	l488
  9454   003718                     l5677:
  9455                           
  9456                           ;MCAL_layer/ADC/hal_ADC.c: 295:                 (TRISB |= ((uint8)1 << 0x0));
  9457   003718  8093               	bsf	147,0,c	;volatile
  9458                           
  9459                           ;MCAL_layer/ADC/hal_ADC.c: 296:                 break;
  9460   00371A  EFD2  F01B         	goto	l488
  9461   00371E                     l5679:
  9462                           
  9463                           ;MCAL_layer/ADC/hal_ADC.c: 300:         }
  9464   00371E  EFD2  F01B         	goto	l488
  9465   003722                     l5681:
  9466   003722  500F               	movf	ADC_configure_Channel@channel^0,w,c
  9467   003724  6E0D               	movwf	??_ADC_configure_Channel^0,c
  9468   003726  6A0E               	clrf	(??_ADC_configure_Channel+1)^0,c
  9469                           
  9470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9471                           ; Switch size 1, requested type "simple"
  9472                           ; Number of cases is 1, Range of values is 0 to 0
  9473                           ; switch strategies available:
  9474                           ; Name         Instructions Cycles
  9475                           ; simple_byte            4     3 (average)
  9476                           ;	Chosen strategy is simple_byte
  9477   003728  500E               	movf	(??_ADC_configure_Channel+1)^0,w,c
  9478   00372A  0A00               	xorlw	0	; case 0
  9479   00372C  B4D8               	btfsc	status,2,c
  9480   00372E  EF9B  F01B         	goto	l10343
  9481   003732  EF8F  F01B         	goto	l5679
  9482   003736                     l10343:
  9483                           
  9484                           ; Switch size 1, requested type "simple"
  9485                           ; Number of cases is 13, Range of values is 0 to 12
  9486                           ; switch strategies available:
  9487                           ; Name         Instructions Cycles
  9488                           ; simple_byte           40    21 (average)
  9489                           ;	Chosen strategy is simple_byte
  9490   003736  500D               	movf	??_ADC_configure_Channel^0,w,c
  9491   003738  0A00               	xorlw	0	; case 0
  9492   00373A  B4D8               	btfsc	status,2,c
  9493   00373C  EF68  F01B         	goto	l5653
  9494   003740  0A01               	xorlw	1	; case 1
  9495   003742  B4D8               	btfsc	status,2,c
  9496   003744  EF6B  F01B         	goto	l5655
  9497   003748  0A03               	xorlw	3	; case 2
  9498   00374A  B4D8               	btfsc	status,2,c
  9499   00374C  EF6E  F01B         	goto	l5657
  9500   003750  0A01               	xorlw	1	; case 3
  9501   003752  B4D8               	btfsc	status,2,c
  9502   003754  EF71  F01B         	goto	l5659
  9503   003758  0A07               	xorlw	7	; case 4
  9504   00375A  B4D8               	btfsc	status,2,c
  9505   00375C  EF74  F01B         	goto	l5661
  9506   003760  0A01               	xorlw	1	; case 5
  9507   003762  B4D8               	btfsc	status,2,c
  9508   003764  EF77  F01B         	goto	l5663
  9509   003768  0A03               	xorlw	3	; case 6
  9510   00376A  B4D8               	btfsc	status,2,c
  9511   00376C  EF7A  F01B         	goto	l5665
  9512   003770  0A01               	xorlw	1	; case 7
  9513   003772  B4D8               	btfsc	status,2,c
  9514   003774  EF7D  F01B         	goto	l5667
  9515   003778  0A0F               	xorlw	15	; case 8
  9516   00377A  B4D8               	btfsc	status,2,c
  9517   00377C  EF80  F01B         	goto	l5669
  9518   003780  0A01               	xorlw	1	; case 9
  9519   003782  B4D8               	btfsc	status,2,c
  9520   003784  EF83  F01B         	goto	l5671
  9521   003788  0A03               	xorlw	3	; case 10
  9522   00378A  B4D8               	btfsc	status,2,c
  9523   00378C  EF86  F01B         	goto	l5673
  9524   003790  0A01               	xorlw	1	; case 11
  9525   003792  B4D8               	btfsc	status,2,c
  9526   003794  EF89  F01B         	goto	l5675
  9527   003798  0A07               	xorlw	7	; case 12
  9528   00379A  B4D8               	btfsc	status,2,c
  9529   00379C  EF8C  F01B         	goto	l5677
  9530   0037A0  EF8F  F01B         	goto	l5679
  9531   0037A4                     l488:
  9532   0037A4  0012               	return		;funcret
  9533   0037A6                     __end_of_ADC_configure_Channel:
  9534                           	callstack 0
  9535                           
  9536 ;; *************** function _Interrupt_manager *****************
  9537 ;; Defined at:
  9538 ;;		line 47 in file "MCAL_layer/Interrupt/mcal_Interrupt_manger.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;		None
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;		None
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  1    wreg      void 
  9545 ;; Registers used:
  9546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;Total ram usage:        4 bytes
  9557 ;; Hardware stack levels used: 1
  9558 ;; Hardware stack levels required when called: 3
  9559 ;; This function calls:
  9560 ;;		_ADC_ISR
  9561 ;;		_CCP1_ISR
  9562 ;;		_CCP2_ISR
  9563 ;;		_INT0_ISR
  9564 ;;		_INT1_ISR
  9565 ;;		_INT2_ISR
  9566 ;;		_RB4_ISR
  9567 ;;		_RB5_ISR
  9568 ;;		_RB6_ISR
  9569 ;;		_RB7_ISR
  9570 ;;		_TIMER0_ISR
  9571 ;;		_TIMER1_ISR
  9572 ;;		_TIMER2_ISR
  9573 ;;		_TIMER3_ISR
  9574 ;; This function is called by:
  9575 ;;		Interrupt level 2
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	intcode
  9580   000008                     __pintcode:
  9581                           	callstack 0
  9582   000008                     _Interrupt_manager:
  9583                           	callstack 18
  9584                           
  9585                           ;incstack = 0
  9586   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9587   00000A  ED21  F011         	call	int_func,f	;refresh shadow registers
  9588                           
  9589                           	psect	intcode_body
  9590   002242                     __pintcode_body:
  9591                           	callstack 18
  9592   002242                     int_func:
  9593                           	callstack 18
  9594   002242  0006               	pop		; remove dummy address from shadow register refresh
  9595   002244  CFFA F009          	movff	pclath,??_Interrupt_manager
  9596   002248  CFFB F00A          	movff	pclatu,??_Interrupt_manager+1
  9597   00224C  CFD9 F00B          	movff	fsr2l,??_Interrupt_manager+2
  9598   002250  CFDA F00C          	movff	fsr2h,??_Interrupt_manager+3
  9599   002254                     
  9600                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 50:     if((INTCONbits.INT0IE == 1)&&(INT
      +                          CONbits.INT0F == 1))
  9601   002254  A8F2               	btfss	242,4,c	;volatile
  9602   002256  EF2F  F011         	goto	i2u750_41
  9603   00225A  EF31  F011         	goto	i2u750_40
  9604   00225E                     i2u750_41:
  9605   00225E  EF3A  F011         	goto	i2l1028
  9606   002262                     i2u750_40:
  9607   002262  A2F2               	btfss	242,1,c	;volatile
  9608   002264  EF36  F011         	goto	i2u751_41
  9609   002268  EF38  F011         	goto	i2u751_40
  9610   00226C                     i2u751_41:
  9611   00226C  EF3A  F011         	goto	i2l1028
  9612   002270                     i2u751_40:
  9613   002270                     
  9614                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 51:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 52:         INT0_ISR();
  9615   002270  ECF3  F022         	call	_INT0_ISR	;wreg free
  9616   002274                     i2l1028:
  9617                           
  9618                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 56:     if((INTCON3bits.INT1IE == 1)&&(IN
      +                          TCON3bits.INT1F == 1))
  9619   002274  A6F0               	btfss	240,3,c	;volatile
  9620   002276  EF3F  F011         	goto	i2u752_41
  9621   00227A  EF41  F011         	goto	i2u752_40
  9622   00227E                     i2u752_41:
  9623   00227E  EF4A  F011         	goto	i2l1030
  9624   002282                     i2u752_40:
  9625   002282  A0F0               	btfss	240,0,c	;volatile
  9626   002284  EF46  F011         	goto	i2u753_41
  9627   002288  EF48  F011         	goto	i2u753_40
  9628   00228C                     i2u753_41:
  9629   00228C  EF4A  F011         	goto	i2l1030
  9630   002290                     i2u753_40:
  9631   002290                     
  9632                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 57:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 58:         INT1_ISR();
  9633   002290  ECF1  F022         	call	_INT1_ISR	;wreg free
  9634   002294                     i2l1030:
  9635                           
  9636                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 62:     if((INTCON3bits.INT2IE == 1)&&(IN
      +                          TCON3bits.INT2IF == 1))
  9637   002294  A8F0               	btfss	240,4,c	;volatile
  9638   002296  EF4F  F011         	goto	i2u754_41
  9639   00229A  EF51  F011         	goto	i2u754_40
  9640   00229E                     i2u754_41:
  9641   00229E  EF5A  F011         	goto	i2l1032
  9642   0022A2                     i2u754_40:
  9643   0022A2  A2F0               	btfss	240,1,c	;volatile
  9644   0022A4  EF56  F011         	goto	i2u755_41
  9645   0022A8  EF58  F011         	goto	i2u755_40
  9646   0022AC                     i2u755_41:
  9647   0022AC  EF5A  F011         	goto	i2l1032
  9648   0022B0                     i2u755_40:
  9649   0022B0                     
  9650                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 63:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 64:         INT2_ISR();
  9651   0022B0  ECEF  F022         	call	_INT2_ISR	;wreg free
  9652   0022B4                     i2l1032:
  9653                           
  9654                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 71:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB4 == GPIO_HIGH)&&(RBx_flag[0] == 0))
  9655   0022B4  A6F2               	btfss	242,3,c	;volatile
  9656   0022B6  EF5F  F011         	goto	i2u756_41
  9657   0022BA  EF61  F011         	goto	i2u756_40
  9658   0022BE                     i2u756_41:
  9659   0022BE  EF7C  F011         	goto	i2l1034
  9660   0022C2                     i2u756_40:
  9661   0022C2  A0F2               	btfss	242,0,c	;volatile
  9662   0022C4  EF66  F011         	goto	i2u757_41
  9663   0022C8  EF68  F011         	goto	i2u757_40
  9664   0022CC                     i2u757_41:
  9665   0022CC  EF7C  F011         	goto	i2l1034
  9666   0022D0                     i2u757_40:
  9667   0022D0  A881               	btfss	129,4,c	;volatile
  9668   0022D2  EF6D  F011         	goto	i2u758_41
  9669   0022D6  EF6F  F011         	goto	i2u758_40
  9670   0022DA                     i2u758_41:
  9671   0022DA  EF7C  F011         	goto	i2l1034
  9672   0022DE                     i2u758_40:
  9673   0022DE  5067               	movf	_RBx_flag^0,w,c	;volatile
  9674   0022E0  A4D8               	btfss	status,2,c
  9675   0022E2  EF75  F011         	goto	i2u759_41
  9676   0022E6  EF77  F011         	goto	i2u759_40
  9677   0022EA                     i2u759_41:
  9678   0022EA  EF7C  F011         	goto	i2l1034
  9679   0022EE                     i2u759_40:
  9680   0022EE                     
  9681                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 72:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 73:         RBx_flag[0] = 1;
  9682   0022EE  0E01               	movlw	1
  9683   0022F0  6E67               	movwf	_RBx_flag^0,c	;volatile
  9684   0022F2                     
  9685                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 74:         RB4_ISR(0);
  9686   0022F2  0E00               	movlw	0
  9687   0022F4  ECC0  F022         	call	_RB4_ISR
  9688   0022F8                     i2l1034:
  9689                           
  9690                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 78:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB4 == GPIO_LOW)&&(RBx_flag[0] == 1))
  9691   0022F8  A6F2               	btfss	242,3,c	;volatile
  9692   0022FA  EF81  F011         	goto	i2u760_41
  9693   0022FE  EF83  F011         	goto	i2u760_40
  9694   002302                     i2u760_41:
  9695   002302  EF9E  F011         	goto	i2l1036
  9696   002306                     i2u760_40:
  9697   002306  A0F2               	btfss	242,0,c	;volatile
  9698   002308  EF88  F011         	goto	i2u761_41
  9699   00230C  EF8A  F011         	goto	i2u761_40
  9700   002310                     i2u761_41:
  9701   002310  EF9E  F011         	goto	i2l1036
  9702   002314                     i2u761_40:
  9703   002314  B881               	btfsc	129,4,c	;volatile
  9704   002316  EF8F  F011         	goto	i2u762_41
  9705   00231A  EF91  F011         	goto	i2u762_40
  9706   00231E                     i2u762_41:
  9707   00231E  EF9E  F011         	goto	i2l1036
  9708   002322                     i2u762_40:
  9709   002322  0467               	decf	_RBx_flag^0,w,c	;volatile
  9710   002324  A4D8               	btfss	status,2,c
  9711   002326  EF97  F011         	goto	i2u763_41
  9712   00232A  EF99  F011         	goto	i2u763_40
  9713   00232E                     i2u763_41:
  9714   00232E  EF9E  F011         	goto	i2l1036
  9715   002332                     i2u763_40:
  9716   002332                     
  9717                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 79:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 80:         RBx_flag[0] = 0;
  9718   002332  0E00               	movlw	0
  9719   002334  6E67               	movwf	_RBx_flag^0,c	;volatile
  9720   002336                     
  9721                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 81:         RB4_ISR(1);
  9722   002336  0E01               	movlw	1
  9723   002338  ECC0  F022         	call	_RB4_ISR
  9724   00233C                     i2l1036:
  9725                           
  9726                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 85:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB5 == GPIO_HIGH)&&(RBx_flag[1] == 0))
  9727   00233C  A6F2               	btfss	242,3,c	;volatile
  9728   00233E  EFA3  F011         	goto	i2u764_41
  9729   002342  EFA5  F011         	goto	i2u764_40
  9730   002346                     i2u764_41:
  9731   002346  EFC0  F011         	goto	i2l1038
  9732   00234A                     i2u764_40:
  9733   00234A  A0F2               	btfss	242,0,c	;volatile
  9734   00234C  EFAA  F011         	goto	i2u765_41
  9735   002350  EFAC  F011         	goto	i2u765_40
  9736   002354                     i2u765_41:
  9737   002354  EFC0  F011         	goto	i2l1038
  9738   002358                     i2u765_40:
  9739   002358  AA81               	btfss	129,5,c	;volatile
  9740   00235A  EFB1  F011         	goto	i2u766_41
  9741   00235E  EFB3  F011         	goto	i2u766_40
  9742   002362                     i2u766_41:
  9743   002362  EFC0  F011         	goto	i2l1038
  9744   002366                     i2u766_40:
  9745   002366  5068               	movf	(_RBx_flag+1)^0,w,c	;volatile
  9746   002368  A4D8               	btfss	status,2,c
  9747   00236A  EFB9  F011         	goto	i2u767_41
  9748   00236E  EFBB  F011         	goto	i2u767_40
  9749   002372                     i2u767_41:
  9750   002372  EFC0  F011         	goto	i2l1038
  9751   002376                     i2u767_40:
  9752   002376                     
  9753                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 86:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 87:         RBx_flag[1] = 1;
  9754   002376  0E01               	movlw	1
  9755   002378  6E68               	movwf	(_RBx_flag+1)^0,c	;volatile
  9756   00237A                     
  9757                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 88:         RB5_ISR(0);
  9758   00237A  0E00               	movlw	0
  9759   00237C  ECB3  F022         	call	_RB5_ISR
  9760   002380                     i2l1038:
  9761                           
  9762                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 92:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB5 == GPIO_LOW)&&(RBx_flag[1] == 1))
  9763   002380  A6F2               	btfss	242,3,c	;volatile
  9764   002382  EFC5  F011         	goto	i2u768_41
  9765   002386  EFC7  F011         	goto	i2u768_40
  9766   00238A                     i2u768_41:
  9767   00238A  EFE2  F011         	goto	i2l1040
  9768   00238E                     i2u768_40:
  9769   00238E  A0F2               	btfss	242,0,c	;volatile
  9770   002390  EFCC  F011         	goto	i2u769_41
  9771   002394  EFCE  F011         	goto	i2u769_40
  9772   002398                     i2u769_41:
  9773   002398  EFE2  F011         	goto	i2l1040
  9774   00239C                     i2u769_40:
  9775   00239C  BA81               	btfsc	129,5,c	;volatile
  9776   00239E  EFD3  F011         	goto	i2u770_41
  9777   0023A2  EFD5  F011         	goto	i2u770_40
  9778   0023A6                     i2u770_41:
  9779   0023A6  EFE2  F011         	goto	i2l1040
  9780   0023AA                     i2u770_40:
  9781   0023AA  0468               	decf	(_RBx_flag+1)^0,w,c	;volatile
  9782   0023AC  A4D8               	btfss	status,2,c
  9783   0023AE  EFDB  F011         	goto	i2u771_41
  9784   0023B2  EFDD  F011         	goto	i2u771_40
  9785   0023B6                     i2u771_41:
  9786   0023B6  EFE2  F011         	goto	i2l1040
  9787   0023BA                     i2u771_40:
  9788   0023BA                     
  9789                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 93:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 94:         RBx_flag[1] = 0;
  9790   0023BA  0E00               	movlw	0
  9791   0023BC  6E68               	movwf	(_RBx_flag+1)^0,c	;volatile
  9792   0023BE                     
  9793                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 95:         RB5_ISR(1);
  9794   0023BE  0E01               	movlw	1
  9795   0023C0  ECB3  F022         	call	_RB5_ISR
  9796   0023C4                     i2l1040:
  9797                           
  9798                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 99:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB6 == GPIO_HIGH)&&(RBx_flag[2] == 0))
  9799   0023C4  A6F2               	btfss	242,3,c	;volatile
  9800   0023C6  EFE7  F011         	goto	i2u772_41
  9801   0023CA  EFE9  F011         	goto	i2u772_40
  9802   0023CE                     i2u772_41:
  9803   0023CE  EF04  F012         	goto	i2l1042
  9804   0023D2                     i2u772_40:
  9805   0023D2  A0F2               	btfss	242,0,c	;volatile
  9806   0023D4  EFEE  F011         	goto	i2u773_41
  9807   0023D8  EFF0  F011         	goto	i2u773_40
  9808   0023DC                     i2u773_41:
  9809   0023DC  EF04  F012         	goto	i2l1042
  9810   0023E0                     i2u773_40:
  9811   0023E0  AC81               	btfss	129,6,c	;volatile
  9812   0023E2  EFF5  F011         	goto	i2u774_41
  9813   0023E6  EFF7  F011         	goto	i2u774_40
  9814   0023EA                     i2u774_41:
  9815   0023EA  EF04  F012         	goto	i2l1042
  9816   0023EE                     i2u774_40:
  9817   0023EE  5069               	movf	(_RBx_flag+2)^0,w,c	;volatile
  9818   0023F0  A4D8               	btfss	status,2,c
  9819   0023F2  EFFD  F011         	goto	i2u775_41
  9820   0023F6  EFFF  F011         	goto	i2u775_40
  9821   0023FA                     i2u775_41:
  9822   0023FA  EF04  F012         	goto	i2l1042
  9823   0023FE                     i2u775_40:
  9824   0023FE                     
  9825                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 100:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 101:         RBx_flag[2] = 1;
  9826   0023FE  0E01               	movlw	1
  9827   002400  6E69               	movwf	(_RBx_flag+2)^0,c	;volatile
  9828   002402                     
  9829                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 102:         RB6_ISR(0);
  9830   002402  0E00               	movlw	0
  9831   002404  ECA6  F022         	call	_RB6_ISR
  9832   002408                     i2l1042:
  9833                           
  9834                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 106:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB6 == GPIO_LOW)&&(RBx_flag[2] == 1))
  9835   002408  A6F2               	btfss	242,3,c	;volatile
  9836   00240A  EF09  F012         	goto	i2u776_41
  9837   00240E  EF0B  F012         	goto	i2u776_40
  9838   002412                     i2u776_41:
  9839   002412  EF26  F012         	goto	i2l1044
  9840   002416                     i2u776_40:
  9841   002416  A0F2               	btfss	242,0,c	;volatile
  9842   002418  EF10  F012         	goto	i2u777_41
  9843   00241C  EF12  F012         	goto	i2u777_40
  9844   002420                     i2u777_41:
  9845   002420  EF26  F012         	goto	i2l1044
  9846   002424                     i2u777_40:
  9847   002424  BC81               	btfsc	129,6,c	;volatile
  9848   002426  EF17  F012         	goto	i2u778_41
  9849   00242A  EF19  F012         	goto	i2u778_40
  9850   00242E                     i2u778_41:
  9851   00242E  EF26  F012         	goto	i2l1044
  9852   002432                     i2u778_40:
  9853   002432  0469               	decf	(_RBx_flag+2)^0,w,c	;volatile
  9854   002434  A4D8               	btfss	status,2,c
  9855   002436  EF1F  F012         	goto	i2u779_41
  9856   00243A  EF21  F012         	goto	i2u779_40
  9857   00243E                     i2u779_41:
  9858   00243E  EF26  F012         	goto	i2l1044
  9859   002442                     i2u779_40:
  9860   002442                     
  9861                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 107:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 108:         RBx_flag[2] = 0;
  9862   002442  0E00               	movlw	0
  9863   002444  6E69               	movwf	(_RBx_flag+2)^0,c	;volatile
  9864   002446                     
  9865                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 109:         RB6_ISR(1);
  9866   002446  0E01               	movlw	1
  9867   002448  ECA6  F022         	call	_RB6_ISR
  9868   00244C                     i2l1044:
  9869                           
  9870                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 113:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB7 == GPIO_HIGH)&&(RBx_flag[3] == 0))
  9871   00244C  A6F2               	btfss	242,3,c	;volatile
  9872   00244E  EF2B  F012         	goto	i2u780_41
  9873   002452  EF2D  F012         	goto	i2u780_40
  9874   002456                     i2u780_41:
  9875   002456  EF48  F012         	goto	i2l1046
  9876   00245A                     i2u780_40:
  9877   00245A  A0F2               	btfss	242,0,c	;volatile
  9878   00245C  EF32  F012         	goto	i2u781_41
  9879   002460  EF34  F012         	goto	i2u781_40
  9880   002464                     i2u781_41:
  9881   002464  EF48  F012         	goto	i2l1046
  9882   002468                     i2u781_40:
  9883   002468  AE81               	btfss	129,7,c	;volatile
  9884   00246A  EF39  F012         	goto	i2u782_41
  9885   00246E  EF3B  F012         	goto	i2u782_40
  9886   002472                     i2u782_41:
  9887   002472  EF48  F012         	goto	i2l1046
  9888   002476                     i2u782_40:
  9889   002476  506A               	movf	(_RBx_flag+3)^0,w,c	;volatile
  9890   002478  A4D8               	btfss	status,2,c
  9891   00247A  EF41  F012         	goto	i2u783_41
  9892   00247E  EF43  F012         	goto	i2u783_40
  9893   002482                     i2u783_41:
  9894   002482  EF48  F012         	goto	i2l1046
  9895   002486                     i2u783_40:
  9896   002486                     
  9897                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 114:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 115:         RBx_flag[3] = 1;
  9898   002486  0E01               	movlw	1
  9899   002488  6E6A               	movwf	(_RBx_flag+3)^0,c	;volatile
  9900   00248A                     
  9901                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 116:         RB7_ISR(0);
  9902   00248A  0E00               	movlw	0
  9903   00248C  EC99  F022         	call	_RB7_ISR
  9904   002490                     i2l1046:
  9905                           
  9906                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 120:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB7 == GPIO_LOW)&&(RBx_flag[3] == 1))
  9907   002490  A6F2               	btfss	242,3,c	;volatile
  9908   002492  EF4D  F012         	goto	i2u784_41
  9909   002496  EF4F  F012         	goto	i2u784_40
  9910   00249A                     i2u784_41:
  9911   00249A  EF6A  F012         	goto	i2l1048
  9912   00249E                     i2u784_40:
  9913   00249E  A0F2               	btfss	242,0,c	;volatile
  9914   0024A0  EF54  F012         	goto	i2u785_41
  9915   0024A4  EF56  F012         	goto	i2u785_40
  9916   0024A8                     i2u785_41:
  9917   0024A8  EF6A  F012         	goto	i2l1048
  9918   0024AC                     i2u785_40:
  9919   0024AC  BE81               	btfsc	129,7,c	;volatile
  9920   0024AE  EF5B  F012         	goto	i2u786_41
  9921   0024B2  EF5D  F012         	goto	i2u786_40
  9922   0024B6                     i2u786_41:
  9923   0024B6  EF6A  F012         	goto	i2l1048
  9924   0024BA                     i2u786_40:
  9925   0024BA  046A               	decf	(_RBx_flag+3)^0,w,c	;volatile
  9926   0024BC  A4D8               	btfss	status,2,c
  9927   0024BE  EF63  F012         	goto	i2u787_41
  9928   0024C2  EF65  F012         	goto	i2u787_40
  9929   0024C6                     i2u787_41:
  9930   0024C6  EF6A  F012         	goto	i2l1048
  9931   0024CA                     i2u787_40:
  9932   0024CA                     
  9933                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 121:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 122:         RBx_flag[3] = 0;
  9934   0024CA  0E00               	movlw	0
  9935   0024CC  6E6A               	movwf	(_RBx_flag+3)^0,c	;volatile
  9936   0024CE                     
  9937                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 123:         RB7_ISR(1);
  9938   0024CE  0E01               	movlw	1
  9939   0024D0  EC99  F022         	call	_RB7_ISR
  9940   0024D4                     i2l1048:
  9941                           
  9942                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 131:     if((PIE1bits.ADIE == 1)&&(PIR1bi
      +                          ts.ADIF == 1))
  9943   0024D4  AC9D               	btfss	157,6,c	;volatile
  9944   0024D6  EF6F  F012         	goto	i2u788_41
  9945   0024DA  EF71  F012         	goto	i2u788_40
  9946   0024DE                     i2u788_41:
  9947   0024DE  EF7A  F012         	goto	i2l1050
  9948   0024E2                     i2u788_40:
  9949   0024E2  AC9E               	btfss	158,6,c	;volatile
  9950   0024E4  EF76  F012         	goto	i2u789_41
  9951   0024E8  EF78  F012         	goto	i2u789_40
  9952   0024EC                     i2u789_41:
  9953   0024EC  EF7A  F012         	goto	i2l1050
  9954   0024F0                     i2u789_40:
  9955   0024F0                     
  9956                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 132:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 133:         ADC_ISR();
  9957   0024F0  EC53  F022         	call	_ADC_ISR	;wreg free
  9958   0024F4                     i2l1050:
  9959                           
  9960                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 140:     if((INTCONbits.TMR0IE == 1)&&(IN
      +                          TCONbits.TMR0IF == 1))
  9961   0024F4  AAF2               	btfss	242,5,c	;volatile
  9962   0024F6  EF7F  F012         	goto	i2u790_41
  9963   0024FA  EF81  F012         	goto	i2u790_40
  9964   0024FE                     i2u790_41:
  9965   0024FE  EF8A  F012         	goto	i2l1052
  9966   002502                     i2u790_40:
  9967   002502  A4F2               	btfss	242,2,c	;volatile
  9968   002504  EF86  F012         	goto	i2u791_41
  9969   002508  EF88  F012         	goto	i2u791_40
  9970   00250C                     i2u791_41:
  9971   00250C  EF8A  F012         	goto	i2l1052
  9972   002510                     i2u791_40:
  9973   002510                     
  9974                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 141:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 142:         TIMER0_ISR();
  9975   002510  ECE4  F022         	call	_TIMER0_ISR	;wreg free
  9976   002514                     i2l1052:
  9977                           
  9978                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 149:     if((PIE1bits.TMR1IE == 1)&&(PIR1
      +                          bits.TMR1IF == 1))
  9979   002514  A09D               	btfss	157,0,c	;volatile
  9980   002516  EF8F  F012         	goto	i2u792_41
  9981   00251A  EF91  F012         	goto	i2u792_40
  9982   00251E                     i2u792_41:
  9983   00251E  EF9A  F012         	goto	i2l1054
  9984   002522                     i2u792_40:
  9985   002522  A09E               	btfss	158,0,c	;volatile
  9986   002524  EF96  F012         	goto	i2u793_41
  9987   002528  EF98  F012         	goto	i2u793_40
  9988   00252C                     i2u793_41:
  9989   00252C  EF9A  F012         	goto	i2l1054
  9990   002530                     i2u793_40:
  9991   002530                     
  9992                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 150:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 151:         TIMER1_ISR();
  9993   002530  ECDD  F022         	call	_TIMER1_ISR	;wreg free
  9994   002534                     i2l1054:
  9995                           
  9996                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 158:     if((PIE1bits.TMR2IE == 1)&&(PIR1
      +                          bits.TMR2IF == 1))
  9997   002534  A29D               	btfss	157,1,c	;volatile
  9998   002536  EF9F  F012         	goto	i2u794_41
  9999   00253A  EFA1  F012         	goto	i2u794_40
 10000   00253E                     i2u794_41:
 10001   00253E  EFAA  F012         	goto	i2l1056
 10002   002542                     i2u794_40:
 10003   002542  A29E               	btfss	158,1,c	;volatile
 10004   002544  EFA6  F012         	goto	i2u795_41
 10005   002548  EFA8  F012         	goto	i2u795_40
 10006   00254C                     i2u795_41:
 10007   00254C  EFAA  F012         	goto	i2l1056
 10008   002550                     i2u795_40:
 10009   002550                     
 10010                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 159:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 160:         TIMER2_ISR();
 10011   002550  ECEB  F022         	call	_TIMER2_ISR	;wreg free
 10012   002554                     i2l1056:
 10013                           
 10014                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 167:     if((PIE2bits.TMR3IE == 1)&&(PIR2
      +                          bits.TMR3IF == 1))
 10015   002554  A2A0               	btfss	160,1,c	;volatile
 10016   002556  EFAF  F012         	goto	i2u796_41
 10017   00255A  EFB1  F012         	goto	i2u796_40
 10018   00255E                     i2u796_41:
 10019   00255E  EFBA  F012         	goto	i2l1058
 10020   002562                     i2u796_40:
 10021   002562  A2A1               	btfss	161,1,c	;volatile
 10022   002564  EFB6  F012         	goto	i2u797_41
 10023   002568  EFB8  F012         	goto	i2u797_40
 10024   00256C                     i2u797_41:
 10025   00256C  EFBA  F012         	goto	i2l1058
 10026   002570                     i2u797_40:
 10027   002570                     
 10028                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 168:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 169:         TIMER3_ISR();
 10029   002570  ECD6  F022         	call	_TIMER3_ISR	;wreg free
 10030   002574                     i2l1058:
 10031                           
 10032                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 175:     if((PIE1bits.CCP1IE == 1)&&(PIR1
      +                          bits.CCP1IF == 1))
 10033   002574  A49D               	btfss	157,2,c	;volatile
 10034   002576  EFBF  F012         	goto	i2u798_41
 10035   00257A  EFC1  F012         	goto	i2u798_40
 10036   00257E                     i2u798_41:
 10037   00257E  EFCA  F012         	goto	i2l1060
 10038   002582                     i2u798_40:
 10039   002582  A49E               	btfss	158,2,c	;volatile
 10040   002584  EFC6  F012         	goto	i2u799_41
 10041   002588  EFC8  F012         	goto	i2u799_40
 10042   00258C                     i2u799_41:
 10043   00258C  EFCA  F012         	goto	i2l1060
 10044   002590                     i2u799_40:
 10045   002590                     
 10046                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 176:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 177:         CCP1_ISR();
 10047   002590  ECF7  F022         	call	_CCP1_ISR	;wreg free
 10048   002594                     i2l1060:
 10049                           
 10050                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 184:     if((PIE2bits.CCP2IE == 1)&&(PIR2
      +                          bits.CCP2IF == 1))
 10051   002594  A0A0               	btfss	160,0,c	;volatile
 10052   002596  EFCF  F012         	goto	i2u800_41
 10053   00259A  EFD1  F012         	goto	i2u800_40
 10054   00259E                     i2u800_41:
 10055   00259E  EFDA  F012         	goto	i2l1063
 10056   0025A2                     i2u800_40:
 10057   0025A2  A0A1               	btfss	161,0,c	;volatile
 10058   0025A4  EFD6  F012         	goto	i2u801_41
 10059   0025A8  EFD8  F012         	goto	i2u801_40
 10060   0025AC                     i2u801_41:
 10061   0025AC  EFDA  F012         	goto	i2l1063
 10062   0025B0                     i2u801_40:
 10063   0025B0                     
 10064                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 185:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 186:         CCP2_ISR();
 10065   0025B0  ECF5  F022         	call	_CCP2_ISR	;wreg free
 10066   0025B4                     i2l1063:
 10067   0025B4  C00C  FFDA         	movff	??_Interrupt_manager+3,fsr2h
 10068   0025B8  C00B  FFD9         	movff	??_Interrupt_manager+2,fsr2l
 10069   0025BC  C00A  FFFB         	movff	??_Interrupt_manager+1,pclatu
 10070   0025C0  C009  FFFA         	movff	??_Interrupt_manager,pclath
 10071   0025C4  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10072   0025C6  0011               	retfie		f
 10073   0025C8                     __end_of_Interrupt_manager:
 10074                           	callstack 0
 10075                           
 10076 ;; *************** function _TIMER3_ISR *****************
 10077 ;; Defined at:
 10078 ;;		line 115 in file "MCAL_layer/Timer3/Timer3.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg, status,2
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used: 1
 10098 ;; This function calls:
 10099 ;;		Nothing
 10100 ;; This function is called by:
 10101 ;;		_Interrupt_manager
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text46
 10106   0045AC                     __ptext46:
 10107                           	callstack 0
 10108   0045AC                     _TIMER3_ISR:
 10109                           	callstack 20
 10110   0045AC                     
 10111                           ;MCAL_layer/Timer3/Timer3.c: 117:     (PIR2bits.TMR3IF = 0);
 10112   0045AC  92A1               	bcf	161,1,c	;volatile
 10113   0045AE                     
 10114                           ;MCAL_layer/Timer3/Timer3.c: 118:     TMR3H = (uint8)(timer3_preload>>8);
 10115   0045AE  0100               	movlb	0	; () banked
 10116   0045B0  519B               	movf	(_timer3_preload+1)& (0+255),w,b
 10117   0045B2  6EB3               	movwf	179,c	;volatile
 10118   0045B4                     
 10119                           ; BSR set to: 0
 10120                           ;MCAL_layer/Timer3/Timer3.c: 119:     TMR3L = (uint8)(timer3_preload);
 10121   0045B4  C09A  FFB2         	movff	_timer3_preload,4018	;volatile
 10122   0045B8                     
 10123                           ; BSR set to: 0
 10124   0045B8  0012               	return		;funcret
 10125   0045BA                     __end_of_TIMER3_ISR:
 10126                           	callstack 0
 10127                           
 10128 ;; *************** function _TIMER2_ISR *****************
 10129 ;; Defined at:
 10130 ;;		line 103 in file "MCAL_layer/Timer2/Timer2.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		None
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used: 1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_Interrupt_manager
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text47
 10158   0045D6                     __ptext47:
 10159                           	callstack 0
 10160   0045D6                     _TIMER2_ISR:
 10161                           	callstack 20
 10162   0045D6                     
 10163                           ;MCAL_layer/Timer2/Timer2.c: 105:     (PIR1bits.TMR2IF = 0);
 10164   0045D6  929E               	bcf	158,1,c	;volatile
 10165                           
 10166                           ;MCAL_layer/Timer2/Timer2.c: 106:     TMR2 = timer2_preload;
 10167   0045D8  C0B1  FFCC         	movff	_timer2_preload,4044	;volatile
 10168   0045DC  0012               	return		;funcret
 10169   0045DE                     __end_of_TIMER2_ISR:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function _TIMER1_ISR *****************
 10173 ;; Defined at:
 10174 ;;		line 116 in file "MCAL_layer/Timer1/Timer1.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;Total ram usage:        0 bytes
 10193 ;; Hardware stack levels used: 1
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_Interrupt_manager
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text48
 10202   0045BA                     __ptext48:
 10203                           	callstack 0
 10204   0045BA                     _TIMER1_ISR:
 10205                           	callstack 20
 10206   0045BA                     
 10207                           ;MCAL_layer/Timer1/Timer1.c: 118:     (PIR1bits.TMR1IF = 0);
 10208   0045BA  909E               	bcf	158,0,c	;volatile
 10209   0045BC                     
 10210                           ;MCAL_layer/Timer1/Timer1.c: 119:     TMR1H = (uint8)(timer1_preload>>8);
 10211   0045BC  0100               	movlb	0	; () banked
 10212   0045BE  51A1               	movf	(_timer1_preload+1)& (0+255),w,b
 10213   0045C0  6ECF               	movwf	207,c	;volatile
 10214   0045C2                     
 10215                           ; BSR set to: 0
 10216                           ;MCAL_layer/Timer1/Timer1.c: 120:     TMR1L = (uint8)(timer1_preload);
 10217   0045C2  C0A0  FFCE         	movff	_timer1_preload,4046	;volatile
 10218   0045C6                     
 10219                           ; BSR set to: 0
 10220   0045C6  0012               	return		;funcret
 10221   0045C8                     __end_of_TIMER1_ISR:
 10222                           	callstack 0
 10223                           
 10224 ;; *************** function _TIMER0_ISR *****************
 10225 ;; Defined at:
 10226 ;;		line 238 in file "MCAL_layer/Timer0/Timer0.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;		None
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;		None
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      void 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;Total ram usage:        0 bytes
 10245 ;; Hardware stack levels used: 1
 10246 ;; This function calls:
 10247 ;;		Nothing
 10248 ;; This function is called by:
 10249 ;;		_Interrupt_manager
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text49
 10254   0045C8                     __ptext49:
 10255                           	callstack 0
 10256   0045C8                     _TIMER0_ISR:
 10257                           	callstack 20
 10258   0045C8                     
 10259                           ;MCAL_layer/Timer0/Timer0.c: 240:     (INTCONbits.TMR0IF = 0);
 10260   0045C8  94F2               	bcf	242,2,c	;volatile
 10261   0045CA                     
 10262                           ;MCAL_layer/Timer0/Timer0.c: 241:     TMR0H = (uint8)(timer0_preload>>8);
 10263   0045CA  0100               	movlb	0	; () banked
 10264   0045CC  51A5               	movf	(_timer0_preload+1)& (0+255),w,b
 10265   0045CE  6ED7               	movwf	215,c	;volatile
 10266   0045D0                     
 10267                           ; BSR set to: 0
 10268                           ;MCAL_layer/Timer0/Timer0.c: 242:     TMR0L = (uint8)(timer0_preload);
 10269   0045D0  C0A4  FFD6         	movff	_timer0_preload,4054	;volatile
 10270   0045D4                     
 10271                           ; BSR set to: 0
 10272   0045D4  0012               	return		;funcret
 10273   0045D6                     __end_of_TIMER0_ISR:
 10274                           	callstack 0
 10275                           
 10276 ;; *************** function _RB7_ISR *****************
 10277 ;; Defined at:
 10278 ;;		line 204 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  RB7_source      1    wreg     unsigned char 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  RB7_source      1    0[COMRAM] unsigned char 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, status,2, status,0
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;Total ram usage:        1 bytes
 10297 ;; Hardware stack levels used: 1
 10298 ;; This function calls:
 10299 ;;		Nothing
 10300 ;; This function is called by:
 10301 ;;		_Interrupt_manager
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text50
 10306   004532                     __ptext50:
 10307                           	callstack 0
 10308   004532                     _RB7_ISR:
 10309                           	callstack 20
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;incstack = 0
 10313                           ;RB7_ISR@RB7_source stored from wreg
 10314   004532  6E01               	movwf	RB7_ISR@RB7_source^0,c
 10315   004534                     
 10316                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 204: void RB7_ISR(uint8 RB7_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 205: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 206:     (INTCONbits.RBIF = 0);
 10317   004534  90F2               	bcf	242,0,c	;volatile
 10318   004536                     
 10319                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 207:     if(RB7_source == 0)
 10320   004536  5001               	movf	RB7_ISR@RB7_source^0,w,c
 10321   004538  A4D8               	btfss	status,2,c
 10322   00453A  EFA1  F022         	goto	i2u659_41
 10323   00453E  EFA3  F022         	goto	i2u659_40
 10324   004542                     i2u659_41:
 10325   004542  EFA5  F022         	goto	i2l6889
 10326   004546                     i2u659_40:
 10327   004546  EFA5  F022         	goto	i2l881
 10328   00454A                     i2l6889:
 10329   00454A                     i2l881:
 10330   00454A  0012               	return		;funcret
 10331   00454C                     __end_of_RB7_ISR:
 10332                           	callstack 0
 10333                           
 10334 ;; *************** function _RB6_ISR *****************
 10335 ;; Defined at:
 10336 ;;		line 184 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  RB6_source      1    wreg     unsigned char 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  RB6_source      1    0[COMRAM] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		wreg, status,2, status,0
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;Total ram usage:        1 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; This function calls:
 10357 ;;		Nothing
 10358 ;; This function is called by:
 10359 ;;		_Interrupt_manager
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           	psect	text51
 10364   00454C                     __ptext51:
 10365                           	callstack 0
 10366   00454C                     _RB6_ISR:
 10367                           	callstack 20
 10368                           
 10369                           ;incstack = 0
 10370                           ;RB6_ISR@RB6_source stored from wreg
 10371   00454C  6E01               	movwf	RB6_ISR@RB6_source^0,c
 10372   00454E                     
 10373                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 184: void RB6_ISR(uint8 RB6_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 185: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 186:     (INTCONbits.RBIF = 0);
 10374   00454E  90F2               	bcf	242,0,c	;volatile
 10375   004550                     
 10376                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 187:     if(RB6_source == 0)
 10377   004550  5001               	movf	RB6_ISR@RB6_source^0,w,c
 10378   004552  A4D8               	btfss	status,2,c
 10379   004554  EFAE  F022         	goto	i2u658_41
 10380   004558  EFB0  F022         	goto	i2u658_40
 10381   00455C                     i2u658_41:
 10382   00455C  EFB2  F022         	goto	i2l6879
 10383   004560                     i2u658_40:
 10384   004560  EFB2  F022         	goto	i2l873
 10385   004564                     i2l6879:
 10386   004564                     i2l873:
 10387   004564  0012               	return		;funcret
 10388   004566                     __end_of_RB6_ISR:
 10389                           	callstack 0
 10390                           
 10391 ;; *************** function _RB5_ISR *****************
 10392 ;; Defined at:
 10393 ;;		line 164 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  RB5_source      1    wreg     unsigned char 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  RB5_source      1    0[COMRAM] unsigned char 
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, status,2, status,0
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;Total ram usage:        1 bytes
 10412 ;; Hardware stack levels used: 1
 10413 ;; This function calls:
 10414 ;;		Nothing
 10415 ;; This function is called by:
 10416 ;;		_Interrupt_manager
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text52
 10421   004566                     __ptext52:
 10422                           	callstack 0
 10423   004566                     _RB5_ISR:
 10424                           	callstack 20
 10425                           
 10426                           ;incstack = 0
 10427                           ;RB5_ISR@RB5_source stored from wreg
 10428   004566  6E01               	movwf	RB5_ISR@RB5_source^0,c
 10429   004568                     
 10430                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 164: void RB5_ISR(uint8 RB5_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 165: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 166:     (INTCONbits.RBIF = 0);
 10431   004568  90F2               	bcf	242,0,c	;volatile
 10432   00456A                     
 10433                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 167:     if(RB5_source == 0)
 10434   00456A  5001               	movf	RB5_ISR@RB5_source^0,w,c
 10435   00456C  A4D8               	btfss	status,2,c
 10436   00456E  EFBB  F022         	goto	i2u657_41
 10437   004572  EFBD  F022         	goto	i2u657_40
 10438   004576                     i2u657_41:
 10439   004576  EFBF  F022         	goto	i2l6869
 10440   00457A                     i2u657_40:
 10441   00457A  EFBF  F022         	goto	i2l865
 10442   00457E                     i2l6869:
 10443   00457E                     i2l865:
 10444   00457E  0012               	return		;funcret
 10445   004580                     __end_of_RB5_ISR:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function _RB4_ISR *****************
 10449 ;; Defined at:
 10450 ;;		line 144 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  RB4_source      1    wreg     unsigned char 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  RB4_source      1    0[COMRAM] unsigned char 
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		wreg, status,2, status,0
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;Total ram usage:        1 bytes
 10469 ;; Hardware stack levels used: 1
 10470 ;; This function calls:
 10471 ;;		Nothing
 10472 ;; This function is called by:
 10473 ;;		_Interrupt_manager
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text53
 10478   004580                     __ptext53:
 10479                           	callstack 0
 10480   004580                     _RB4_ISR:
 10481                           	callstack 20
 10482                           
 10483                           ;incstack = 0
 10484                           ;RB4_ISR@RB4_source stored from wreg
 10485   004580  6E01               	movwf	RB4_ISR@RB4_source^0,c
 10486   004582                     
 10487                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 144: void RB4_ISR(uint8 RB4_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 145: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 146:     (INTCONbits.RBIF = 0);
 10488   004582  90F2               	bcf	242,0,c	;volatile
 10489   004584                     
 10490                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 147:     if(RB4_source == 0)
 10491   004584  5001               	movf	RB4_ISR@RB4_source^0,w,c
 10492   004586  A4D8               	btfss	status,2,c
 10493   004588  EFC8  F022         	goto	i2u656_41
 10494   00458C  EFCA  F022         	goto	i2u656_40
 10495   004590                     i2u656_41:
 10496   004590  EFCC  F022         	goto	i2l6859
 10497   004594                     i2u656_40:
 10498   004594  EFCC  F022         	goto	i2l857
 10499   004598                     i2l6859:
 10500   004598                     i2l857:
 10501   004598  0012               	return		;funcret
 10502   00459A                     __end_of_RB4_ISR:
 10503                           	callstack 0
 10504                           
 10505 ;; *************** function _INT2_ISR *****************
 10506 ;; Defined at:
 10507 ;;		line 81 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;		None
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;		None
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  1    wreg      void 
 10514 ;; Registers used:
 10515 ;;		None
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10525 ;;Total ram usage:        0 bytes
 10526 ;; Hardware stack levels used: 1
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_Interrupt_manager
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           	psect	text54
 10535   0045DE                     __ptext54:
 10536                           	callstack 0
 10537   0045DE                     _INT2_ISR:
 10538                           	callstack 20
 10539   0045DE                     
 10540                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 84:     (INTCON3bits.INT2IF = 0);
 10541   0045DE  92F0               	bcf	240,1,c	;volatile
 10542   0045E0  0012               	return		;funcret
 10543   0045E2                     __end_of_INT2_ISR:
 10544                           	callstack 0
 10545                           
 10546 ;; *************** function _INT1_ISR *****************
 10547 ;; Defined at:
 10548 ;;		line 68 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;		None
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;		None
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      void 
 10555 ;; Registers used:
 10556 ;;		None
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;Total ram usage:        0 bytes
 10567 ;; Hardware stack levels used: 1
 10568 ;; This function calls:
 10569 ;;		Nothing
 10570 ;; This function is called by:
 10571 ;;		_Interrupt_manager
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575                           	psect	text55
 10576   0045E2                     __ptext55:
 10577                           	callstack 0
 10578   0045E2                     _INT1_ISR:
 10579                           	callstack 20
 10580   0045E2                     
 10581                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 71:     (INTCON3bits.INT1IF = 0);
 10582   0045E2  90F0               	bcf	240,0,c	;volatile
 10583   0045E4  0012               	return		;funcret
 10584   0045E6                     __end_of_INT1_ISR:
 10585                           	callstack 0
 10586                           
 10587 ;; *************** function _INT0_ISR *****************
 10588 ;; Defined at:
 10589 ;;		line 55 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;		None
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;		None
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  1    wreg      void 
 10596 ;; Registers used:
 10597 ;;		None
 10598 ;; Tracked objects:
 10599 ;;		On entry : 0/0
 10600 ;;		On exit  : 0/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;Total ram usage:        0 bytes
 10608 ;; Hardware stack levels used: 1
 10609 ;; This function calls:
 10610 ;;		Nothing
 10611 ;; This function is called by:
 10612 ;;		_Interrupt_manager
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text56
 10617   0045E6                     __ptext56:
 10618                           	callstack 0
 10619   0045E6                     _INT0_ISR:
 10620                           	callstack 20
 10621   0045E6                     
 10622                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 58:     (INTCONbits.INT0IF = 0);
 10623   0045E6  92F2               	bcf	242,1,c	;volatile
 10624   0045E8  0012               	return		;funcret
 10625   0045EA                     __end_of_INT0_ISR:
 10626                           	callstack 0
 10627                           
 10628 ;; *************** function _CCP2_ISR *****************
 10629 ;; Defined at:
 10630 ;;		line 448 in file "MCAL_layer/CCP/CCP1.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;		None
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1    wreg      void 
 10637 ;; Registers used:
 10638 ;;		None
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10648 ;;Total ram usage:        0 bytes
 10649 ;; Hardware stack levels used: 1
 10650 ;; This function calls:
 10651 ;;		Nothing
 10652 ;; This function is called by:
 10653 ;;		_Interrupt_manager
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text57
 10658   0045EA                     __ptext57:
 10659                           	callstack 0
 10660   0045EA                     _CCP2_ISR:
 10661                           	callstack 20
 10662   0045EA                     
 10663                           ;MCAL_layer/CCP/CCP1.c: 450:     (PIR2bits.CCP2IF = 0);
 10664   0045EA  90A1               	bcf	161,0,c	;volatile
 10665   0045EC  0012               	return		;funcret
 10666   0045EE                     __end_of_CCP2_ISR:
 10667                           	callstack 0
 10668                           
 10669 ;; *************** function _CCP1_ISR *****************
 10670 ;; Defined at:
 10671 ;;		line 439 in file "MCAL_layer/CCP/CCP1.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;		None
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		None
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10689 ;;Total ram usage:        0 bytes
 10690 ;; Hardware stack levels used: 1
 10691 ;; This function calls:
 10692 ;;		Nothing
 10693 ;; This function is called by:
 10694 ;;		_Interrupt_manager
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           
 10698                           	psect	text58
 10699   0045EE                     __ptext58:
 10700                           	callstack 0
 10701   0045EE                     _CCP1_ISR:
 10702                           	callstack 20
 10703   0045EE                     
 10704                           ;MCAL_layer/CCP/CCP1.c: 441:     (PIR1bits.CCP1IF = 0);
 10705   0045EE  949E               	bcf	158,2,c	;volatile
 10706   0045F0  0012               	return		;funcret
 10707   0045F2                     __end_of_CCP1_ISR:
 10708                           	callstack 0
 10709                           
 10710 ;; *************** function _ADC_ISR *****************
 10711 ;; Defined at:
 10712 ;;		line 305 in file "MCAL_layer/ADC/hal_ADC.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;		None
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      void 
 10719 ;; Registers used:
 10720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;Total ram usage:        0 bytes
 10731 ;; Hardware stack levels used: 1
 10732 ;; Hardware stack levels required when called: 2
 10733 ;; This function calls:
 10734 ;;		NULL
 10735 ;;		_ADC_callback
 10736 ;; This function is called by:
 10737 ;;		_Interrupt_manager
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text59
 10742   0044A6                     __ptext59:
 10743                           	callstack 0
 10744   0044A6                     _ADC_ISR:
 10745                           	callstack 18
 10746   0044A6                     
 10747                           ;MCAL_layer/ADC/hal_ADC.c: 307:     (PIR1bits.ADIF = 0);
 10748   0044A6  9C9E               	bcf	158,6,c	;volatile
 10749   0044A8                     
 10750                           ;MCAL_layer/ADC/hal_ADC.c: 308:     if(ADC_InterruptCallBack != ((void*)0))
 10751   0044A8  0100               	movlb	0	; () banked
 10752   0044AA  51AE               	movf	_ADC_InterruptCallBack& (0+255),w,b
 10753   0044AC  11AF               	iorwf	(_ADC_InterruptCallBack+1)& (0+255),w,b
 10754   0044AE  B4D8               	btfsc	status,2,c
 10755   0044B0  EF5C  F022         	goto	i2u645_41
 10756   0044B4  EF5E  F022         	goto	i2u645_40
 10757   0044B8                     i2u645_41:
 10758   0044B8  EF6A  F022         	goto	i2l492
 10759   0044BC                     i2u645_40:
 10760   0044BC                     
 10761                           ; BSR set to: 0
 10762                           ;MCAL_layer/ADC/hal_ADC.c: 309:     {;MCAL_layer/ADC/hal_ADC.c: 310:         ADC_Interru
      +                          ptCallBack();
 10763   0044BC  D802               	call	i2u646_48
 10764   0044BE  EF6A  F022         	goto	i2u646_49
 10765   0044C2                     i2u646_48:
 10766   0044C2  0005               	push	
 10767   0044C4  6EFA               	movwf	pclath,c
 10768   0044C6  51AE               	movf	_ADC_InterruptCallBack& (0+255),w,b
 10769   0044C8  6EFD               	movwf	tosl,c
 10770   0044CA  51AF               	movf	(_ADC_InterruptCallBack+1)& (0+255),w,b
 10771   0044CC  6EFE               	movwf	tosh,c
 10772   0044CE  6AFF               	clrf	tosu,c
 10773   0044D0  50FA               	movf	pclath,w,c
 10774   0044D2  0012               	return		;indir
 10775   0044D4                     i2u646_49:
 10776   0044D4                     i2l492:
 10777   0044D4  0012               	return		;funcret
 10778   0044D6                     __end_of_ADC_ISR:
 10779                           	callstack 0
 10780                           
 10781 ;; *************** function _ADC_callback *****************
 10782 ;; Defined at:
 10783 ;;		line 120 in file "application.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;		None
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;		None
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;Total ram usage:        0 bytes
 10802 ;; Hardware stack levels used: 1
 10803 ;; Hardware stack levels required when called: 1
 10804 ;; This function calls:
 10805 ;;		_ADC_Read_Result
 10806 ;; This function is called by:
 10807 ;;		_ADC_ISR
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text60
 10812   0044FA                     __ptext60:
 10813                           	callstack 0
 10814   0044FA                     _ADC_callback:
 10815                           	callstack 18
 10816   0044FA                     
 10817                           ;application.c: 122:     ret = ADC_Read_Result(&Lm35,&res1);
 10818   0044FA  0EEA               	movlw	low _Lm35
 10819   0044FC  6E01               	movwf	ADC_Read_Result@ADC_obj^0,c
 10820   0044FE  0E00               	movlw	high _Lm35
 10821   004500  6E02               	movwf	(ADC_Read_Result@ADC_obj+1)^0,c
 10822   004502  0EBA               	movlw	low _res1
 10823   004504  6E03               	movwf	ADC_Read_Result@Resualt^0,c
 10824   004506  0E00               	movlw	high _res1
 10825   004508  6E04               	movwf	(ADC_Read_Result@Resualt+1)^0,c
 10826   00450A  ECB0  F01D         	call	_ADC_Read_Result	;wreg free
 10827   00450E  0100               	movlb	0	; () banked
 10828   004510  6FFF               	movwf	_ret& (0+255),b
 10829   004512                     
 10830                           ; BSR set to: 0
 10831                           ;application.c: 123:     Flag = 0;
 10832   004512  0E00               	movlw	0
 10833   004514  6E6D               	movwf	_Flag^0,c	;volatile
 10834   004516                     
 10835                           ; BSR set to: 0
 10836   004516  0012               	return		;funcret
 10837   004518                     __end_of_ADC_callback:
 10838                           	callstack 0
 10839                           
 10840 ;; *************** function _ADC_Read_Result *****************
 10841 ;; Defined at:
 10842 ;;		line 178 in file "MCAL_layer/ADC/hal_ADC.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  ADC_obj         2    0[COMRAM] PTR const struct .
 10845 ;;		 -> Lm35(7), 
 10846 ;;  Resualt         2    2[COMRAM] PTR unsigned short 
 10847 ;;		 -> res1(2), 
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;  ret             1    7[COMRAM] unsigned char 
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1    wreg      unsigned char 
 10852 ;; Registers used:
 10853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10863 ;;Total ram usage:        8 bytes
 10864 ;; Hardware stack levels used: 1
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_ADC_callback
 10869 ;;		_ADC_GetConversion_Blocking
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           	psect	text61
 10874   003B60                     __ptext61:
 10875                           	callstack 0
 10876   003B60                     _ADC_Read_Result:
 10877                           	callstack 18
 10878   003B60                     
 10879                           ;MCAL_layer/ADC/hal_ADC.c: 178: Std_ReturnType ADC_Read_Result(const ADC_t* ADC_obj,uint
      +                          16 *Resualt);MCAL_layer/ADC/hal_ADC.c: 179: {;MCAL_layer/ADC/hal_ADC.c: 180:     Std_Ret
      +                          urnType ret = (Std_ReturnType)0x01;
 10880   003B60  0E01               	movlw	1
 10881   003B62  6E08               	movwf	ADC_Read_Result@ret^0,c
 10882   003B64                     
 10883                           ;MCAL_layer/ADC/hal_ADC.c: 181:     if((ADC_obj == ((void*)0))||(Resualt == ((void*)0)))
 10884   003B64  5001               	movf	ADC_Read_Result@ADC_obj^0,w,c
 10885   003B66  1002               	iorwf	(ADC_Read_Result@ADC_obj+1)^0,w,c
 10886   003B68  B4D8               	btfsc	status,2,c
 10887   003B6A  EFB9  F01D         	goto	i2u492_41
 10888   003B6E  EFBB  F01D         	goto	i2u492_40
 10889   003B72                     i2u492_41:
 10890   003B72  EFC4  F01D         	goto	i2l5693
 10891   003B76                     i2u492_40:
 10892   003B76  5003               	movf	ADC_Read_Result@Resualt^0,w,c
 10893   003B78  1004               	iorwf	(ADC_Read_Result@Resualt+1)^0,w,c
 10894   003B7A  A4D8               	btfss	status,2,c
 10895   003B7C  EFC2  F01D         	goto	i2u493_41
 10896   003B80  EFC4  F01D         	goto	i2u493_40
 10897   003B84                     i2u493_41:
 10898   003B84  EFC8  F01D         	goto	i2l5695
 10899   003B88                     i2u493_40:
 10900   003B88                     i2l5693:
 10901                           
 10902                           ;MCAL_layer/ADC/hal_ADC.c: 182:     {;MCAL_layer/ADC/hal_ADC.c: 183:         ret = (Std_
      +                          ReturnType)0x00;
 10903   003B88  0E00               	movlw	0
 10904   003B8A  6E08               	movwf	ADC_Read_Result@ret^0,c
 10905                           
 10906                           ;MCAL_layer/ADC/hal_ADC.c: 184:     }
 10907   003B8C  EF06  F01E         	goto	i2l5705
 10908   003B90                     i2l5695:
 10909                           
 10910                           ;MCAL_layer/ADC/hal_ADC.c: 186:     {;MCAL_layer/ADC/hal_ADC.c: 187:         if(ADC_obj-
      +                          >Result_format == 1U)
 10911   003B90  EE20 F006          	lfsr	2,6
 10912   003B94  5001               	movf	ADC_Read_Result@ADC_obj^0,w,c
 10913   003B96  26D9               	addwf	fsr2l,f,c
 10914   003B98  5002               	movf	(ADC_Read_Result@ADC_obj+1)^0,w,c
 10915   003B9A  22DA               	addwfc	fsr2h,f,c
 10916   003B9C  A2DF               	btfss	indf2,1,c
 10917   003B9E  EFD3  F01D         	goto	i2u494_41
 10918   003BA2  EFD5  F01D         	goto	i2u494_40
 10919   003BA6                     i2u494_41:
 10920   003BA6  EFDF  F01D         	goto	i2l5699
 10921   003BAA                     i2u494_40:
 10922   003BAA                     i2l5697:
 10923                           
 10924                           ;MCAL_layer/ADC/hal_ADC.c: 188:         {;MCAL_layer/ADC/hal_ADC.c: 190:             *Re
      +                          sualt = ((*((volatile uint16*)(0xFC3))));
 10925   003BAA  C003  FFD9         	movff	ADC_Read_Result@Resualt,fsr2l
 10926   003BAE  C004  FFDA         	movff	ADC_Read_Result@Resualt+1,fsr2h
 10927   003BB2  CFC3 FFDE          	movff	4035,postinc2	;volatile
 10928   003BB6  CFC4 FFDD          	movff	4036,postdec2	;volatile
 10929                           
 10930                           ;MCAL_layer/ADC/hal_ADC.c: 191:         }
 10931   003BBA  EF06  F01E         	goto	i2l5705
 10932   003BBE                     i2l5699:
 10933   003BBE  EE20 F006          	lfsr	2,6
 10934   003BC2  5001               	movf	ADC_Read_Result@ADC_obj^0,w,c
 10935   003BC4  26D9               	addwf	fsr2l,f,c
 10936   003BC6  5002               	movf	(ADC_Read_Result@ADC_obj+1)^0,w,c
 10937   003BC8  22DA               	addwfc	fsr2h,f,c
 10938   003BCA  B2DF               	btfsc	indf2,1,c
 10939   003BCC  EFEA  F01D         	goto	i2u495_41
 10940   003BD0  EFEC  F01D         	goto	i2u495_40
 10941   003BD4                     i2u495_41:
 10942   003BD4  EFD5  F01D         	goto	i2l5697
 10943   003BD8                     i2u495_40:
 10944   003BD8                     
 10945                           ;MCAL_layer/ADC/hal_ADC.c: 193:         {;MCAL_layer/ADC/hal_ADC.c: 194:             *Re
      +                          sualt = (uint16) (((ADRESH<<8) + ADRESL)>>6);
 10946   003BD8  50C3               	movf	195,w,c	;volatile
 10947   003BDA  CFC4 F005          	movff	4036,??_ADC_Read_Result	;volatile
 10948   003BDE  6A06               	clrf	(??_ADC_Read_Result+1)^0,c
 10949   003BE0  C005  F006         	movff	??_ADC_Read_Result,??_ADC_Read_Result+1
 10950   003BE4  6A05               	clrf	??_ADC_Read_Result^0,c
 10951   003BE6  2605               	addwf	??_ADC_Read_Result^0,f,c
 10952   003BE8  0E00               	movlw	0
 10953   003BEA  2206               	addwfc	(??_ADC_Read_Result+1)^0,f,c
 10954   003BEC  0E06               	movlw	6
 10955   003BEE  6E07               	movwf	(??_ADC_Read_Result+2)^0,c
 10956   003BF0                     i2u496_45:
 10957   003BF0  3406               	rlcf	(??_ADC_Read_Result+1)^0,w,c
 10958   003BF2  3206               	rrcf	(??_ADC_Read_Result+1)^0,f,c
 10959   003BF4  3205               	rrcf	??_ADC_Read_Result^0,f,c
 10960   003BF6  2E07               	decfsz	(??_ADC_Read_Result+2)^0,f,c
 10961   003BF8  EFF8  F01D         	goto	i2u496_45
 10962   003BFC  C003  FFD9         	movff	ADC_Read_Result@Resualt,fsr2l
 10963   003C00  C004  FFDA         	movff	ADC_Read_Result@Resualt+1,fsr2h
 10964   003C04  C005  FFDE         	movff	??_ADC_Read_Result,postinc2
 10965   003C08  C006  FFDD         	movff	??_ADC_Read_Result+1,postdec2
 10966   003C0C                     i2l5705:
 10967                           
 10968                           ;MCAL_layer/ADC/hal_ADC.c: 202:     return ret;
 10969   003C0C  5008               	movf	ADC_Read_Result@ret^0,w,c
 10970   003C0E  0012               	return		;funcret
 10971   003C10                     __end_of_ADC_Read_Result:
 10972                           	callstack 0
 10973                           
 10974                           	psect	text62
 10975   000000                     __ptext62:
 10976                           	callstack 0
 10977   000000                     
 10978                           	psect	rparam
 10979   000000                     
 10980                           	psect	temp
 10981   000073                     btemp:
 10982                           	callstack 0
 10983   000073                     	ds	1
 10984   000000                     int$flags	set	btemp
 10985   000000                     wtemp8	set	btemp+1
 10986   000000                     ttemp5	set	btemp+1
 10987   000000                     ttemp6	set	btemp+4
 10988   000000                     ttemp7	set	btemp+8
 10989                           
 10990                           	psect	config
 10991                           
 10992                           ; Padding undefined space
 10993   300000                     	org	3145728
 10994   300000  FF                 	db	255
 10995                           
 10996                           ;Config register CONFIG1H @ 0x300001
 10997                           ;	Oscillator Selection bits
 10998                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
 10999                           ;	Fail-Safe Clock Monitor Enable bit
 11000                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11001                           ;	Internal/External Oscillator Switchover bit
 11002                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11003   300001                     	org	3145729
 11004   300001  07                 	db	7
 11005                           
 11006                           ;Config register CONFIG2L @ 0x300002
 11007                           ;	Power-up Timer Enable bit
 11008                           ;	PWRT = OFF, PWRT disabled
 11009                           ;	Brown-out Reset Enable bits
 11010                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11011                           ;	Brown Out Reset Voltage bits
 11012                           ;	BORV = 3, Minimum setting
 11013   300002                     	org	3145730
 11014   300002  1F                 	db	31
 11015                           
 11016                           ;Config register CONFIG2H @ 0x300003
 11017                           ;	Watchdog Timer Enable bit
 11018                           ;	WDT = ON, WDT enabled
 11019                           ;	Watchdog Timer Postscale Select bits
 11020                           ;	WDTPS = 32768, 1:32768
 11021   300003                     	org	3145731
 11022   300003  1F                 	db	31
 11023                           
 11024                           ; Padding undefined space
 11025   300004                     	org	3145732
 11026   300004  FF                 	db	255
 11027                           
 11028                           ;Config register CONFIG3H @ 0x300005
 11029                           ;	CCP2 MUX bit
 11030                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11031                           ;	PORTB A/D Enable bit
 11032                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11033                           ;	Low-Power Timer1 Oscillator Enable bit
 11034                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11035                           ;	MCLR Pin Enable bit
 11036                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11037   300005                     	org	3145733
 11038   300005  81                 	db	129
 11039                           
 11040                           ;Config register CONFIG4L @ 0x300006
 11041                           ;	Stack Full/Underflow Reset Enable bit
 11042                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11043                           ;	Single-Supply ICSP Enable bit
 11044                           ;	LVP = ON, Single-Supply ICSP enabled
 11045                           ;	Extended Instruction Set Enable bit
 11046                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11047                           ;	Background Debugger Enable bit
 11048                           ;	DEBUG = 0x1, unprogrammed default
 11049   300006                     	org	3145734
 11050   300006  85                 	db	133
 11051                           
 11052                           ; Padding undefined space
 11053   300007                     	org	3145735
 11054   300007  FF                 	db	255
 11055                           
 11056                           ;Config register CONFIG5L @ 0x300008
 11057                           ;	Code Protection bit
 11058                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11059                           ;	Code Protection bit
 11060                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11061                           ;	Code Protection bit
 11062                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11063                           ;	Code Protection bit
 11064                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11065   300008                     	org	3145736
 11066   300008  0F                 	db	15
 11067                           
 11068                           ;Config register CONFIG5H @ 0x300009
 11069                           ;	Boot Block Code Protection bit
 11070                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11071                           ;	Data EEPROM Code Protection bit
 11072                           ;	CPD = OFF, Data EEPROM not code-protected
 11073   300009                     	org	3145737
 11074   300009  C0                 	db	192
 11075                           
 11076                           ;Config register CONFIG6L @ 0x30000A
 11077                           ;	Write Protection bit
 11078                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11079                           ;	Write Protection bit
 11080                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11081                           ;	Write Protection bit
 11082                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11083                           ;	Write Protection bit
 11084                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11085   30000A                     	org	3145738
 11086   30000A  0F                 	db	15
 11087                           
 11088                           ;Config register CONFIG6H @ 0x30000B
 11089                           ;	Configuration Register Write Protection bit
 11090                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11091                           ;	Boot Block Write Protection bit
 11092                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11093                           ;	Data EEPROM Write Protection bit
 11094                           ;	WRTD = OFF, Data EEPROM not write-protected
 11095   30000B                     	org	3145739
 11096   30000B  E0                 	db	224
 11097                           
 11098                           ;Config register CONFIG7L @ 0x30000C
 11099                           ;	Table Read Protection bit
 11100                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11101                           ;	Table Read Protection bit
 11102                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11103                           ;	Table Read Protection bit
 11104                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11105                           ;	Table Read Protection bit
 11106                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11107   30000C                     	org	3145740
 11108   30000C  0F                 	db	15
 11109                           
 11110                           ;Config register CONFIG7H @ 0x30000D
 11111                           ;	Boot Block Table Read Protection bit
 11112                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11113   30000D                     	org	3145741
 11114   30000D  40                 	db	64
 11115                           tosu	equ	0xFFF
 11116                           tosh	equ	0xFFE
 11117                           tosl	equ	0xFFD
 11118                           stkptr	equ	0xFFC
 11119                           pclatu	equ	0xFFB
 11120                           pclath	equ	0xFFA
 11121                           pcl	equ	0xFF9
 11122                           tblptru	equ	0xFF8
 11123                           tblptrh	equ	0xFF7
 11124                           tblptrl	equ	0xFF6
 11125                           tablat	equ	0xFF5
 11126                           prodh	equ	0xFF4
 11127                           prodl	equ	0xFF3
 11128                           indf0	equ	0xFEF
 11129                           postinc0	equ	0xFEE
 11130                           postdec0	equ	0xFED
 11131                           preinc0	equ	0xFEC
 11132                           plusw0	equ	0xFEB
 11133                           fsr0h	equ	0xFEA
 11134                           fsr0l	equ	0xFE9
 11135                           wreg	equ	0xFE8
 11136                           indf1	equ	0xFE7
 11137                           postinc1	equ	0xFE6
 11138                           postdec1	equ	0xFE5
 11139                           preinc1	equ	0xFE4
 11140                           plusw1	equ	0xFE3
 11141                           fsr1h	equ	0xFE2
 11142                           fsr1l	equ	0xFE1
 11143                           bsr	equ	0xFE0
 11144                           indf2	equ	0xFDF
 11145                           postinc2	equ	0xFDE
 11146                           postdec2	equ	0xFDD
 11147                           preinc2	equ	0xFDC
 11148                           plusw2	equ	0xFDB
 11149                           fsr2h	equ	0xFDA
 11150                           fsr2l	equ	0xFD9
 11151                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    12
    Data        72
    BSS         132
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    102     114
    BANK0           128     12     128
    BANK1           256      9      86
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S3715$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_int_to_string@Temp_String(COMRAM[11]), convert_short_to_string@Temp_String(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S3662$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3662$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    memset@s	PTR unsigned char  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    timer2.Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Lm35.ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2884$Timer3CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer3_init@TM3_obj.Timer3CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer2_Write_Value@TM2_obj.Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2748$Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@TM2_obj.Timer2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@TM2_obj	PTR const struct . size(2) Largest target is 5
		 -> timer2(BANK0[5]), 

    Timer1InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2578$Timer1CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer1_init@TM1_obj.Timer1CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_REGISTER_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Read_Value@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Write_Value@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    S2393$Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_init@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_Call_Back@RB_obj.RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Call_Back@RB_obj.RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Call_Back@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_flag@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1812$INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1920$RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@RB_obj.RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1920$RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@RB_obj.RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    RBx_Call_Back	PTR FTN()void [8] size(2) Largest target is 1
		 -> NULL(), 

    INTx_Call_Back	PTR FTN()void [3] size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_initialize@pin	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), lcd_1.lcd_data(BANK0[8]), 
		 -> lcd_1(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), lcd_1.lcd_data(BANK0[8]), 
		 -> lcd_1(BANK0[10]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@relay_pin(COMRAM[1]), relay_turn_on@relay_pin(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), motor_1.dc_motor_pin(BANK0[2]), motor_1(BANK0[2]), lcd_1.lcd_data(BANK0[8]), 
		 -> lcd_1(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Timer_config@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Timer_config@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Timer_config@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP_PWM_Stop@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP_PWM_Start@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Start@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Start@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP_PWM_set_DutyCycle@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_set_DutyCycle@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_set_DutyCycle@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    CCP1_Compare_write_value@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_Compare_write_value@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_IsCompareReady@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_IsCompareReady@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Deinit@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Deinit@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1128$CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1128$CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Init@ccp_obj	PTR const struct . size(2) Largest target is 16
		 -> ccp_obj(BANK0[16]), 

    ADC_StartConversion_INT@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_Read_Result@ADC_obj.ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ADC_Read_Result@Resualt	PTR unsigned short  size(2) Largest target is 2
		 -> res1(BANK0[2]), 

    ADC_Read_Result@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_Start_Conversion@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_Select_Channel@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    ADC_InterruptCallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), NULL(), 

    S749$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ADC_init@ADC_obj.ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_callback(), 

    ADC_init@ADC_obj	PTR const struct . size(2) Largest target is 7
		 -> Lm35(BANK0[7]), 

    dc_motor_move_right@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_1(BANK0[2]), 

    dc_motor_initialize@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_1(BANK0[2]), 

    lcd_8bit_set_cursor@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_enable@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    convert_short_to_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    sp__memset	PTR void  size(2) Largest target is 11
		 -> Temp_value(BANK1[11]), 

    lcd_8bit_send_string_pos@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), Temp_value(BANK1[11]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), 

    lcd_8bit_send_string_pos@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_string@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), Temp_value(BANK1[11]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), 

    lcd_8bit_send_string@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_char@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_command@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_initialize@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_lcd_8bit_send_enable
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_initialize
    _CCP_Init->___fltol
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_init->_ADC_configure_Channel
    _CCP_PWM_set_DutyCycle->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _ADC_StartConversion_INT->_ADC_Select_Channel
    _ADC_Select_Channel->_ADC_configure_Channel

Critical Paths under _Interrupt_manager in COMRAM

    _ADC_callback->_ADC_Read_Result

Critical Paths under _main in BANK0

    _main->_CCP_PWM_set_DutyCycle
    _application_initialize->_CCP_Init

Critical Paths under _Interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    _application_initialize->_CCP_Init

Critical Paths under _Interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  115760
            _ADC_StartConversion_INT
                      _CCP_PWM_Start
                       _CCP_PWM_Stop
              _CCP_PWM_set_DutyCycle
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _application_initialize
            _convert_short_to_string
                _dc_motor_move_right
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   30322
                                             40 COMRAM     7     1      6
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   14663
                                             33 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 5     1      4   12159
                                             33 COMRAM     5     1      4
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   8     5      3   11781
                                             25 COMRAM     8     5      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5523
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                             12     8      4   10054
                                             96 COMRAM     4     0      4
                                              0 BANK0      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             74 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             66 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             52 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   50442
                           _ADC_init
                           _CCP_Init
                        _Timer2_init
                     _ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_initialize                                       1     1      0   29945
                _dc_motor_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   22068
                                             33 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                8     5      3   13761
                                             25 COMRAM     8     5      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable                                 3     1      2    5613
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7868
                                             26 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _Timer2_init                                          4     2      2     232
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _CCP_Init                                            13    11      2   19937
                                              0 BANK0      4     2      2
                                              0 BANK1      9     9      0
                   _CCP_Timer_config
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    7642
                                             22 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5297
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     527
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _CCP_Timer_config                                     4     2      2     211
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             4     2      2     328
                                             15 COMRAM     4     2      2
              _ADC_configure_Channel
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             12 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_set_DutyCycle                               12     9      3   12389
                                              0 BANK0     12     9      3
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1056
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     642
                                             92 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3493
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2253
                                             51 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3652
                                             76 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Stop                                         4     2      2     166
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Start                                        4     2      2     470
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_INT                              5     2      3     889
                                             20 COMRAM     5     2      3
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 3     1      2     198
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   5     2      3     424
                                             15 COMRAM     5     2      3
              _ADC_configure_Channel
 ---------------------------------------------------------------------------------
 (3) _ADC_configure_Channel                                4     4      0      30
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Interrupt_manager                                   4     4      0     658
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
                         _TIMER3_ISR
 ---------------------------------------------------------------------------------
 (11) _TIMER3_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     482
                                NULL *
                       _ADC_callback *
 ---------------------------------------------------------------------------------
 (12) _ADC_callback                                        0     0      0     482
                    _ADC_Read_Result
 ---------------------------------------------------------------------------------
 (13) _ADC_Read_Result                                     8     4      4     482
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_INT
     _ADC_Select_Channel
       _ADC_configure_Channel
     _ADC_Start_Conversion
   _CCP_PWM_Start
   _CCP_PWM_Stop
   _CCP_PWM_set_DutyCycle
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   ___flmul
   ___fltol
   ___lwdiv
   ___xxtofl
   _application_initialize
     _ADC_init
       _ADC_configure_Channel
     _CCP_Init
       _CCP_Timer_config
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
     _Timer2_init
     _ecu_initialize
       _dc_motor_initialize
         _gpio_pin_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable
             _gpio_pin_write_logic
   _convert_short_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _Interrupt_manager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_callback *
       _ADC_Read_Result
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
   _TIMER2_ISR
   _TIMER3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      56       7       33.6%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     66      72       1       90.5%
BITBIGSFRhlhhlh     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhllh      6      0       0      40        0.0%
BITBIGSFRllhllh      6      0       0      41        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhhll      5      0       0      38        0.0%
BITBIGSFRhlhl        5      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRllhlll      1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148      47        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 03 17:30:26 2023

                              ___fldiv@aexp 004C                                ___fldiv@bexp 004B  
                __end_of_lcd_8bit_send_char 3DE2                                ___fldiv@sign 0044  
                                        l91 3DE0                                          l84 3E76  
                                        l77 3264                                ___awdiv@sign 0012  
                                       l200 42F8                                         l113 41C8  
                                       l106 3D4A                                         l135 3AAE  
                                       l162 4266                                         l412 3590  
                                       l421 35C2                                         l414 35BE  
                                       l174 39F4                                         l431 4436  
                                       l416 35B2                                         l409 34DC  
                                       l434 44F4                                         l419 35BA  
                                       l195 43FC                                         l436 44F8  
                                       l620 2B2E                                         l380 4530  
                                       l624 403E                                         l632 4110  
                                       l650 4120                                         l651 4128  
                                       l628 4040                                         l636 4112  
                                       l652 416E                                         l580 15BC  
                                       l469 437E                                         l725 3132  
                                       l751 34BC                                         l488 37A4  
                                       l648 4118                                         l765 40AC  
                                       _PR2 0FCB                                         _abs 4380  
                                       _kp1 0146                           _Interrupt_manager 0008  
                                       _pad 3E78                             __end_of_ADC_ISR 44D6  
                                       _ret 00FF                                ___awmod@sign 0012  
                       led_initialize@F3201 006E                                         prod 0FF3  
                 ?_lcd_8bit_send_string_pos 0029                                         tosl 0FFD  
                                       wreg 0FE8                       relay_initialize@F3197 0072  
              __end_of_lcd_8bit_send_enable 4268                     _ADC_StartConversion_INT 433E  
               __end_of_lcd_8bit_set_cursor 39F6                        __end_of_CCP_PWM_Stop 4114  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                        ?_Interrupt_manager 0001                                ___flmul@sign 0027  
                              ___flmul@temp 0032                                ___flmul@prod 002E  
                           __end_of_RB4_ISR 459A                             __end_of_RB5_ISR 4580  
                           __end_of_RB6_ISR 4566                             __end_of_RB7_ISR 454C  
                              ___fltol@exp1 0066                                        l1211 3CAE  
              __end_of_lcd_8bit_send_string 3D4C                                        ?_abs 0013  
                                      l2020 2C7A                                        l2013 2C1E  
                                      l2101 43B6                                        l2006 2B86  
                                      l2104 43BE                                        l2009 2CE2  
                                      l1209 3C2E                                        l2026 2FEE  
                                      l2116 386E                                        l2124 433C  
                                      l2061 3E9A                                        l2070 2D2C  
                                      l2127 45F2                                        l2039 42B2  
                                      l2072 2D34                                        l1345 44A4  
                                      l2065 3EF0                                        l2073 2D7A  
                                      l2091 3390                                        l2084 2E78  
                                      l2097 4218                                        l1582 3932  
                                      l1648 36C8                                        l1905 1996  
                                      l1906 1984                                        l1842 3F5C  
                                      l1595 3B5E                                        l1933 2240  
                                      l1935 20A0                                        l1880 179A  
                                      l1944 20E6                                        l1881 1760  
                                      l1849 3F64                                        l1946 215E  
                                      l1938 2064                                        l1947 214C  
                                      l1972 1D38                                        l1965 1B42  
                                      l1982 1E68                                        l1974 1DB0  
                                      ?_pad 001D                                        l1879 17AC  
                                      l1975 1D9E                                        l1896 18C6  
                                      l1888 1A7C                                        l1969 1EA6  
                                      l6431 34C2                                        l9001 1D00  
                                      l6441 354A                                        l6433 34D4  
                                      l8201 42FA                                        l5651 36CC  
                                      l9011 1D56                                        l9003 1D1E  
                                      l6451 3576                                        l6443 354C  
                                      l6435 34DE                                        l8211 3396  
                                      l8203 4306                                        l5661 36E8  
                                      l5653 36D0                                        l6461 4402  
                                      l9021 1DC0                                        l9013 1D5A  
                                      l9005 1D28                                        l9101 2B96  
                                      l6453 3598                                        l6445 354E  
                                      l6437 3536                                        l6429 34BE  
                                      l8213 33A8                                        l6621 3C10  
                                      l8301 3B32                                        l8205 4318  
                                      l5671 3706                                        l5663 36EE  
                                      l5655 36D6                                        l6463 4414  
                                      l9031 1E22                                        l9023 1DCC  
                                      l9015 1D68                                        l9007 1D36  
                                      l9111 2BD4                                        l9103 2BAC  
                                      l6447 3550                                        l6439 3548  
                                      l6455 35C0                                        l8223 3490  
                                      l8215 33CA                                        l6631 3C94  
                                      l6623 3C14                                        l8303 3B38  
                                      l8207 431C                                        l5673 370C  
                                      l5665 36F4                                        l5657 36DC  
                                      l5681 3722                                        l6465 441C  
                                      l6473 44D6                                        l6801 3FD4  
                                      l9041 1E8A                                        l9033 1E36  
                                      l9025 1DDA                                        l9017 1D96  
                                      l9009 1D48                                        l9121 2C5C  
                                      l9113 2C06                                        l6449 3560  
                                      l8217 33D2                                        l8225 34BA  
                                      l8209 3392                                        l6633 3C96  
                                      l6641 3CAC                                        l6625 3C26  
                                      l8241 388E                                        l8233 3870  
                                      l8305 3B3E                                        l8321 3EBA  
                                      l8313 3E78                                        l8401 2DD0  
                                      l9201 3938                                        l5675 3712  
                                      l5667 36FA                                        l5659 36E2  
                                      l6467 442E                                        l6459 43FE  
                                      l6475 44DA                                        l6811 401A  
                                      l6803 3FD8                                        l9043 1E8C  
                                      l9035 1E50                                        l9027 1E04  
                                      l9051 35C4                                        l9131 2CB2  
                                      l9123 2C6A                                        l9115 2C08  
                                      l9107 2BC0                                        l8219 3434  
                                      l6635 3C98                                        l6627 3C30  
                                      l8331 421A                                        l8251 38C2  
                                      l8243 389C                                        l8235 3874  
                                      l8307 3B4E                                        l8323 3EBE  
                                      l8315 3E86                                        l8411 2E42  
                                      l8403 2DEC                                        l9211 3988  
                                      l9203 394A                                        l5677 3718  
                                      l5669 3700                                        l6469 4434  
                                      l6477 44EC                                        l6813 4036  
                                      l6805 3FEA                                        l6821 40C4  
                                      l9037 1E6C                                        l9045 1E92  
                                      l9029 1E08                                        l9061 361A  
                                      l9053 35DA                                        l9133 2CC2  
                                      l9125 2C88                                        l9117 2C14  
                                      l9109 2BC8                                        l8421 4042  
                                      l9301 1080                                        l6637 3C9A  
                                      l6629 3C92                                        l8341 4264  
                                      l8333 421A                                        l8261 38FC  
                                      l8253 38CA                                        l8245 38A4  
                                      l8237 3882                                        l8309 3B56  
                                      l8325 3EDC                                        l8317 3E92  
                                      l8413 2E48                                        l8405 2E06  
                                      l9141 41CA                                        l9213 39A0  
                                      l9205 3952                                        l5679 371E  
                                      l6479 44F6                                        l6807 3FF2  
                                      l6823 40CC                                        l9047 1E96  
                                      l9039 1E7C                                        l9063 362A  
                                      l9135 2CD0                                        l9127 2C8A  
                                      l9119 2C50                                        l8351 3028  
                                      l8423 4054                                        l9311 10D2  
                                      l9303 1098                                        l6639 3CAA  
                                      l8335 422C                                        l8511 31BA  
                                      l8503 317A                                        l8271 3922  
                                      l8263 3904                                        l8255 38D2  
                                      l8247 38A8                                        l8239 388A  
                                      l8327 4380                                        l8191 37CA  
                                      l8319 3EA6                                        l8415 2E58  
                                      l8407 2E18                                        l9143 41D6  
                                      l9231 3CD8                                        l9207 3958  
                                      l9215 39B8                                        l6761 4354  
                                      l6809 400E                                        l6825 40E8  
                                      l6817 40AE                                        l8601 162A  
                                      l9073 3654                                        l9065 362E  
                                      l9057 35EE                                        l9137 2CD2  
                                      l9129 2C8E                                        l8353 3030  
                                      l8361 3130                                        l8345 2FF0  
                                      l8425 4076                                        l9401 1560  
                                      l9313 10DE                                        l9321 1140  
                                      l9305 10A4                                        l8337 4234  
                                      l8441 3E10                                        l8433 3DE2  
                                      l8521 3210                                        l8513 31CA  
                                      l8505 318A                                        l8273 392A  
                                      l8265 3906                                        l8257 38E0  
                                      l8249 38B0                                        l8281 3AC2  
                                      l8329 439A                                        l8193 37D4  
                                      l8409 2E32                                        l9145 41F2  
                                      l9233 3CE0                                        l9225 3CB0  
                                      l9209 3970                                        l9217 39F2  
                                      l6763 435C                                        l6827 40F0  
                                      l6819 40B2                                        l8611 1654  
                                      l8603 163C                                        l9091 36B8  
                                      l9083 367C                                        l9075 365E  
                                      l9067 363C                                        l9059 3618  
                                      l6931 3F0C                                        l8355 3092  
                                      l8347 2FF4                                        l8427 407E  
                                      l8419 4042                                        l9403 1568  
                                      l9331 1184                                        l9315 10EA  
                                      l9411 15B8                                        l8339 4248  
                                      l8451 3E4A                                        l8435 3DE2  
                                      l8523 3220                                        l8515 31EA  
                                      l8507 318E                                        l8531 3262  
                                      l9243 2E7A                                        l8267 390C  
                                      l8259 38E6                                        l8291 3AF6  
                                      l8283 3ACA                                        l8195 37F2  
                                      l8187 37A6                                        l8371 2CF8  
                                      l9147 4210                                        l9235 3D12  
                                      l9227 3CB4                                        l6765 437C  
                                      l6757 433E                                        l6829 410C  
                                      l8701 182A                                        l8613 1664  
                                      l8621 168E                                        l8605 163E  
                                      l9085 3688                                        l9077 3668  
                                      l6941 3F46                                        l6933 3F14  
                                      l8349 3006                                        l8429 40AA  
                                      l9405 1580                                        l9341 11FA  
                                      l9325 1160                                        l9317 10F6  
                                      l9309 10C6                                        l8453 3E66  
                                      l8437 3DF4                                        l8525 3230  
                                      l8517 31F0                                        l8509 31AA  
                                      l9261 2F78                                        l9253 2EDA  
                                      l8269 3912                                        l8293 3AFE  
                                      l8285 3ACE                                        l8277 3AB0  
                                      l8197 3828                                        l8189 37B8  
                                      l8381 2D4C                                        l8373 2D08  
                                      l8461 328C                                        l8541 3D66  
                                      l9237 3D16                                        l9229 3CC6  
                                      l9501 419C                                        l6759 4342  
                                      l8711 1896                                        l8703 1834  
                                      l8631 16C6                                        l8623 169E  
                                      l8615 1674                                        l8607 1644  
                                      l9087 3698                                        l9095 2B32  
                                      l6943 3F4E                                        l6935 3F1C  
                                      l6927 3EF2                                        l8359 30EE  
                                      l9407 159C                                        l9351 1240  
                                      l9327 116C                                        l9335 1190  
                                      l9319 10FA                                        l8447 3E18  
                                      l8455 3E74                                        l8439 3DFC  
                                      l8527 3240                                        l8519 3200  
                                      l9271 2FD8                                        l9255 2F32  
                                      l9247 2E98                                        l8295 3B06  
                                      l8287 3ADC                                        l8279 3AB4  
                                      l8391 2D82                                        l8383 2D52  
                                      l8375 2D10                                        l8471 32DA  
                                      l8463 329A                                        l9511 39FC  
                                      l8551 3DB0                                        l8543 3D7A  
                                      l8535 3D4C                                        l9239 3D48  
                                      l9503 41B0                                        l8713 18A6  
                                      l8705 183A                                        l8641 16DA  
                                      l8633 16CA                                        l8625 16B0  
                                      l8617 1684                                        l8609 1652  
                                      l8801 1F0E                                        l9089 36A8  
                                      l9097 2B42                                        l6945 3F50  
                                      l6937 3F2A                                        l6929 3EFA  
                                      l9409 15A4                                        l9353 124C  
                                      l9345 121C                                        l9329 1178  
                                      l9337 11D6                                        l8561 43C0  
                                      l8449 3E46                                        l8529 3250  
                                      l9273 2FDC                                        l9265 2F92  
                                      l9249 2EA4                                        l8297 3B14  
                                      l8289 3AE4                                        l8393 2D8C  
                                      l8385 2D62                                        l8377 2D20  
                                      l8369 2CE4                                        l8473 32F8  
                                      l8465 32A8                                        l9281 4288  
                                      l9521 3A42                                        l9513 3A08  
                                      l8553 3DB4                                        l8537 3D4C  
                                      l9505 41C6                                        l8731 1928  
                                      l8723 1900                                        l8707 1860  
                                      l8715 18B6                                        l8651 16EE  
                                      l8643 16DE                                        l8635 16CE  
                                      l8627 16BE                                        l8619 1686  
                                      l8811 1F3A                                        l8803 1F14  
                                      l9099 2B50                                        l6947 3F56  
                                      l6939 3F30                                        l9371 12F6  
                                      l9363 12C6                                        l9347 1228  
                                      l9339 11EE                                        l8563 43C0  
                                      l8491 3134                                        l9291 4524  
                                      l9267 2FC6                                        l9259 2F4C  
                                      l8299 3B2A                                        l8395 2D92  
                                      l8387 2D6E                                        l8379 2D3C  
                                      l8475 333C                                        l8467 32AC  
                                      l8483 3366                                        l8459 3266  
                                      l9283 42A4                                        l9275 4268  
                                      l9523 3A50                                        l9531 3AAC  
                                      l9515 3A0C                                        l8555 3DD0  
                                      l8539 3D5E                                        l8733 1930  
                                      l8725 190A                                        l8717 18DC  
                                      l8709 1894                                        l8741 1954  
                                      l8661 1702                                        l8653 16F2  
                                      l8645 16E2                                        l8637 16D2  
                                      l8629 16C2                                        l8581 15BE  
                                      l8901 21E6                                        l8821 1F74  
                                      l8813 1F4A                                        l8805 1F1A  
                                      l8573 4114                                        l9381 1388  
                                      l9365 12D2                                        l9349 1234  
                                      l9357 1258                                        l9293 105E  
                                      l8565 43D2                                        l8493 3146  
                                      l9269 2FD2                                        l8397 2DC4  
                                      l8389 2D76                                        l8469 32BC  
                                      l9277 4278                                        l9525 3A70  
                                      l9517 3A1E                                        l9509 39F6  
                                      l9541 42CE                                        l8549 3D82  
                                      l8557 3DDE                                        l8751 19A6  
                                      l8743 1958                                        l8735 1934  
                                      l8727 1918                                        l8719 18EC  
                                      l8671 177A                                        l8663 172C  
                                      l8655 16F6                                        l8647 16E6  
                                      l8639 16D6                                        l8591 15FA  
                                      l8583 15CA                                        l8911 2234  
                                      l8903 2200                                        l8823 1F8A  
                                      l8815 1F5A                                        l8807 1F28  
                                      l9551 28D0                                        l8575 4130  
                                      l9391 142A                                        l9383 13A4  
                                      l9367 12DE                                        l9375 1302  
                                      l9359 12A6                                        l9295 105E  
                                      l8567 43DA                                        l8495 314E  
                                      l9287 4518                                        l8399 2DCA  
                                      l8479 3354                                        l9279 4280  
                                      l9527 3A8C                                        l9519 3A26  
                                      l9543 42F6                                        l9535 42B4  
                                      l9199 3934                                        l8761 1A0C  
                                      l8753 19B2                                        l8745 1966  
                                      l8737 1944                                        l8729 191A  
                                      l8681 17BA                                        l8673 177E  
                                      l8665 1748                                        l8657 16FA  
                                      l8649 16EA                                        l8593 160A  
                                      l8585 15D8                                        l8913 2236  
                                      l8905 221C                                        l8841 1FDE  
                                      l8825 1F9A                                        l8833 1FBA  
                                      l8817 1F5C                                        l8809 1F2A  
                                      l8921 1A7E                                        l9561 2A04  
                                      l9553 28D8                                        l9393 1482  
                                      l9385 13B0                                        l9369 12EA  
                                      l9377 1350                                        l9297 1072  
                                      l8569 43FA                                        l8497 3172  
                                      l8489 3134                                        l9289 4518  
                                      l9529 3A8E                                        l9537 42B4  
                                      l8771 1A54                                        l8763 1A1C  
                                      l8755 19C0                                        l8747 197C  
                                      l8739 1946                                        l8691 17FC  
                                      l8683 17CA                                        l8675 178C  
                                      l8667 1758                                        l8659 16FE  
                                      l8595 160C                                        l8587 15DA  
                                      l8907 2220                                        l8851 2030  
                                      l8843 1FF8                                        l8835 1FCA  
                                      l8827 1FA2                                        l8819 1F64  
                                      l8931 1ABA                                        l8923 1A8A  
                                      l9563 2A20                                        l9555 28F4  
                                      l9547 28B8                                        l9387 13CC  
                                      l9379 136A                                        l9299 107C  
                                      l9539 42C6                                        l8773 1A56  
                                      l8765 1A3C                                        l8757 19FA  
                                      l8693 180A                                        l8677 178E  
                                      l8669 176E                                        l8589 15EA  
                                      l8597 1614                                        l8909 222E  
                                      l8861 208C                                        l8853 2040  
                                      l8845 2008                                        l8837 1FCA  
                                      l8829 1FA6                                        l8941 1AEC  
                                      l8933 1ACA                                        l8925 1A98  
                                      l9565 2AFE                                        l9557 29D2  
                                      l9549 28BE                                        l9389 13D4  
                                      l9397 152C                                        l9573 4470  
                                      l9493 4170                                        l8775 1A5C  
                                      l8767 1A40                                        l8759 19FC  
                                      l8695 1816                                        l8687 17DE  
                                      l8679 1798                                        l8599 1624  
                                      l8871 20CC                                        l8863 208E  
                                      l8855 2054                                        l8847 2018  
                                      l8791 1ED4                                        l8783 1EA8  
                                      l8951 1B2C                                        l8943 1AFA  
                                      l8935 1AD0                                        l8927 1A9A  
                                      l9567 2B14                                        l9559 29E8  
                                      l9399 1542                                        l9575 4480  
                                      l9495 4170                                        l8777 1A6A  
                                      l8769 1A4E                                        l8697 181A  
                                      l8689 17EE                                        l8881 2108  
                                      l8873 20D6                                        l8865 209E  
                                      l8857 2062                                        l8849 2028  
                                      l8793 1EE4                                        l8785 1EB4  
                                      l8961 1B76                                        l8953 1B32  
                                      l8945 1AFC                                        l8937 1AE0  
                                      l8929 1AAA                                        l9569 2B2C  
                                      l9577 4490                                        l9497 4182  
                                      l8779 1A6C                                        l8699 1828  
                                      l8891 217A                                        l8883 2116  
                                      l8875 20E4                                        l8867 20B0  
                                      l8859 206E                                        l8795 1EF4  
                                      l8787 1EC2                                        l8971 1BC6  
                                      l8963 1B82                                        l8955 1B52  
                                      l8947 1B0C                                        l8939 1AE6  
                                      l9499 4194                                        l8893 2188  
                                      l8885 2144                                        l8869 20C6  
                                      l8877 20F6                                        l8797 1EF6  
                                      l8789 1EC4                                        l8981 1C08  
                                      l8973 1BD2                                        l8965 1B8C  
                                      l8957 1B62                                        l8949 1B1C  
                                      l8895 21B2                                        l8879 2104  
                                      l8799 1EFE                                        l8991 1C6A  
                                      l8983 1C14                                        l8975 1BDE  
                                      l8967 1BA2                                        STR_1 105A  
                                      STR_2 105A                                        l8889 216E  
                                      l8897 21B6                                        l8993 1C76  
                                      l8985 1C24                                        l8977 1BEC  
                                      l8969 1BAE                                        STR_4 100D  
                                      l8899 21D0                                        l8995 1C92  
                                      l8987 1C3E                                        l8979 1BF8  
                                      STR_5 101C                                        STR_6 104A  
                                      l8997 1CBC                                        l8989 1C4E  
                                      STR_7 1042                                        STR_8 103A  
                                      l8999 1CF2                                        STR_9 1032  
                                      _LATA 0F89                                        _LATB 0F8A  
                                      _LATC 0F8B                                        _LATD 0F8C  
                                      _LATE 0F8D                                        u6120 34D4  
                                      u6121 34D0                                        u6140 3590  
                                      u6141 358C                                        u6150 35B2  
                                      u6310 3C26                                        u6151 35AE  
                                      u6135 3574                                        u6311 3C22  
                                      u6160 4414                                        u6161 4410  
                                      u6137 3576                                        u6170 44EC  
                                      u6171 44E8                                        u6500 3FEA  
                                      u6501 3FE6                                        u6510 400E  
                                      u6511 400A                                        u6440 4354  
                                      u6520 4036                                        u9000 178C  
                                      u6600 3F0C                                        u6441 4350  
                                      u6521 4032                                        u9001 1788  
                                      u6601 3F08                                        u6530 40C4  
                                      u9010 17AC                                        u6610 3F2A  
                                      u6531 40C0                                        u9011 17A8  
                                      u6611 3F26                                        u6540 40E8  
                                      u9100 18EC                                        u9020 17BA  
                                      u6620 3F46                                        u6541 40E4  
                                      u9101 18E8                                        u9021 17B6  
                                      u6621 3F42                                        u6550 410C  
                                      u9110 1918                                        u9030 17CA  
                                      u6551 4108                                        u9111 1914  
                                      u9031 17C6                                        u9200 19FA  
                                      u9120 1928                                        u9040 17FC  
                                      u8320 37B8                                        u9201 19F6  
                                      u9121 1924                                        u9041 17F8  
                                      u8321 37B4                                        u9210 1A0C  
                                      u9130 1944                                        u9050 180A  
                                      u8410 3882                                        u8330 37CA  
                                      u9211 1A08                                        u9131 1940  
                                      u9051 1806                                        u8411 387E  
                                      u8331 37C6                                        u9220 1A1C  
                                      u9140 1954                                        u9060 1828  
                                      u9300 1F3A                                        u8404 3454  
                                      u8420 389C                                        u8500 3B14  
                                      u8340 37F2                                        u9221 1A18  
                                      u9141 1950                                        u9061 1824  
                                      u9301 1F36                                        u8405 3450  
                                      u8421 3898                                        u8501 3B10  
                                      u8341 37EE                                        u9230 1A3C  
                                      u9150 1966                                        u9070 1860  
                                      u9310 1F4A                                        u8430 38C2  
                                      u8510 3B2A                                        u8350 3828  
                                      u9231 1A38                                        u9151 1962  
                                      u9071 185C                                        u9311 1F46  
                                      u8431 38BE                                        u8511 3B26  
                                      u8351 3824                                        u9240 1A4E  
                                      u9160 197C                                        u9080 18A6  
                                      u9400 2104                                        u9320 1F8A  
                                      u8440 38E0                                        u8520 3B4E  
                                      u8360 433C                                        u9241 1A4A  
                                      u9161 1978                                        u9081 18A2  
                                      u9401 2100                                        u9321 1F86  
                                      u8441 38DC                                        u8521 3B4A  
                                      u8361 4338                                        u9250 1A6A  
                                      u9170 1992                                        u9090 18DC  
                                      u9410 2116                                        u9330 1FCA  
                                      u8610 3106                                        u8370 33A8  
                                      u8450 38FC                                        u8530 3E86  
                                      u9251 1A66                                        u9171 198E  
                                      u9091 18D8                                        u9411 2112  
                                      u9331 1FC6                                        u8611 3100  
                                      u8371 33A4                                        u8451 38F8  
                                      u8531 3E82                                        u9180 19A6  
                                      u9420 2144                                        u9340 2040  
                                      u9260 1EC2                                        u9500 1AAA  
                                      u8620 3108                                        u8604 30B2  
                                      u8380 33CA                                        u8460 3922  
                                      u8540 3EDC                                        u8700 2E18  
                                      u9181 19A2                                        u9421 2140  
                                      u9341 203C                                        u9261 1EBE  
                                      u9501 1AA6                                        u8605 30AE  
                                      u8381 33C6                                        u8461 391E  
                                      u8541 3ED8                                        u8701 2E14  
                                      u9190 19C0                                        u9430 215A  
                                      u9350 2062                                        u9270 1ED4  
                                      u9510 1ABA                                        u8470 3AC2  
                                      u8550 439A                                        u8710 2E32  
                                      u8630 2CF4                                        u9191 19BC  
                                      u9431 2156                                        u9351 205E  
                                      u9271 1ED0                                        u9511 1AB6  
                                      u8471 3ABE                                        u8551 4396  
                                      u8711 2E2E                                        u8631 2CEE  
                                      u9440 216E                                        u9360 208C  
                                      u9280 1EE4                                        u9600 1D68  
                                      u9520 1AFA                                        u8560 422C  
                                      u8480 3ADC                                        u8720 2E42  
                                      u8640 2CF6                                        u8800 32F8  
                                      u9441 216A                                        u9361 2088  
                                      u9281 1EE0                                        u9601 1D64  
                                      u9521 1AF6                                        u8561 4228  
                                      u8481 3AD8                                        u8721 2E3E  
                                      u8801 32F4                                        u9450 2188  
                                      u9370 20B0                                        u9290 1F28  
                                      u9610 1D96                                        u9530 1B0C  
                                      u8570 3006                                        u8394 33F2  
                                      u8730 4054                                        u8810 3146  
                                      u8490 3AF6                                        u8650 2D08  
                                      u9451 2184                                        u9371 20AC  
                                      u9291 1F24                                        u9611 1D92  
                                      u9531 1B08                                        u8571 3002  
                                      u8395 33EE                                        u8731 4050  
                                      u8811 3142                                        u8491 3AF2  
                                      u8651 2D04                                        u8900 163C  
                                      u9460 21D0                                        u9380 20C6  
                                      u9620 1DAC                                        u9540 1B1C  
                                      u9700 363C                                        u8580 3028  
                                      u8740 4076                                        u8820 31AA  
                                      u8660 2D20                                        u8901 1638  
                                      u9461 21CC                                        u9381 20C2  
                                      u9621 1DA8                                        u9541 1B18  
                                      u9701 3638                                        u8581 3024  
                                      u8741 4072                                        u8821 31A6  
                                      u8661 2D1C                                        u8910 1652  
                                      u9470 2200                                        u9390 20E4  
                                      u9630 1DC0                                        u9550 1B52  
                                      u9710 3650                                        u8750 3DF4  
                                      u8670 2D4C                                        u8830 3D5E  
                                      u8911 164E                                        u9471 21FC  
                                      u9391 20E0                                        u9631 1DBC  
                                      u9551 1B4E                                        u9711 364C  
                                      u8751 3DF0                                        u8671 2D48  
                                      u8831 3D5A                                        u8920 1664  
                                      u9480 222E                                        u9640 1DDA  
                                      u9560 1B62                                        u9720 3678  
                                      u9800 2C6A                                        u8680 2D62  
                                      u8921 1660                                        u9481 222A  
                                      u9641 1DD6                                        u9561 1B5E  
                                      u9721 3674                                        u9801 2C66  
                                      u8681 2D5E                                        u8930 1674  
                                      u9650 1E22                                        u9570 1CDC  
                                      u9490 1A98                                        u9730 3698  
                                      u9810 2C7A                                        u8594 3050  
                                      u8770 3E66                                        u8690 2E06  
                                      u8850 3DD0                                        u8931 1670  
                                      u9651 1E1E                                        u9491 1A94  
                                      u9731 3694                                        u9811 2C76  
                                      u8595 304C                                        u8771 3E62  
                                      u8691 2E02                                        u8851 3DCC  
                                      u8940 16B0                                        u9660 1E50  
                                      u9580 1D36                                        u9740 36A8  
                                      u9820 2C88                                        u8860 43D2  
                                      u8764 3E36                                        u8780 328C  
                                      u8844 3DA0                                        u8941 16AC  
                                      u9661 1E4C                                        u9581 1D32  
                                      u9741 36A4                                        u9821 2C84  
                                      u8861 43CE                                        u8765 3E32  
                                      u8781 3288                                        u8845 3D9C  
                                      u8950 16BE                                        u8870 15D8  
                                      u9670 1E8A                                        u9590 1D56  
                                      u9830 2CC2                                        u9750 2B42  
                                      u8790 32DA                                        u9910 394A  
                                      u8951 16BA                                        u8871 15D4  
                                      u9671 1E86                                        u9591 1D52  
                                      u9575 1CD2                                        u9831 2CBE  
                                      u9751 2B3E                                        u8791 32D6  
                                      u9911 3946                                        u8960 172C  
                                      u8880 15EA                                        u9680 35DA  
                                      u9840 2CD0                                        u9760 2B50  
                                      u9920 3CC6                                        u8961 1728  
                                      u8881 15E6                                        u9681 35D6  
                                      u9841 2CCC                                        u9761 2B4C  
                                      u9921 3CC2                                        u8970 1744  
                                      u8890 15FA                                        u9690 360E  
                                      u9770 2BAC                                        u9850 4210  
                                      u9930 3CD8                                        u8971 173E  
                                      u8891 15F6                                        u9771 2BA8  
                                      u9851 420C                                        u9931 3CD4  
                                      u8980 1746                                        u9780 2C02  
                                      u9940 3D0A                                        u9781 2BFE  
                                      u8990 176E                                        u9790 2C4C  
                                      u9950 3D38                                        u8991 176A  
                                      u9695 3604                                        u9791 2C48  
                                      u9960 3D48                                        u9961 3D44  
                                      u9970 2E94                                        _TMR2 0FCC  
                                      u9971 2E90                                        u9947 3D00  
                                      u9980 2ED6                                        u9981 2ED2  
                                      u9957 3D2E                                        u9990 2F48  
                                      u9991 2F44                                        _Lm35 00EA  
                          _CCP_Timer_config 4114                                        _Flag 006D  
                       ??_Interrupt_manager 0009                                        abs@a 0013  
                                      _dbuf 0111                                        _main 25C8  
                                      _dtoa 2CE4                                        _res1 00BA  
                          __end_of_CCP1_ISR 45F2                            __end_of_CCP2_ISR 45EE  
                                      _prec 0098                                        _temp 006B  
                                      pad@i 0024                                        pad@p 0021  
                                      fsr0h 0FEA                                        fsr1h 0FE2  
                                      indf0 0FEF                                        fsr2h 0FDA  
                                      fsr0l 0FE9                                        indf1 0FE7  
                                      indf2 0FDF                                        fsr1l 0FE1  
                                      pad@w 0026                                        fsr2l 0FD9  
                                      btemp 0073                     _Timer1InterruptHandeler 00A2  
                lcd_8bit_initialize@lcd_obj 0022                                        prodh 0FF4  
                                      prodl 0FF3                                        start 000E  
                          __end_of_ADC_init 35C4                             ___fldiv@new_exp 0045  
                     __end_of_CCP_PWM_Start 4042               __end_of_lcd_8bit_send_command 3E78  
                          __end_of_CCP_Init 15BE                                ___param_bank 0000  
                __end_of_ADC_Select_Channel 4438                      dc_motor_initialize@ret 001D  
                                     ??_abs 0015                        _gpio_pin_write_logic 3392  
                      CCP_PWM_Start@ccp_obj 000D                                 ?_TIMER0_ISR 0001  
                               ?_TIMER1_ISR 0001                                       ??_pad 0023  
                               ?_TIMER2_ISR 0001                                 ?_TIMER3_ISR 0001  
           lcd_8bit_send_string_pos@lcd_obj 0029                            __end_of_INT0_ISR 45EA  
                          __end_of_INT1_ISR 45E6                            __end_of_INT2_ISR 45E2  
                                     l10103 2880                                       l10105 2890  
                                     l10051 262C                                       l10043 25C8  
                                     l10061 26CA                                       l10053 2640  
                                     l10045 25CC                                       l10071 2748  
                                     l10063 26EA                                       l10055 2644  
                                     l10047 25EC                                       l10081 27AC  
                                     l10073 275E                                       l10065 2700  
                                     l10057 2696                                       l10049 261C  
                                     l10331 11B0                                       l10091 280E  
                                     l10083 27C0                                       l10075 2772  
                                     l10067 2714                                       l10059 26B2  
                                     l10341 4150                                       l10333 1278  
                                     l10069 2734                                       l10343 3736  
                                     l10335 1322                                       l10327 39CC  
                                     l10095 2832                                       l10087 27E4  
                                     l10079 2796                                       l10337 34A4  
                                     l10329 111A                                       l10097 2848  
                                     l10089 27FA                                       l10339 311A  
                                     l10099 285C                   __end_of_Interrupt_manager 25C8  
                             ___fltol@sign1 0065                             __end_of___fladd 1A7E  
                                     ?_main 0001                                       ?_dtoa 0028  
                  ??_application_initialize 0067                             __end_of___fldiv 2242  
                           __end_of___awdiv 3934                                       _EEADR 0FA9  
                                     STR_10 102A                                       STR_11 1052  
                           __end_of___awmod 3B60                             __end_of___flmul 1EA8  
                           __end_of___fltol 36CA                                       u10000 2F8E  
                                     u10001 2F8A                                       u10010 2FEE  
                                     u10011 2FEA                                       u10100 1388  
                                     u10020 1072                                       u10101 1384  
                                     u10021 106E                                       u10110 13A4  
                                     u10030 1098                                       u10111 13A0  
                                     u10031 1094                                       u10120 13CC  
                                     u10040 10C2                                       u10121 13C8  
                                     u10041 10BE                                       u10130 1560  
                                     u10050 115C                                       u10210 4182  
                                     u10131 155C                                       u10051 1158  
                                     u10211 417E                                       u10140 159C  
                                     u10060 11EE                                       u10220 4194  
                                     u10141 1598                                       u10061 11EA  
                                     u10221 4190                                       u10070 1218  
                                     u10071 1214                                       u10231 3A02  
                                     u10080 12C2                                       u10240 3A1E  
                                     u10081 12BE                                       u10241 3A1A  
                                     u10090 136A                                       u10250 3AAC  
                                     u10091 1366                                       u10251 3AA8  
                                     u10260 42C6                                       u10261 42C2  
                                     u10270 28D0                                       u10271 28CC  
                                     u10280 28F4                                       u10281 28F0  
                                     u10290 2A20                                       u10291 2A1C  
                           ___awdiv@divisor 000F                                       u10800 275E  
                                     u10801 275A                                       u10810 27AC  
                                     u10811 27A8                                       u10820 27FA  
                                     u10821 27F6                                       u10830 2848  
                                     u10831 2844                                       u10780 262C  
                                     u10781 2628                                       u10790 2700  
                                     u10847 31B0                                       u10791 26FC  
                                     u10857 31D0                                       u10867 31EC  
                           __end_of___lwdiv 3F66                                       i2l454 3C0E  
                                     i2l640 45F0                                       i2l492 44D4  
                                     i2l644 45EC                                       i2l831 45E8  
                                     i2l835 45E4                                       i2l839 45E0  
                                     i2l857 4598                                       i2l865 457E  
                                     i2l873 4564                                       i2l881 454A  
                           ___awdiv@counter 0011                             _ADC_Read_Result 3B60  
                       relay_turn_off@F3207 0070                                vfpfcnvrt@fmt 0037  
                                     _TMR0H 0FD7                                       _TMR1H 0FCF  
                                     _TMR0L 0FD6                                       _TMR1L 0FCE  
                                     _TMR3H 0FB3                                       _TMR3L 0FB2  
                                     _PORTA 0F80                                       _PORTB 0F81  
                                     _PORTC 0F82                                       _PORTD 0F83  
                                     _PORTE 0F84                                       _TRISA 0F92  
                                     _TRISB 0F93                                       _TRISC 0F94  
                                     _TRISD 0F95                                       _TRISE 0F96  
                  ?_convert_short_to_string 0061                                       _lcd_1 00E0  
                                     _flags 00B0                        _ADC_Start_Conversion 44D6  
                        ADC_Read_Result@ret 0008                                       _fputc 37A6  
                                     _fputs 42FA                                       pad@fp 001D  
                                     _width 0096                                       _putch 45F2  
                                     dtoa@d 002A                                       dtoa@i 0033  
                                     dtoa@p 002E                                       dtoa@s 0032  
                                     dtoa@w 0030                                       pclath 0FFA  
                                     pclatu 0FFB                                       tablat 0FF5  
                                     ttemp5 0074                                       ttemp6 0077  
                                     ttemp7 007B                                       status 0FD8  
                                     wtemp8 0074                             __end_of_sprintf 42B4  
                lcd_8bit_set_cursor@lcd_obj 0022                 lcd_8bit_send_enable@lcd_obj 0017  
                    ?_ADC_configure_Channel 0001              ?_gpio_pin_direction_initialize 000D  
                           __initialization 3F66                 ADC_Start_Conversion@ADC_obj 000D  
                              __end_of_main 28B8                                __end_of_dtoa 2E7A  
                     ?_gpio_pin_write_logic 000D                 lcd_8bit_send_string@lcd_obj 0022  
                                 ??_ADC_ISR 0009                      lcd_8bit_set_cursor@ret 0028  
                    lcd_8bit_set_cursor@row 0024                               _lat_registers 00BC  
               __end_of_dc_motor_initialize 43FE                                      ??_main 0067  
                                    ??_dtoa 002C                   ??_ADC_StartConversion_INT 0018  
                             __activetblptr 0003                            led_turn_on@F3206 00B4  
                                 ??_RB4_ISR 0001                                   ??_RB5_ISR 0001  
                                 ??_RB6_ISR 0001                                   ??_RB7_ISR 0001  
                     ?_ADC_Start_Conversion 000D                  ADC_StartConversion_INT@ret 0019  
                                    ?_fputc 000D                                      ?_fputs 0016  
                                    _ADRESH 0FC4                                      _EEADRH 0FAA  
                                    _ADRESL 0FC3                                      _EEDATA 0FA8  
                                    _CCPR1H 0FBF                                      _CCPR2H 0FBC  
                                    _CCPR1L 0FBE                                      _CCPR2L 0FBB  
                                    _EECON2 0FA7                            ___awdiv@dividend 000D  
                                    ?_putch 0001                                _ADC_callback 44FA  
                                    i2l1030 2294                                      i2l1040 23C4  
                                    i2l1032 22B4                                      i2l1050 24F4  
                                    i2l1042 2408                                      i2l1034 22F8  
                                    i2l1060 2594                                      i2l1052 2514  
                                    i2l1044 244C                                      i2l1036 233C  
                                    i2l1028 2274                                      i2l1054 2534  
                                    i2l1046 2490                                      i2l1038 2380  
                                    i2l1063 25B4                                      i2l1232 45DC  
                                    i2l1056 2554                                      i2l1048 24D4  
                                    i2l1058 2574                                      i2l1149 45D4  
                                    i2l1192 45C6                                      i2l1275 45B8  
                                    i2l1348 4516                                      i2l5701 3BD8  
                                    i2l5705 3C0C                                      i2l5691 3B76  
                                    i2l5693 3B88                                      i2l6645 44FA  
                                    i2l6901 45BA                                      i2l7701 22F2  
                                    i2l5695 3B90                                      i2l5687 3B60  
                                    i2l6647 4512                                      i2l6903 45BC  
                                    i2l7711 2336                                      i2l7703 2306  
                                    i2l5697 3BAA                                      i2l5689 3B64  
                                    i2l6833 45EE                                      i2l6841 45E6  
                                    i2l6905 45C2                                      i2l6913 45AC  
                                    i2l7721 237A                                      i2l7713 234A  
                                    i2l7705 2314                                      i2l5699 3BBE  
                                    i2l6771 44A8                                      i2l6915 45AE  
                                    i2l7731 23BE                                      i2l7723 238E  
                                    i2l7715 2358                                      i2l7707 2322  
                                    i2l6773 44BC                                      i2l6837 45EA  
                                    i2l6845 45E2                                      i2l6853 4582  
                                    i2l6909 45D6                                      i2l6917 45B4  
                                    i2l7741 2402                                      i2l7733 23D2  
                                    i2l7725 239C                                      i2l7717 2366  
                                    i2l7709 2332                                      i2l6855 4584  
                                    i2l6863 4568                                      i2l7751 2446  
                                    i2l7743 2416                                      i2l7735 23E0  
                                    i2l7727 23AA                                      i2l7719 2376  
                                    i2l6769 44A6                                      i2l6849 45DE  
                                    i2l6865 456A                                      i2l6873 454E  
                                    i2l7761 248A                                      i2l7753 245A  
                                    i2l7745 2424                                      i2l7737 23EE  
                                    i2l7729 23BA                                      i2l7681 2262  
                                    i2l6859 4598                                      i2l6875 4550  
                                    i2l6883 4534                                      i2l7771 24CE  
                                    i2l7763 249E                                      i2l7755 2468  
                                    i2l7747 2432                                      i2l7739 23FE  
                                    i2l7691 22B0                                      i2l7683 2270  
                                    i2l6869 457E                                      i2l6885 4536  
                                    i2l6893 45C8                                      i2l7781 2522  
                                    i2l7773 24E2                                      i2l7765 24AC  
                                    i2l7757 2476                                      i2l7749 2442  
                                    i2l7693 22C2                                      i2l7685 2282  
                                    i2l6879 4564                                      i2l6895 45CA  
                                    i2l7791 2570                                      i2l7783 2530  
                                    i2l7775 24F0                                      i2l7767 24BA  
                                    i2l7759 2486                                      i2l7695 22D0  
                                    i2l7687 2290                                      i2l7679 2254  
                                    i2l6889 454A                                      i2l6897 45D0  
                                    i2l7793 2582                                      i2l7785 2542  
                                    i2l7777 2502                                      i2l7769 24CA  
                                    i2l7697 22DE                                      i2l7689 22A2  
                                    i2l7795 2590                                      i2l7787 2550  
                                    i2l7779 2510                                      i2l7699 22EE  
                                    i2l7797 25A2                                      i2l7789 2562  
                                    i2l7799 25B0                            __end_of___xxtofl 2CE4  
                             _RBx_Call_Back 0080                               ??_Timer2_init 000F  
               __end_of_dc_motor_move_right 42FA                                vfprintf@cfmt 0049  
                      _lcd_8bit_send_enable 421A                    CCP_PWM_set_DutyCycle@ret 00F8  
                                _Temp_value 0131                                   ??___fladd 0055  
                                 ??___fldiv 003C                                   ??___awdiv 0011  
                                 ??___awmod 0011                                   ??___flmul 0023  
                                 ??___fltol 0061                     __end_of_ADC_Read_Result 3C10  
                                 ??___lwdiv 0011                             ADC_init@ADC_obj 0010  
                      _lcd_8bit_send_string 3CB0                                      _memset 2E7A  
                                    clear_0 3FAC                                      clear_1 3FB8  
                                    clear_2 3FC4                            ___awdiv@quotient 0013  
                           ___awmod@divisor 000F                                      _timer2 00B5  
                                    isa$std 0001                             ___awmod@counter 0011  
                                    pad@buf 001F                                      dtoa@fp 0028  
               lcd_8bit_send_string_pos@ret 002F                 lcd_8bit_send_string_pos@row 002B  
                   _Timer2InterruptHandeler 009E                                      fputc@c 000D  
                                 ?_CCP1_ISR 0001                                      fputs@c 001A  
                                    fputs@i 001B                                   ?_CCP2_ISR 0001  
                                    fputs@s 0016                                __mediumconst 0000  
                                    tblptrh 0FF7                                      tblptrl 0FF6  
                                    tblptru 0FF8                                   ?_ADC_init 0010  
                                    putch@c 0001                            __end_of_vfprintf 421A  
                                 ?_CCP_Init 00F3                                   ??_sprintf 0053  
                   ADC_Start_Conversion@ret 000F                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                __accesstop 0080                     __end_of__initialization 3FCA  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                                 ?_INT2_ISR 0001                       _CCP_PWM_set_DutyCycle 28B8  
                             ___rparam_used 0001                                  ___fltol@f1 005D  
                     ?_lcd_8bit_send_enable 0017                                _CCP_PWM_Stop 40AE  
                    ??_gpio_pin_write_logic 0010                              __pcstackCOMRAM 0001  
                              __pidataBANK0 4438                                __pidataBANK1 459A  
                             __end_of_fputc 3870                               __end_of_fputs 433E  
                     ?_lcd_8bit_send_string 0022                convert_short_to_string@F3350 010B  
                             __end_of_putch 45F4                    __end_of_CCP_Timer_config 4170  
                            _INTx_Call_Back 0090                           RB5_ISR@RB5_source 0001  
                       __end_of_Timer2_init 3CB0                                  ??_CCP1_ISR 0001  
                                ??_CCP2_ISR 0001                      ??_ADC_Start_Conversion 000F  
                                ??_ADC_init 0012                          _lcd_8bit_send_char 3D4C  
              convert_short_to_string@value 0061                                  ??_CCP_Init 00F5  
                                   ??_fputc 0011                                     ??_fputs 001A  
                                   ??_putch 000D                  _CCP_PWM_set_DutyCycle$4213 00F9  
                                __pbssBANK0 0080                                  __pbssBANK1 0100  
                       ?_lcd_8bit_send_char 001A                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0001                                  ??_INT2_ISR 0001  
                    _application_initialize 4470          convert_short_to_string@DataCounter 00FA  
                    lcd_8bit_initialize@ret 0027                           led_turn_off@F3211 00B3  
                              ??_TIMER0_ISR 0001                                ??_TIMER1_ISR 0001  
                              ??_TIMER2_ISR 0001                                ??_TIMER3_ISR 0001  
                          ?_ADC_Read_Result 0001  ADC_StartConversion_INT@l_conversion_status 0018  
                                   _ADC_ISR 44A6                             led_toggle@F3216 00B2  
                                   ?_memset 000D                        ??_lcd_8bit_send_char 001D  
                           CCP_PWM_Stop@ret 0010                                     _RB4_ISR 4580  
                                   _RB5_ISR 4566                                     _RB6_ISR 454C  
                                   _RB7_ISR 4532                                   ?___xxtofl 000D  
                        _ADC_Select_Channel 43FE                           RB7_ISR@RB7_source 0001  
                       ?_ADC_Select_Channel 0010                                  _btn_values 1001  
                   ??_ADC_configure_Channel 000D                      ?_CCP_PWM_set_DutyCycle 00F3  
                            _tris_registers 00C6                          __end_of_TIMER0_ISR 45D6  
                        __end_of_TIMER1_ISR 45C8                          __end_of_TIMER2_ISR 45DE  
                        __end_of_TIMER3_ISR 45BA                     _Timer3InterruptHandeler 009C  
                    ??_lcd_8bit_send_enable 0019                                     __Hparam 0000  
                                   __Lparam 0000                                 _Timer2_init 3C10  
                    ??_lcd_8bit_send_string 0026                         _gpio_pin_initialize 4042  
                                   ___fladd 15BE                       _lcd_8bit_send_command 3DE2  
                                   ___fldiv 1EA8                                     ___awdiv 3870  
                                   ___awmod 3AB0                                     ___flmul 1A7E  
                                   ___fltol 35C4                                     ___lwdiv 3EF2  
                      ??_ADC_Select_Channel 0013                                   ?_vfprintf 0043  
                              __psmallconst 1000                                     _ccp_obj 00D0  
                                   __pcinit 3F66                                     __ramtop 1000  
                  _lcd_8bit_send_string_pos 4170                                     __ptext0 25C8  
                                   __ptext1 4170                                     __ptext2 3934  
                                   __ptext3 3CB0                                     __ptext4 3D4C  
                                   __ptext5 42B4                                     __ptext6 39F6  
                                   __ptext7 4268                                     __ptext8 41CA  
                                   __ptext9 3266                                   _T0CONbits 0FD5  
                                 _T1CONbits 0FCD             ??_gpio_pin_direction_initialize 000F  
                                 _T2CONbits 0FCA                                  ??___xxtofl 0011  
                                 _T3CONbits 0FB1                            ___awmod@dividend 000D  
                                   _motor_1 00F1                        ?_gpio_pin_initialize 0017  
                                   _sprintf 4268                              __pintcode_body 2242  
                      end_of_initialization 3FCA                                     fputc@fp 000F  
                                   memset@c 000F                                     memset@k 0015  
                                   memset@n 0011                                     memset@s 0017  
                 ADC_Select_Channel@ADC_obj 0010                                     int_func 2242  
                                   fputs@fp 0018            CCP_PWM_set_DutyCycle@l_duty_temp 00FD  
                         __end_of_vfpfcnvrt 3392                                     postdec1 0FE5  
                                   postdec2 0FDD                                     postinc0 0FEE  
                                   postinc1 0FE6                                     postinc2 0FDE  
                          vfpfcnvrt@convarg 003D                                  ??_vfprintf 0049  
                       lcd_8bit_send_char@i 0020                 dc_motor_move_right@dc_motor 0017  
                                 _PORTBbits 0F81                              _ecu_initialize 4518  
                               ___fladd@grs 005C                          Timer2_init@TM2_obj 000D  
                             ___xxtofl@sign 0015                       ??_gpio_pin_initialize 0019  
                               ___fldiv@grs 0047                                 ___fldiv@rem 0040  
           CCP_PWM_set_DutyCycle@Duty_value 00F5                                 ___flmul@grs 0029  
                 ADC_Select_Channel@channel 0012                                 _CCP1CONbits 0FBD  
                               _CCP2CONbits 0FBA                               _CCP_PWM_Start 3FD4  
                        relay_turn_on@F3202 0071                      ?_lcd_8bit_send_command 001A  
                         relay_toggle@F3212 006F              lcd_8bit_send_string_pos@column 002C  
                  ?_ADC_StartConversion_INT 0015                                 vfpfcnvrt@ap 0039  
                               vfpfcnvrt@cp 0041                                 vfpfcnvrt@fp 0035  
                    __end_of_ecu_initialize 4532              lcd_8bit_send_string_pos@string 002D  
                            _timer0_preload 00A4                           ?_CCP_Timer_config 000D  
                            __end_of_memset 2FF0                              _timer1_preload 00A0  
                            _timer2_preload 00B1                          ??_CCP_Timer_config 000F  
                       start_initialization 3F66                              _timer3_preload 009A  
                 lcd_8bit_send_char@lcd_obj 001A                         _lcd_8bit_initialize 3134  
                             _CCP_Init$4244 014D                               _CCP_Init$4245 0151  
                               __end_of_abs 43C0                                 __end_of_pad 3EF2  
     __end_of_gpio_pin_direction_initialize 3134               _gpio_pin_direction_initialize 2FF0  
                   ?_application_initialize 0001                         CCP_PWM_Stop@ccp_obj 000D  
                lcd_8bit_send_string@string 0024                     _convert_short_to_string 39F6  
                            ?_CCP_PWM_Start 000D                  convert_int_to_string@F3357 0100  
                      ?_lcd_8bit_initialize 0022                      ADC_Read_Result@ADC_obj 0001  
                               vfprintf@fmt 0045               CCP1_Compare_write_value@F3299 00A8  
                               __pdataBANK0 00BC                                 __pdataBANK1 013C  
                                  ?_ADC_ISR 0001                                    ??_memset 0013  
                           ?_ecu_initialize 0001                         _lcd_8bit_set_cursor 3934  
                                memset@dest 000D                    lcd_8bit_send_command@ret 001F  
                                 ___fladd@a 0051                                   ___fladd@b 004D  
                    _CCP1_InterruptHandeler 00AC                                   ___fldiv@a 0038  
                                 ___fldiv@b 0034                                    ?_RB4_ISR 0001  
                                  ?_RB5_ISR 0001                                    ?_RB6_ISR 0001  
                                  ?_RB7_ISR 0001                             fp__ADC_callback 0000  
                                 ___flmul@a 001F                                   ___flmul@b 001B  
                               __pbssCOMRAM 0067                               __pcstackBANK0 00F3  
                             __pcstackBANK1 014D              __end_of_application_initialize 44A6  
                   ??_CCP_PWM_set_DutyCycle 00F6                        ?_lcd_8bit_set_cursor 0022  
        convert_short_to_string@Temp_String 00F3                      ADC_Read_Result@Resualt 0003  
             __end_of_ADC_configure_Channel 37A6                                   __pnvBANK0 00FF  
                     ??_lcd_8bit_initialize 0024             __end_of_ADC_StartConversion_INT 4380  
                ??_lcd_8bit_send_string_pos 002F                            ___lwdiv@dividend 000D  
                                 _dtoa$3742 002C                                ?_Timer2_init 000D  
                                 __pintcode 0008                                    ?___fladd 004D  
                                  ?___fldiv 0034                                    ?___awdiv 000D  
                                  ?___awmod 000D                                    ?___flmul 001B  
                                  ?___fltol 005D                                    ?___lwdiv 000D  
                convert_short_to_string@ret 00F9                  convert_short_to_string@str 0063  
                               __smallconst 1000                     CCP_Timer_config@ccp_obj 000D  
                                  _CCP1_ISR 45EE                            CCP_PWM_Start@ret 0010  
                                  _CCP2_ISR 45EA                                    _ADC_init 34BE  
                          ___lwdiv@quotient 0011                                    _CCP_Init 105E  
                                  ?_sprintf 004B                               ?_ADC_callback 0001  
                 ??_convert_short_to_string 0065                       ??_lcd_8bit_set_cursor 0026  
                                  _INT0_ISR 45E6                                    _INT1_ISR 45E2  
                                  _INT2_ISR 45DE                             ??_CCP_PWM_Start 000F  
                                  _PIE1bits 0F9D                                    _PIE2bits 0FA0  
                                  _PIR1bits 0F9E                                    _PIR2bits 0FA1  
                                  i2u800_40 25A2                                    i2u800_41 259E  
                                  i2u801_40 25B0                                    i2u801_41 25AC  
                                  i2u492_40 3B76                                    i2u492_41 3B72  
                                  i2u493_40 3B88                                    i2u645_40 44BC  
                                  i2u493_41 3B84                                    i2u645_41 44B8  
                                  i2u494_40 3BAA                                    i2u750_40 2262  
                                  i2u494_41 3BA6                                    i2u750_41 225E  
                                  i2u495_40 3BD8                                    i2u646_48 44C2  
                                  i2u751_40 2270                                    i2u495_41 3BD4  
                                  i2u646_49 44D4                                    i2u751_41 226C  
                                  i2u656_40 4594                                    i2u760_40 2306  
                                  i2u752_40 2282                                    i2u656_41 4590  
                                  i2u760_41 2302                                    i2u752_41 227E  
                                  i2u496_45 3BF0                                    i2u657_40 457A  
                                  i2u761_40 2314                                    i2u753_40 2290  
                                  i2u657_41 4576                                    i2u761_41 2310  
                                  i2u753_41 228C                                    i2u658_40 4560  
                                  i2u770_40 23AA                                    i2u762_40 2322  
                                  i2u754_40 22A2                                    i2u658_41 455C  
                                  i2u770_41 23A6                                    i2u762_41 231E  
                                  i2u754_41 229E                                    i2u659_40 4546  
                                  i2u771_40 23BA                                    i2u763_40 2332  
                                  i2u755_40 22B0                                    i2u659_41 4542  
                                  i2u771_41 23B6                                    i2u763_41 232E  
                                  i2u755_41 22AC                                    i2u780_40 245A  
                                  i2u772_40 23D2                                    i2u764_40 234A  
                                  i2u756_40 22C2                                    i2u780_41 2456  
                                  i2u772_41 23CE                                    i2u764_41 2346  
                                  i2u756_41 22BE                                    i2u781_40 2468  
                                  i2u773_40 23E0                                    i2u765_40 2358  
                                  i2u757_40 22D0                                    i2u781_41 2464  
                                  i2u773_41 23DC                                    i2u765_41 2354  
                                  i2u757_41 22CC                                    i2u790_40 2502  
                                  i2u782_40 2476                                    i2u774_40 23EE  
                                  i2u766_40 2366                                    i2u758_40 22DE  
                                  i2u790_41 24FE                                    i2u782_41 2472  
                                  i2u774_41 23EA                                    i2u766_41 2362  
                                  i2u758_41 22DA                                    i2u791_40 2510  
                                  i2u783_40 2486                                    i2u775_40 23FE  
                                  i2u767_40 2376                                    i2u759_40 22EE  
                                  i2u791_41 250C                                    i2u783_41 2482  
                                  i2u775_41 23FA                                    i2u767_41 2372  
                                  i2u759_41 22EA                                    i2u792_40 2522  
                                  i2u784_40 249E                                    i2u776_40 2416  
                                  i2u768_40 238E                                    i2u792_41 251E  
                                  i2u784_41 249A                                    i2u776_41 2412  
                                  i2u768_41 238A                                    i2u793_40 2530  
                                  i2u785_40 24AC                                    i2u777_40 2424  
                                  i2u769_40 239C                                    i2u793_41 252C  
                                  i2u785_41 24A8                                    i2u777_41 2420  
                                  i2u769_41 2398                                    i2u794_40 2542  
                                  i2u786_40 24BA                                    i2u778_40 2432  
                                  i2u794_41 253E                                    i2u786_41 24B6  
                                  i2u778_41 242E                                    i2u795_40 2550  
                                  i2u787_40 24CA                                    i2u779_40 2442  
                                  i2u795_41 254C                                    i2u787_41 24C6  
                                  i2u779_41 243E                                    i2u796_40 2562  
                                  i2u788_40 24E2                                    i2u796_41 255E  
                                  i2u788_41 24DE                                    i2u797_40 2570  
                                  i2u789_40 24F0                                    i2u797_41 256C  
                                  i2u789_41 24EC                                    i2u798_40 2582  
                                  i2u798_41 257E                                    i2u799_40 2590  
                                  i2u799_41 258C                         _dc_motor_initialize 43C0  
          gpio_pin_direction_initialize@pin 000D            gpio_pin_direction_initialize@ret 0015  
                         RB4_ISR@RB4_source 0001                                   _vfpfcnvrt 3266  
                                _ADCON0bits 0FC2                                  _ADCON1bits 0FC1  
                                _ADCON2bits 0FC0                                    _RBx_flag 0067  
                    gpio_pin_initialize@pin 0017                      gpio_pin_initialize@ret 001A  
                 lcd_8bit_set_cursor@column 0025                             CCP_Init@ccp_obj 00F3  
                               ADC_init@ret 0013                        ?_dc_motor_initialize 001B  
                            ??_ADC_callback 0009                     gpio_pin_write_logic@log 000F  
                   gpio_pin_write_logic@pin 000D                     gpio_pin_write_logic@ret 0016  
                               _INTCON2bits 0FF1                                 _INTCON3bits 0FF0  
                                 copy_data0 3F7A                                   copy_data1 3F9A  
                     _ADC_InterruptCallBack 00AE                         _dc_motor_move_right 42B4  
                   lcd_8bit_send_enable@ret 0019                     ??_lcd_8bit_send_command 001D  
                                _EECON1bits 0FA6                                    __Hrparam 0000  
                             ?_CCP_PWM_Stop 000D                                  vfprintf@ap 0047  
                                  __Lrparam 0000                                  vfprintf@fp 0043  
           __end_of_convert_short_to_string 3AB0                                  ?_vfpfcnvrt 0035  
                      ?_dc_motor_move_right 0017                 __end_of_gpio_pin_initialize 40AE  
                        __end_of_btn_values 100D                                  sprintf@fmt 004D  
                         RB6_ISR@RB6_source 0001                                    ___xxtofl 2B30  
                      lcd_8bit_initialize@i 0025                       ??_dc_motor_initialize 001D  
                           ___lwdiv@divisor 000F                             ___lwdiv@counter 0013  
                                  __ptext10 2CE4                                    __ptext11 3E78  
                                  __ptext20 4518                                    __ptext12 42FA  
                                  __ptext21 3134                                    __ptext13 37A6  
                                  __ptext30 4114                                    __ptext22 3DE2  
                                  __ptext14 45F2                                    __ptext31 34BE  
                                  __ptext23 421A                                    __ptext15 4380  
                                  __ptext40 3FD4                                    __ptext32 3EF2  
                                  __ptext24 43C0                                    __ptext16 3AB0  
                                  __ptext41 433E                                    __ptext33 28B8  
                                  __ptext25 3C10                                    __ptext17 3870  
                                  __ptext50 4532                                    __ptext42 44D6  
                                  __ptext34 2B30                                    __ptext26 105E  
                                  __ptext18 2E7A                                    __ptext51 454C  
                                  __ptext43 43FE                                    __ptext35 35C4  
                                  __ptext27 4042                                    __ptext19 4470  
                                  __ptext60 44FA                                    __ptext52 4566  
                                  __ptext44 36CA                                    __ptext36 1A7E  
                                  __ptext28 3392                                    __ptext61 3B60  
                                  __ptext53 4580                                    __ptext37 1EA8  
                                  __ptext29 2FF0                                    __ptext62 0000  
                                  __ptext54 45DE                                    __ptext46 45AC  
                                  __ptext38 15BE                                    __ptext55 45E2  
                                  __ptext47 45D6                                    __ptext39 40AE  
                                  __ptext56 45E6                                    __ptext48 45BA  
                                  __ptext57 45EA                                    __ptext49 45C8  
                                  __ptext58 45EE                                    __ptext59 44A6  
                    dc_motor_move_right@ret 0019                           ??_ADC_Read_Result 0005  
            ADC_StartConversion_INT@ADC_obj 0015            __end_of_lcd_8bit_send_string_pos 41CA  
                            ??_CCP_PWM_Stop 000F                                 CCP_Init@ret 0155  
                          ??_ecu_initialize 0028                                    isa$xinst 0000  
                                  int$flags 0073                                    _vfprintf 41CA  
               dc_motor_initialize@dc_motor 001B                       ??_dc_motor_move_right 0019  
              ADC_configure_Channel@channel 000F                     _Timer0InterruptHandeler 00A6  
                                _INTCONbits 0FF2                      lcd_8bit_send_command@i 0020  
              __end_of_gpio_pin_write_logic 34BE                                    intlevel2 0000  
             __end_of_CCP_PWM_set_DutyCycle 2B30                                   sprintf@ap 0053  
            ADC_StartConversion_INT@channel 0017                __end_of_ADC_Start_Conversion 44FA  
                     ADC_Select_Channel@ret 0014                       lcd_8bit_send_char@chr 001C  
                     lcd_8bit_send_char@ret 001F                CCP_PWM_set_DutyCycle@ccp_obj 00F3  
                      __end_of_ADC_callback 4518                                  _TIMER0_ISR 45C8  
                                _TIMER1_ISR 45BA                                  _TIMER2_ISR 45D6  
                                _TIMER3_ISR 45AC                                 ??_vfpfcnvrt 003B  
                                  sprintf@f 0055                                    sprintf@s 004B  
                    _CCP2_InterruptHandeler 00AA                              _port_registers 013C  
                            Timer2_init@ret 0010                               ___fladd@signs 0059  
                   lcd_8bit_send_string@ret 0026                 __end_of_lcd_8bit_initialize 3266  
              lcd_8bit_send_command@lcd_obj 001A                lcd_8bit_send_command@command 001C  
                              ___fladd@aexp 005A                                ___fladd@bexp 005B  
                     _ADC_configure_Channel 36CA  
